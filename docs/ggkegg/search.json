[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"ggkegg fetches information KEGG parse, analyze visualize using ggplot2 ggraph. Combined packages investigating biological functions using KEGG.","code":""},{"path":"ggkegg.html","id":"ggkegg","chapter":"2 ggkegg","heading":"2 ggkegg","text":"ggkegg fetches information KEGG parse, analyze visualize using ggplot2 ggraph. Combined packages investigating biological functions using KEGG.","code":"\n# devtools::install_github(\"noriakis/ggkegg\")\nlibrary(ggkegg)\n#> Loading required package: ggplot2\n#> Warning: package 'ggplot2' was built under R version 4.2.3\n#> Loading required package: ggraph\n#> Warning: package 'ggraph' was built under R version 4.2.2\n#> Loading required package: XML\n#> Warning: package 'XML' was built under R version 4.2.3"},{"path":"pathway.html","id":"pathway","chapter":"3 Pathway","heading":"3 Pathway","text":"Providing ggkegg pathway ID, fetches information, parse make ggraph object. Inside, parse_kgml function used return igraph object.","code":""},{"path":"pathway.html","id":"visualize-the-result-of-enrichkegg","chapter":"3 Pathway","heading":"3.1 Visualize the result of enrichKEGG","text":"can visualize functional enrichment analysis result using enrichKEGG clusterProfiler. enrich_attribute boolean value whether investigated gene pathway .","code":"\nlibrary(ggkegg)\nlibrary(ggfx)\nlibrary(ggraph)\nlibrary(clusterProfiler)\ndata(geneList, package='DOSE')\nde <- names(geneList)[1:100]\nenrichKEGG(de, pvalueCutoff=0.01) |>\n  ggkegg(convert_org = \"hsa\",\n         pathway_number=1) +\n    geom_edge_link(\n    aes(color=subtype),\n    arrow = arrow(length = unit(1, 'mm')), \n    start_cap = square(1, 'cm'),\n    end_cap = square(1.5, 'cm')) + \n    geom_node_rect(aes(filter=.data$undefined & !.data$type==\"gene\"),\n                   fill=\"transparent\", color=\"red\")+\n    geom_node_rect(aes(filter=!.data$undefined &\n                         .data$type==\"gene\"), fill=\"white\", color=\"black\")+\n    geom_node_text(aes(label=converted_name,\n                       filter=.data$type == \"gene\"),\n                   size=2.5,\n                   color=\"black\",family=\"serif\")+\n    with_outer_glow(geom_node_text(aes(label=converted_name,\n                                       filter=.data$enrich_attribute),\n                                   size=2.5, color=\"red\"),\n                    colour=\"white\",\n                    expand=4)+\n    theme_void()"},{"path":"module.html","id":"module","chapter":"4 Module","heading":"4 Module","text":"Module information can obtained parsed. Parsing DEFINITION REACTION supported. definition, first function breaks definition steps, make graphical representation using ggraph text .","code":"\nlibrary(ggkegg)\nmod <- obtain_module(\"M00004\")\nmod\n#> $name\n#> [1] \"Pentose phosphate pathway (Pentose phosphate cycle)\"\n#> \n#> $definition\n#> [1] \"(K13937,((K00036,K19243) (K01057,K07404))) K00033 K01783 (K01807,K01808) K00615 ((K00616 (K01810,K06859,K15916)),K13810)\"\n#> \n#> $reaction\n#>  [1] \"R02736,R10907  C01172 -> C01236\"           \n#>  [2] \"R02035  C01236 -> C00345\"                  \n#>  [3] \"R01528,R10221  C00345 -> C00199\"           \n#>  [4] \"R01529  C00199 -> C00231\"                  \n#>  [5] \"R01056  C00199 -> C00117\"                  \n#>  [6] \"R01641  C00117 + C00231 -> C05382 + C00118\"\n#>  [7] \"R01827  C05382 + C00118 -> C00279 + C05345\"\n#>  [8] \"R01830  C00279 + C00231 -> C05345 + C00118\"\n#>  [9] \"R02740  C05345 -> C00668\"                  \n#> [10] \"R02739  C00668 -> C01172\""},{"path":"usecases.html","id":"usecases","chapter":"5 Usecases","heading":"5 Usecases","text":"","code":""}]
