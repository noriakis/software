[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"package aims visualize word text information contained gene omics identifiers microbiome, identify important words among clusters, compare clusters based information. contributes understanding gene clusters aid easy interpretation visualization. documentation using bookdown available , web server using shinyapps.io .example visualization shows annotation gene cluster network.Another example shows summarization 636 genes identified differential expression analysis BioFabric layout.","code":"\nlibrary(biotextgraph)\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/wordcloud\")\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"biotextgraph\"))\nnet <- refseq(d3degUpAssetta2016, numWords=40, autoThresh=FALSE, tag=\"cor\", genePlot=TRUE)\n#> Input genes: 636\n#>   Converted input genes: 552\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplot_biofabric(net, color_map=\"tag\")"},{"path":"basic-usage.html","id":"basic-usage","chapter":"2 Basic usage","heading":"2 Basic usage","text":"Load package database converting identifiers.\nexample, use mostly human-derived data, use org.Hs.eg.db.","code":"\nlibrary(biotextgraph)\nlibrary(org.Hs.eg.db)\nlibrary(ggplot2)\nlibrary(ggraph)\nlibrary(RColorBrewer)\nlibrary(ReactomePA)\nlibrary(clusterProfiler)\nlibrary(dendextend)\nlibrary(dplyr)\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"biotextgraph\"))"},{"path":"basic-usage.html","id":"producing-networks","chapter":"2 Basic usage","heading":"2.1 Producing networks","text":"main function producing networks words based co-occurrence correlation words text, given list gene identifiers. refseq function imports gene text RefSeq summarizes text information. , use seven ERCC genes input. function returns biotext class object, contains various types information. net slot stores ggraph, represents visualization result network.plotNet method plots network. can modify options visualization. layout coloring nodes edges without querying database . method wordcloud prepared plotWC. plotNet plotWC method default override preset visualization option, behaviour can turned specifying asis=TRUE. can obtain attribute slot getSlot method.\ndefault, gene ID type set SYMBOL. type can set keyType. many words commonly observed, filtering based pre-computed word frequency whole RefSeq data provided. limit word frequency excludeFreq, default 2000. TF-IDF summary also precomputed, exclude=\"tfidf\" can specified .visualization, edge label corresponding correlation cooccurrence values can shown edgeLabel=TRUE. number words shown plot can specified numWords. threshold correlation can specified corThresh. visualized network layout can specified passing layout argument. text color can changed colorText=TRUE. type edge can specified edgeLink, default TRUE (link used).\nOne main questions words can clustered together among words contained queried gene cluster. Word clustering (pvclust) identified significant clusters based occurrence text can visualized specifying tag=\"tdm\" tag=\"cor\". significance threshold, pvclAlpha can specified. default parameters perform pvclust subset dataset words high frequency specified numWords. one want perform whole matrix TDM (natural way), tagWhole=TRUE can specified tag=\"tdm\", although computationally intensive. One can pass clusters perform parallel computing owning pvclust function, specifying cl . tag coloring, tagPalette can used. igraph contained object can also plotted passing plot method.","code":"\n## Configure input genes\ninpSymbol <- c(\"ERCC1\",\"ERCC2\",\"ERCC3\",\"ERCC4\",\"ERCC5\",\"ERCC6\",\"ERCC8\")\nnet <- refseq(inpSymbol)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\nplotNet(net, asis=TRUE)\nnet <- refseq(inpSymbol, excludeFreq=1000)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 141 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.519\nplotNet(net, asis=TRUE)\nnet <- refseq(inpSymbol, plotType=\"network\",\n    edgeLabel=TRUE, corThresh=0.4,\n    numWords=20, colorText=TRUE, layout=\"kk\")\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\nplotNet(net, asis=TRUE)\nnet <- refseq(inpSymbol, plotType=\"network\", corThresh=0.2,\n    numWords=20, tag=\"cor\")\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotNet(net)\ngetSlot(net, \"pvpick\")\n#> $clusters\n#> $clusters[[1]]\n#> [1] \"complementation\" \"defects\"         \"pigmentosum\"    \n#> [4] \"xeroderma\"      \n#> \n#> $clusters[[2]]\n#> [1] \"activity\"      \"atpdependent\"  \"cockayne\"     \n#> [4] \"dna\"           \"transcription\"\n#> \n#> \n#> $edges\n#> [1]  8 13\nplot(net)"},{"path":"basic-usage.html","id":"identifying-important-genes-in-the-network","chapter":"2 Basic usage","heading":"2.2 Identifying important genes in the network","text":"important aim finding important genes (queries) network. genes associated words can shown specifying genePlot=TRUE, useful assessing words associated interesting genes. edges connecting words corresponding genes shown.\nOne can specify genePlotNum limiting genes shown ranking often gene associated high-frequency words. can useful identifying important genes among network.associated enriched pathways (present) can shown specifying genePathPlot, using ggforce. option, function first performs -representation analysis whole gene set, plot enriched terms included genes plot. Enrichment analysis performed library clusterProfiler ReactomePA, one can control pathways plot genePathPlotSig value.default, associated genes plotted without colorization (grey) without nodes. preferred, set colorize=TRUE colorize associated genes geneColor showing nodes adding pseudo-frequency corresponding minimum frequency words network. way, color nodes corresponding words shown gradient frequency, queried genes shown geneColor. addFreqToGene also adds pseudo-frequency gene nodes show node, colorized according specified minimum frequency.","code":"\nnet <- refseq(inpSymbol, plotType=\"network\",\n    genePlot=TRUE, corThresh=0.5,\n    tag=\"cor\", edgeLink=FALSE,\n    numWords=20)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotNet(net, asis=TRUE)\nlibrary(concaveman)\nlibrary(ggforce)\nnet <- refseq(inpSymbol, plotType=\"network\",\n    genePathPlot=\"reactome\", corThresh=0.5,\n    tag=\"cor\", edgeLink=FALSE,\n    genePathPlotSig=0.05, numWords=20)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Found 48 enriched term\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n\nplotNet(net, asis=TRUE)\nnet <- refseq(inpSymbol, plotType=\"network\",\n    genePlot=TRUE, corThresh=0.5,\n    colorize=TRUE, geneColor=\"pink\",\n    colorText=TRUE,\n    tag=\"cor\", edgeLink=FALSE,\n    numWords=20)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotNet(net, asis=TRUE)"},{"path":"basic-usage.html","id":"producing-word-clouds","chapter":"2 Basic usage","heading":"2.3 Producing word clouds","text":"basic usage package producing word cloud summaries identifiers. Specify plotType=\"wc\" use plot_wordcloud() function purpose.accepts values wordcloud() function. numWords specifies many words shown word cloud. words ordered frequency, subset 1:numWords used downstream visualization. arguments wordcloud visualization must passed argList arguments list. scaleFreq can specified scale frequency observation count low.default, preserve=TRUE, indicates funciton tries preserve original cases characters. Note lower case words capitalized words present, words converted capitalized words, like damage Damage shown Damage preserve=TRUE.also returns data frame consisting frequency term slot name freqDf.Table 2.1: Term frequencies.N-gram supported library tm, specified ngram.\nDefault 1, example specifying 2 shown .Using clusterProfiler functions, one can use enriched pathway names visualization.\nenrich option can specified 'kegg' 'reactome', time specify 'reactome'.word cloud, also possible visualize tag information colors. example , clustering performed matrices, results visualized based colors tagPalette.example querying ERCC genes, term DNA repair clustered expected.","code":"\nwc <- obtain_refseq(c(\"DDX41\",\"PNKP\",\"IRF3\")) |> make_corpus() |> make_TDM() |> plot_wordcloud()\n#> Input genes: 3\n#>   Converted input genes: 3\ngwc <- refseq(inpSymbol, plotType=\"wc\")\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotWC(gwc, asis=TRUE)\ngwc <- refseq(inpSymbol,\n    plotType=\"wc\",\n    numWords=100,\n    scaleFreq=2,\n    excludeFreq=5000,\n    argList=list(\n        \"random.order\"=FALSE,\n        colors=RColorBrewer::brewer.pal(8, \"Dark2\"),\n        \"rot.per\"=0.4)\n)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 30 words (frequency and/or tfidf)\nplotWC(gwc, asis=TRUE)\ngwc_p <- refseq(inpSymbol,\n    plotType=\"wc\",\n    numWords=100,\n    excludeFreq=5000,\n    preserve=FALSE,\n    argList=list(\n        rot.per=0.4,\n        colors=RColorBrewer::brewer.pal(8, \"Set2\"),\n        random.order=FALSE)\n)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 30 words (frequency and/or tfidf)\nplotWC(gwc_p, asis=TRUE)\ngwc\n#> Type: refseq\n#> Number of words: 100\n#> Query: ERCC1/ERCC2/ERCC3/ERCC4/ERCC5/ERCC6/ERCC8\n#> 204.1 Kb\nknitr::kable(\n    head(getSlot(gwc, \"freqDf\")),\n    caption = 'Term frequencies.',\n    row.names = FALSE\n)\ngwc2 <- refseq(inpSymbol,\n    ngram=2,\n    numWords=50,\n    plotType=\"wc\",\n    argList=list(\n        rot.per=0.4,\n        colors=RColorBrewer::brewer.pal(8, \"Set2\"),\n        random.order=FALSE)\n)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the existing scale.\nplotWC(gwc2, asis=TRUE)\ngwc3 <- refseq(inpSymbol,\n    plotType=\"wc\",\n    enrich=\"reactome\",\n    tfidf=TRUE, numWords=50)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Performing enrichment analysis\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the existing scale.\nplotWC(gwc3, asis=TRUE)\n## Prepare the palette for tag coloring\npal <- RColorBrewer::brewer.pal(8, \"Dark2\") \npal <- colorRampPalette(pal)(20)\n## Cluster on whole matrix\ngwclWhole <- refseq(inpSymbol,\n    numWords=50,\n    plotType=\"wc\",\n    tag=\"cor\",\n    tagPalette = pal,\n    scaleFreq=5,\n    cl=snow::makeCluster(8),\n    argList=list(rot.per=0.4)\n)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Multiscale bootstrap... Done.\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the existing scale.\n\ngetSlot(gwclWhole, \"pvpick\")\n#> $clusters\n#> $clusters[[1]]\n#> [1] \"pigmentosum\" \"xeroderma\"  \n#> \n#> $clusters[[2]]\n#> [1] \"dna\"    \"repair\"\n#> \n#> $clusters[[3]]\n#>  [1] \"abnormally\"                \"activates\"                \n#>  [3] \"active\"                    \"activity\"                 \n#>  [5] \"adjacent\"                  \"alter\"                    \n#>  [7] \"atpase\"                    \"atpdependent\"             \n#>  [9] \"atpstimulated\"             \"basal\"                    \n#> [11] \"basic\"                     \"belongs\"                  \n#> [13] \"bivm\"                      \"cerebrooculofacioskeletal\"\n#> [15] \"characterized\"             \"complementation\"          \n#> [17] \"damage\"                    \"defects\"                  \n#> [19] \"exon\"                      \"factor\"                   \n#> [21] \"forms\"                     \"functions\"                \n#> [23] \"helicase\"                  \"heterodimeric\"            \n#> [25] \"incision\"                  \"including\"                \n#> [27] \"interacts\"                 \"light\"                    \n#> [29] \"nucleotide\"                \"orf\"                      \n#> [31] \"pathway\"                   \"piggybackderived3\"        \n#> [33] \"product\"                   \"result\"                   \n#> [35] \"skin\"                      \"specific\"                 \n#> [37] \"splice\"                    \"transcriptioncoupled\"     \n#> [39] \"trichothiodystrophy\"       \"type\"                     \n#> [41] \"upstream\"                 \n#> \n#> \n#> $edges\n#> [1] 16 41 43\nplotWC(gwclWhole, asis=TRUE)"},{"path":"basic-usage.html","id":"plotting-associated-genes-in-wc","chapter":"2 Basic usage","heading":"2.3.1 Plotting associated genes in WC","text":"using feature label_content ggwordcloud, user can choose plot associated gene names along words, genePlot=TRUE, network.","code":"\ngeneplotWC <- refseq(inpSymbol,\n    numWords=50,\n    plotType=\"wc\",\n    tag=\"cor\",\n    genePlot=TRUE,\n    tagPalette = pal,\n    scaleFreq=5,\n    cl=snow::makeCluster(8),\n    argList=list(rot.per=0.4)\n)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#> Multiscale bootstrap... Done.\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\nplotWC(geneplotWC, asis=TRUE)"},{"path":"basic-usage.html","id":"visualization-of-pubmed-information.","chapter":"2 Basic usage","heading":"2.4 Visualization of PubMed information.","text":"Using rentrez, one can perform analysis PubMed text like article title abstract. function queries input gene symbols (queries) visualize. typical use cases, genes identified showing genePlot, hub genes identified gene network analysis can queried. basic parameters searching PubMed, like max number articles retrieved sort articles can specified retMax sortOrder. sure obtain api key querying heavily, specify apiKey argument. functions including pubmed refseq serve wrappers several functions, detailed explanation can found 11.returned PubMed IDs stored pmids slot.fetching information desirable time consuming, object can passed redo option re-perform analysis like tagging, changing visualization options. Also, using obtain_pubmed function, text can obtained processed downstream functions.gene symbols plotted, specify onlyGene=TRUE.sometimes case results search dominated one well-investigated well-characterized genes (TP53).\novercome , perQuery option can specified search database one one. recommended use API key querying large number genes.","code":"\nab <- pubmed(inpSymbol[1:3], retMax=20, apiKey=apiKey, plotType=\"wc\")\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the existing scale.\nplotWC(ab, asis=TRUE)\npmids <- getSlot(ab, \"pmids\")\npmids |> length()\n#> [1] 20\nabtag <- pubmed(redo=ab, tag=\"tdm\", cl=snow::makeCluster(10), apiKey=apiKey)\n#> Resuming from the previous results\n#> Multiscale bootstrap... Done.\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.401\nabtag2 <- pubmed(redo=abtag, tag=\"tdm\", genePlot=TRUE,\n    plotType=\"network\", corThresh=0.2, pre=TRUE, apiKey=apiKey)\n#> Resuming from the previous results\n#> Using previous pvclust resultsIgnoring corThresh, automatically determine the value\n#> threshold = 0.401\nplotNet(abtag2, asis=TRUE)\nnet <- pubmed(inpSymbol[1:5], plotType=\"network\",\n    onlyGene=TRUE, apiKey=apiKey, numWords=150)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.6\n#> Subsetting to the gene symbol in orgDb\nplotNet(net, asis=TRUE)\nnetPerQuery <- pubmed(inpSymbol[1:5], perQuery=TRUE, onlyGene=TRUE, apiKey=apiKey, numWords=150)\n#>   Querying ERCC1\n#>   Querying ERCC2\n#>   Querying ERCC3\n#>   Querying ERCC4\n#>   Querying ERCC5\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.3\n#> Subsetting to the gene symbol in orgDb\nplotNet(netPerQuery, asis=TRUE)"},{"path":"basic-usage.html","id":"comparing-two-or-more-networks","chapter":"2 Basic usage","heading":"2.5 Comparing two or more networks","text":"One can compare two networks providing list biotext objects produced text mining various databases, like refseq, pubmed, obtain_refseq, etc. can useful assessing similarity dissimilarity various text sources, like PubMed, RefSeq, Reactome pathway names. Additionally, performing graph-based clustering merged networks can potentially identify groups related terms within overall network.tag information available gene clusters, combined tags can visualized tag=TRUE. using geom_mark_hull show tagging information, specify hull=TRUE compareWordNet.application example using text mining transcriptome analysis BK polyomavirus infection combining functions described 9.","code":"\ncxcls <- c()\nfor (i in c(1,2,3,5,6,8,9,10,11,12,13,14,16)){\n    cxcls <- c(cxcls, paste0(\"CXCL\",i))\n}\n\nnet1 <- refseq(inpSymbol, plotType=\"network\",\n    corThresh=0.5, numWords=20)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\nnet2 <- refseq(cxcls, plotType=\"network\",\n    corThresh=0.5, numWords=20)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.4\nnet3 <- pubmed(redo=ab, plotType=\"network\",\n    corThresh=0.2, numWords=20)\n#> Resuming from the previous results\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.301\n\n## Not having meaningful overlaps\ncompareWordNet(list(net1, net2),\n    titles=c(\"ercc\",\"cxcl\")) |> plotNet()\ncompareWordNet(list(net1, net3),\n    titles=c(\"ercc\",\"ercc-PubMed\")) |> plotNet()\ncompareWordNet(list(net1, net2, net3),\n    titles=c(\"ercc\",\"cxcl\", \"ercc-PubMed\")) |> plotNet()\nkeggPathways <- org.Hs.egPATH2EG\nmappedKeys <- mappedkeys(keggPathways)\nkeggList <- as.list(keggPathways[mappedKeys])\n\nnet1 <- refseq(keggList$`04110`,\n    keyType=\"ENTREZID\",\n    corThresh=0.3,\n    numWords=30,\n    tag=\"cor\",\n    tfidf=TRUE)\n#> Input genes: 124\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n\nnet2 <- refseq(keggList$`04210`,\n    keyType=\"ENTREZID\",\n    corThresh=0.3,\n    numWords=30,\n    tfidf=TRUE,\n    tag=\"cor\")\n#> Input genes: 87\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n\ncompareWordNet(list(net1, net2), tag=TRUE, hull=TRUE) |> plotNet()"},{"path":"basic-usage.html","id":"connecting-the-networks-and-identify-shared-genes","chapter":"2 Basic usage","heading":"2.5.1 Connecting the networks and identify shared genes","text":"specify genePlot (equivalent) calculating network networks, can connect two networks based specific words showing relevant genes using connectGenes(). states genes title, can used networks besides genes. default, queried word retrieved original network, specifying neighbors, fecthes neighbor words.","code":"\nlibrary(scales)\nnet1 <- refseq(keggList$`04110`, keyType=\"ENTREZID\", corThresh=0.3, numWords=30, genePlot=TRUE)\n#> Input genes: 124\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\nnet2 <- refseq(keggList$`04114`, keyType=\"ENTREZID\", corThresh=0.3, numWords=30, genePlot=TRUE)\n#> Input genes: 112\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\nconnectGenes(list(\"4110\"=net1, \"4114\"=net2), \"cycle\", neighbor=TRUE) |>\n    tidygraph::as_tbl_graph() |>\n    mutate(SYMBOL=name %in% keys(org.Hs.eg.db, \"SYMBOL\")) |> ## Highlighy symbol\nggraph(layout=\"nicely\")+\n    geom_edge_diagonal(color=\"grey\")+\n    geom_node_point(aes(filter=.data$SYMBOL), size=2, color=muted(\"red\"))+\n    graphhighlight::highlight_node(glow=TRUE, filter=SYMBOL,\n        glow_base_size = TRUE, glow_size=0.5,highlight_color = muted(\"red\"))+\n    geom_node_point(aes(filter=!.data$SYMBOL), size=2)+\n    geom_node_text(aes(label=name, filter=name!=\"cycle\"), repel=TRUE, bg.colour=\"white\") +\n    geom_node_text(aes(label=name, filter=name==\"cycle\"), size=6, repel=TRUE, bg.colour=\"white\") +\n    theme_graph()"},{"path":"basic-usage.html","id":"text-over-represenatation-analysis-experimental","chapter":"2 Basic usage","heading":"2.6 Text over represenatation analysis (experimental)","text":"RefSeq, overrepresentation-based filtering prioritization words can performed using pre-computed background.thresholding can used RefSeq visualization functions.\nFilter words using ORA threshold frequency threshold setting ora=TRUE.obtaining ORA results, one can plot volcano-plot like plot results using plotORA function.","code":"\ngeneList <- keggList$`00785` # Lipoic acid metabolism\npvs <- textORA(geneList)\nhist(pvs)\npvs[order(pvs)] |> head()\n#>            lipoic              step              acid \n#>      1.600963e-14      8.016934e-08      5.300425e-07 \n#> lipoateactivating  lipoatedependent            lipoyl \n#>      1.484931e-04      1.484931e-04      1.484931e-04\n\ngeneList <- keggList$`05150` # Staphylococcus aureus infection\npvs <- textORA(geneList)\nhist(pvs)\npvs[order(pvs)] |> head()\n#>          drb        chain   complement        class \n#> 0.000000e+00 3.669590e-82 3.266180e-74 5.496543e-46 \n#>         exon         beta \n#> 6.851722e-39 1.318324e-34\nnet <- refseq(inpSymbol, plotType=\"network\",\n                     ora=TRUE, edgeLink=FALSE)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 148 words (ORA)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\nplotNet(net, asis=TRUE)\nlibrary(ggrepel)\nplotORA(net)"},{"path":"basic-usage.html","id":"dependency-analyis-using-udpipe","chapter":"2 Basic usage","heading":"2.7 Dependency analyis using udpipe","text":"Using udpipe package (Straka Straková. 2017), one can performe dependency analysis texts various databases. Set useUdpipe TRUE, specify downloaded model used udpipeModel.","code":"\np <- biotextgraph::refseq(c(\"DDX41\",\"PNKP\",\"ERCC2\"),\n    plotType=\"network\", useUdpipe=TRUE,\n    udpipeModel=\"english-ewt-ud-2.5-191206.udpipe\")\n#> Using udpipe mode\n#> Input genes: 3\n#>   Converted input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotNet(p, asis=TRUE)"},{"path":"basic-usage.html","id":"changing-the-font","chapter":"2 Basic usage","heading":"2.8 Changing the font","text":"Font can specified fontFamily, affects labels including edges nodes.complex networks, changing layout possible small function changeLayout.\nSpecify layout algorithm choose igraph. can also accomplished specifying layout plotNet method.","code":"\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"biotextgraph\"))\ndegs <- d3degUpAssetta2016\n## Use alien encounter fonts (http://www.hipsthetic.com/alien-encounters-free-80s-font-family/)\nsysfonts::font_add(family=\"alien\",regular=\"SFAlienEncounters.ttf\")\np <- biotextgraph::refseq(degs,\n    plotType=\"network\",\n    numWords=50, genePlot=TRUE,\n    fontFamily=\"alien\", autoThresh=FALSE,\n    colorText=TRUE)\n#> Input genes: 636\n#>   Converted input genes: 552\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotNet(p, asis=TRUE)\nchangeLayout(p, igraph::layout.graphopt) |> plotNet(asis=TRUE)"},{"path":"basic-usage.html","id":"biofabric-layout","chapter":"2 Basic usage","heading":"2.9 Biofabric layout","text":"possible use BioFabric layout extracted igraph. case, one wants add text position x-axis using biotextgraph::obtainTextPosition. beautiful BioFabric layout, please refer original homepage , publication available (Longabaugh, W.J. 2012).","code":"\nex <- refseq(c(\"DDX41\",\"PNKP\"), autoThresh=FALSE, genePlot=TRUE)\n#> Input genes: 2\n#>   Converted input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nex <- getSlot(ex, \"igraph\") |> obtainTextPosition() ## Obtain text position for the X-axis\nex |> \nggraph(\"fabric\",\n  sort.by = node_rank_fabric())+\n    geom_node_range() +\n    geom_edge_span(end_shape = 'circle') +\n    geom_node_text(aes(x=xmin-4, label=name), size=2.5)+\n    shadowtext::geom_shadowtext(aes(x=center,\n            color=nodeCat, y=y+1, label=name),\n        size=2.5, bg.colour=\"white\")+\n    scale_color_manual(values=c(\"grey20\", \"grey80\"))+\n    theme_graph()"},{"path":"basic-usage.html","id":"highlighting-genes-in-the-layout","chapter":"2 Basic usage","heading":"2.9.1 Highlighting genes in the layout","text":"practical use, highlight gene names layout using ggfx.","code":"\nlibrary(ggfx)\n\n# Use sample DEGs\nex <- suppressMessages(refseq(d3degUpAssetta2016,\n                              genePlot=TRUE,\n                              numWords=50,\n                              preserve=FALSE,\n                              autoThresh=FALSE))\n#> Input genes: 636\n#>   Converted input genes: 552\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n\n# Obtain text positions, and plot using various geoms.\ngetSlot(ex, \"igraph\") |> obtainTextPosition(verbose=FALSE)  |>\n  ggraph(\"fabric\", sort.by = node_rank_fabric())+\n    geom_node_range(aes(color=nodeCat)) +\n    geom_edge_span(end_shape = 'circle') +\n    with_outer_glow(ggkegg::geom_node_shadowtext(aes(x=xmin-4, label=name, filter=type==\"Genes\"), size=2.5,\n                                                 color=\"tomato\", bg.colour=\"white\"), \"gold\",expand=5)+ ## Show genes (shadowtext + ggfx)\n    geom_node_text(aes(x=xmin-4, label=name, filter=type!=\"Genes\"), size=2)+\n    ggkegg::geom_node_shadowtext(aes(x=center, size=xmin, filter=type!=\"Genes\", color=nodeCat, y=y+1, label=name), bg.colour=\"white\")+\n    with_outer_glow(ggkegg::geom_node_shadowtext(aes(x=center, filter=type==\"Genes\", color=nodeCat, y=y+1, label=name),\n                                                 size=2.5, bg.colour=\"white\"),\"gold\",expand=5)+\n    scale_color_manual(values=c(\"tomato\", \"grey20\"),name=\"Category\")+\n    theme_graph() +\n    scale_size(trans = 'reverse', range=c(1.5,2))+\n    guides(size=\"none\")"},{"path":"basic-usage.html","id":"biofabric-layouts-for-combined-networks","chapter":"2 Basic usage","heading":"2.9.2 Biofabric layouts for combined networks","text":"Can used cojuction compareWordNet(). BioFabric layout especially useful visualizing complex networks. interactively inspecting complex networks, please refer section 4.3.1.","code":"\nnet1 <- refseq(keggList$`04110`, keyType=\"ENTREZID\",\n               corThresh=0.3, numWords=30, autoThresh=FALSE)\n#> Input genes: 124\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nnet2 <- refseq(keggList$`04114`, keyType=\"ENTREZID\",\n               corThresh=0.3, numWords=30, autoThresh=FALSE)\n#> Input genes: 112\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\ncomp <- compareWordNet(list(net1, net2),titles=c(\"4110\",\"4114\"))\n\n## Grouping is stored in `col` variable of nodes\nggraph(getSlot(comp, \"igraphRaw\") |> obtainTextPosition(), \"fabric\",sort.by=node_rank_fabric())+\n    geom_node_range() +\n    geom_edge_span(end_shape = 'circle') +\n    geom_node_shadowtext(aes(x=.data$xmin-4,\n        label=.data$name), color=\"grey20\",size=2, bg.colour=\"white\")+\n    geom_node_shadowtext(aes(x=.data$center,\n        y=.data$y+1, label=.data$name, color=col), bg.colour=\"white\", size=2)+\n    theme_graph()"},{"path":"basic-usage.html","id":"wrapper-for-biofabric-layout","chapter":"2 Basic usage","heading":"2.9.3 Wrapper for BioFabric layout","text":"funciton plot_biofabric prepared, accepts biotext class object.","code":"\nex |> plot_biofabric(end_shape=\"square\")"},{"path":"basic-usage.html","id":"dynamic-layout","chapter":"2 Basic usage","heading":"2.10 Dynamic layout","text":"Dynamic layout can also used compare networks, graphlayouts, comparing multiple graphs, especially useful time-series analysis. See documentation layout_as_dynamic specifying alpha, default 0.5.","code":"\nlibrary(igraph)\ndyn <- plotDynamic(list(net1, net2), concat=\"union\")\ndyn"},{"path":"basic-usage.html","id":"input-type","chapter":"2 Basic usage","heading":"2.11 Input type","text":"input types can used conveniently perform text mining. refseqWGCNA accepts blockwiseModules() results WGCNA, recursively returns biotext class object cluster.refseqDESeq2 accepts resulting object DESeq2::results() function, specified criteria LFC p-values returns biotext class object like follows.","code":"\nload(\"./blockwiseModule.rda\")\ntest <- refseqWGCNA(bwmod)\n#> Processing a total of 17 clusters\n#> Input genes: 621\n#>   Converted input genes: 534\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> Input genes: 2192\n#>   Converted input genes: 2017\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0\n#> Input genes: 12943\n#>   Converted input genes: 9875\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0\n#> Input genes: 5534\n#>   Converted input genes: 4644\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0\n#> Input genes: 653\n#>   Converted input genes: 533\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> Input genes: 591\n#>   Converted input genes: 471\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> Input genes: 740\n#>   Converted input genes: 577\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.104\n#> Input genes: 89\n#>   Converted input genes: 87\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.103\n#> Input genes: 43\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\n#> Input genes: 39\n#>   Converted input genes: 37\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.107\n#> Input genes: 43\n#>   Converted input genes: 42\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.308\n#> Input genes: 41\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\n#> Input genes: 42\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.203\n#> Input genes: 40\n#>   Converted input genes: 33\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.317\n#> Input genes: 112\n#>   Converted input genes: 65\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.507\n#> Input genes: 38\n#>   Converted input genes: 38\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\n#> Input genes: 139\n#>   Converted input genes: 58\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.641\nlength(test)\n#> [1] 17\ntest[[1]]@net + test[[2]]@net\nlibrary(DESeq2)\nlibrary(org.Hs.eg.db)\ndds <- makeExampleDESeqDataSet(m=4)\ndds <- DESeq(dds)\nres <- results(dds, contrast=c(\"condition\",\"B\",\"A\"))\nset.seed(123)\nrow.names(res) <- sample(keys(org.Hs.eg.db, \"ENSEMBL\"), nrow(res))\nres\n#> log2 fold change (MLE): condition B vs A \n#> Wald test p-value: condition B vs A \n#> DataFrame with 1000 rows and 6 columns\n#>                  baseMean log2FoldChange     lfcSE\n#>                 <numeric>      <numeric> <numeric>\n#> ENSG00000134910    0.0000             NA        NA\n#> ENSG00000271702   50.2927       1.069097  0.741541\n#> ENSG00000232764   27.5563       0.326519  0.868801\n#> ENSG00000266610   55.0974       0.833955  0.720673\n#> ENSG00000121351   11.4532      -0.830936  1.349457\n#> ...                   ...            ...       ...\n#> ENSG00000067560  58.98350      0.8363000  0.700295\n#> ENSG00000207714 362.38625      0.2839425  0.427786\n#> ENSG00000184990   1.91443      0.0455055  2.882155\n#> ENSG00000223548  15.13427     -0.2184717  1.131090\n#> ENSG00000169976  14.83963      0.3887442  1.098821\n#>                       stat    pvalue      padj\n#>                  <numeric> <numeric> <numeric>\n#> ENSG00000134910         NA        NA        NA\n#> ENSG00000271702   1.441724  0.149380  0.993345\n#> ENSG00000232764   0.375827  0.707046  0.993345\n#> ENSG00000266610   1.157189  0.247195  0.993345\n#> ENSG00000121351  -0.615756  0.538056  0.993345\n#> ...                    ...       ...       ...\n#> ENSG00000067560  1.1942105  0.232396  0.993345\n#> ENSG00000207714  0.6637483  0.506851  0.993345\n#> ENSG00000184990  0.0157887  0.987403  0.999979\n#> ENSG00000223548 -0.1931515  0.846840  0.993345\n#> ENSG00000169976  0.3537831  0.723501  0.993345\n\nrefseqDESeq2(res, log2FoldChange>2) |> plotNet(asis=TRUE)\n#> Input genes: 59\n#>   Converted input genes: 87\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1"},{"path":"basic-usage.html","id":"split-by-ea","chapter":"2 Basic usage","heading":"2.12 Split by EA","text":"splitByEA option enabled, function first performs enrichment analysis queried input, output list biotext object significant pathway, well related significant pathways. useful confirming prior knowledge terms textual information perspective.","code":"\neanets <- refseq(inpSymbol, splitByEA=\"reactome\")\n#> Total of 48 pathways, including non-enrichment terms\n#> Input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Input genes: 5\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.7\n#> Input genes: 5\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.7\n#> Input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Input genes: 5\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.7\n#> Input genes: 4\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.8\n#> Input genes: 4\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.8\n#> Input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\n#> Input genes: 2\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 1\nsessionInfo()\n#> R version 4.3.0 (2023-04-21)\n#> Platform: x86_64-pc-linux-gnu (64-bit)\n#> Running under: CentOS Linux 7 (Core)\n#> \n#> Matrix products: default\n#> BLAS:   /usr/local/package/r/4.3.0/lib64/R/lib/libRblas.so \n#> LAPACK: /usr/local/package/r/4.3.0/lib64/R/lib/libRlapack.so;  LAPACK version 3.11.0\n#> \n#> locale:\n#>  [1] LC_CTYPE=ja_JP.UTF-8       LC_NUMERIC=C              \n#>  [3] LC_TIME=ja_JP.UTF-8        LC_COLLATE=ja_JP.UTF-8    \n#>  [5] LC_MONETARY=ja_JP.UTF-8    LC_MESSAGES=ja_JP.UTF-8   \n#>  [7] LC_PAPER=ja_JP.UTF-8       LC_NAME=C                 \n#>  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n#> [11] LC_MEASUREMENT=ja_JP.UTF-8 LC_IDENTIFICATION=C       \n#> \n#> time zone: Asia/Tokyo\n#> tzcode source: system (glibc)\n#> \n#> attached base packages:\n#> [1] stats4    stats     graphics  grDevices utils    \n#> [6] datasets  methods   base     \n#> \n#> other attached packages:\n#>  [1] ggkegg_1.1.7          testthat_3.1.10      \n#>  [3] XML_3.99-0.15         tidygraph_1.2.3      \n#>  [5] ggfx_1.0.1            igraph_1.5.1         \n#>  [7] GetoptLong_1.0.5      ggrepel_0.9.4        \n#>  [9] dplyr_1.1.2           dendextend_1.17.1    \n#> [11] clusterProfiler_4.8.3 ReactomePA_1.44.0    \n#> [13] RColorBrewer_1.1-3    ggraph_2.1.0         \n#> [15] org.Hs.eg.db_3.18.0   AnnotationDbi_1.64.1 \n#> [17] IRanges_2.34.1        S4Vectors_0.38.1     \n#> [19] Biobase_2.60.0        BiocGenerics_0.46.0  \n#> [21] biotextgraph_0.99.0   ggplot2_3.4.2        \n#> \n#> loaded via a namespace (and not attached):\n#>   [1] splines_4.3.0           later_1.3.1            \n#>   [3] filelock_1.0.2          bitops_1.0-7           \n#>   [5] ggplotify_0.1.2         tibble_3.2.1           \n#>   [7] polyclip_1.10-6         graph_1.80.0           \n#>   [9] lifecycle_1.0.3         rprojroot_2.0.3        \n#>  [11] bugsigdbr_1.8.1         processx_3.8.2         \n#>  [13] NLP_0.2-1               lattice_0.21-8         \n#>  [15] MASS_7.3-58.4           magrittr_2.0.3         \n#>  [17] sass_0.4.7              rmarkdown_2.23         \n#>  [19] remotes_2.4.2.1         jquerylib_0.1.4        \n#>  [21] yaml_2.3.7              httpuv_1.6.11          \n#>  [23] sessioninfo_1.2.2       pkgbuild_1.4.2         \n#>  [25] cowplot_1.1.1           DBI_1.1.3              \n#>  [27] pkgload_1.3.2.1         zlibbioc_1.46.0        \n#>  [29] purrr_1.0.2             downlit_0.4.3          \n#>  [31] RCurl_1.98-1.13         yulab.utils_0.1.0      \n#>  [33] tweenr_2.0.2            rappdirs_0.3.3         \n#>  [35] pvclust_2.2-0           GenomeInfoDbData_1.2.10\n#>  [37] ISOcodes_2022.09.29     enrichplot_1.20.3      \n#>  [39] cyjShiny_1.0.42         tm_0.7-11              \n#>  [41] tidytree_0.4.5          rentrez_1.2.3          \n#>  [43] reactome.db_1.84.0      ggwordcloud_0.6.0      \n#>  [45] commonmark_1.9.0        codetools_0.2-19       \n#>  [47] DOSE_3.26.2             xml2_1.3.5             \n#>  [49] ggforce_0.4.1           tidyselect_1.2.0       \n#>  [51] aplot_0.2.2             farver_2.1.1           \n#>  [53] viridis_0.6.4           GeneSummary_0.99.6     \n#>  [55] BiocFileCache_2.8.0     base64enc_0.1-3        \n#>  [57] showtext_0.9-6          jsonlite_1.8.7         \n#>  [59] ellipsis_0.3.2          systemfonts_1.0.4      \n#>  [61] tools_4.3.0             ragg_1.2.5             \n#>  [63] treeio_1.24.3           snow_0.4-4             \n#>  [65] Rcpp_1.0.11             glue_1.6.2             \n#>  [67] gridExtra_2.3           xfun_0.40              \n#>  [69] usethis_2.2.2           qvalue_2.32.0          \n#>  [71] GenomeInfoDb_1.36.4     withr_2.5.0            \n#>  [73] fastmap_1.1.1           fansi_1.0.4            \n#>  [75] callr_3.7.3             digest_0.6.33          \n#>  [77] R6_2.5.1                mime_0.12              \n#>  [79] gridGraphics_0.5-1      textshaping_0.3.6      \n#>  [81] colorspace_2.1-0        Cairo_1.6-1            \n#>  [83] GO.db_3.17.0            markdown_1.11          \n#>  [85] RSQLite_2.3.3           utf8_1.2.3             \n#>  [87] tidyr_1.3.0             generics_0.1.3         \n#>  [89] data.table_1.14.8       prettyunits_1.1.1      \n#>  [91] graphlayouts_1.0.2      stopwords_2.3          \n#>  [93] httr_1.4.6              htmlwidgets_1.6.2      \n#>  [95] scatterpie_0.2.1        graphite_1.46.0        \n#>  [97] pkgconfig_2.0.3         gtable_0.3.3           \n#>  [99] blob_1.2.4              XVector_0.40.0         \n#> [101] brio_1.1.3              shadowtext_0.1.2       \n#> [103] htmltools_0.5.6         profvis_0.3.8          \n#> [105] sysfonts_0.8.8          bookdown_0.36          \n#> [107] fgsea_1.26.0            scales_1.2.1           \n#> [109] png_0.1-8               wordcloud_2.6          \n#> [111] ggfun_0.1.3             ggdendro_0.1.23        \n#> [113] knitr_1.43              rstudioapi_0.15.0      \n#> [115] reshape2_1.4.4          rjson_0.2.21           \n#> [117] curl_5.0.1              nlme_3.1-162           \n#> [119] showtextdb_3.0          cachem_1.0.8           \n#> [121] GlobalOptions_0.1.2     stringr_1.5.0          \n#> [123] miniUI_0.1.1.1          parallel_4.3.0         \n#> [125] HDO.db_0.99.1           desc_1.4.2             \n#> [127] pillar_1.9.0            grid_4.3.0             \n#> [129] vctrs_0.6.3             urlchecker_1.0.1       \n#> [131] slam_0.1-50             promises_1.2.1         \n#> [133] dbplyr_2.3.3            xtable_1.8-4           \n#> [135] evaluate_0.21           magick_2.8.1           \n#> [137] cli_3.6.1               compiler_4.3.0         \n#> [139] rlang_1.1.1             crayon_1.5.2           \n#> [141] labeling_0.4.2          ps_1.7.5               \n#> [143] plyr_1.8.9              fs_1.6.3               \n#> [145] stringi_1.7.12          viridisLite_0.4.2      \n#> [147] BiocParallel_1.34.2     munsell_0.5.0          \n#> [149] Biostrings_2.68.1       lazyeval_0.2.2         \n#> [151] devtools_2.4.5          GOSemSim_2.26.1        \n#> [153] Matrix_1.6-3            patchwork_1.1.3        \n#> [155] bit64_4.0.5             KEGGREST_1.40.1        \n#> [157] shiny_1.7.4.1           highr_0.10             \n#> [159] gridtext_0.1.5          memoise_2.0.1          \n#> [161] bslib_0.5.1             ggtree_3.8.2           \n#> [163] fastmatch_1.1-4         bit_4.0.5              \n#> [165] downloader_0.4          ape_5.7-1              \n#> [167] gson_0.1.0"},{"path":"metacyc.html","id":"metacyc","chapter":"3 Microbial functional analysis","heading":"3 Microbial functional analysis","text":"section, introduce making word networks showing microbial function using taxonomic idenfiers input. mining pathway information curated database MetaCyc (Caspi et al. 2020), users can prepare pathways.dat MetaCyc flat files. Note must valid license using MetaCyc. See User guides MetaCyc, BioCyc. options KEGG Pathway textual information.Suppose like know pathway related information “Bifidobacterium longum” “Escherichia coli”. function parseMetaCycPathway can used parse summarized comment pathways using queries. Note function search TAXONOMIC-RANGE SPECIES information pathways.dat withTax=TRUE. resulting data.frame looks like .selecting species investigated, can use dataset database BugSigDB, described section 4.1.can strip tags symbols text clear=TRUE.data frames can passed manual function, performs analysis RefSeq PubMed information. input data frame \"text\" column make word cloud network.plotting network, query column must specified plotting query word information.column query text, example commonName pathwayID, relationship query columns plotted. example, connection query text shown queryPlot FALSE.taxonomy parsing available, query NCBI Taxonomy ID.Also, want search NCBI taxonomy identifiers want use species names queries, First convert IDs using convertMetaCyc function using taxonomizr.\nNext search converted names interested species, input data frame manual.Includes BioCyc (TM) pathway/genome databases license SRI International.","code":"\nlibrary(biotextgraph)\nlibrary(ggraph)\n\n## Two species selected\ncandidateSpecies <- c(\"Staphylococcus aureus\",\"Escherichia coli\")\n\n## Downloaded pathway description file\nfile <- \"metacyc/24.5/data/pathways.dat\"\n\ninput <- parseMetaCycPathway(file, candidateSpecies)\nhead(input, n=1) |> dplyr::select(!text) |> kableExtra::kable()\n\ninput2 <- parseMetaCycPathway(file, candidateSpecies, withTax=TRUE)\nhead(input2, n=1) |> dplyr::select(!text) |> kableExtra::kable()\ninput3 <- parseMetaCycPathway(file, candidateSpecies, withTax=TRUE, clear=TRUE)\n## Not shown because of the long text\n\n## Set remove words\nremove_words <- c(\"cits\",\"frame\",\"pathway\",\"gene\",\"genes\")\n\nmetawc <- manual(input3, plotType=\"wc\",\n                additionalRemove=remove_words,\n                numWords=100,\n                 argList=list(\n                   rot.per=0.4,\n                   colors=RColorBrewer::brewer.pal(8, \"Set2\"),\n                   random.order=FALSE\n                 ))\nmetawc\n#> Type: manual\n#> Number of words: 100\n#> Query: \n#> 526 Kb\nplotWC(metawc, asis=TRUE)\n\n\nmetanet <- manual(input[,c(\"query\",\"text\")], \n                  additionalRemove=remove_words,\n                  numWords=40, colorText=TRUE)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.4\nmetanet\n#> Type: manual\n#> Number of words: 40\n#> Query: \n#> Graph: V(40), E(95)\n#> Degree: acids(8)/cluster(8)/enzyme(8)/sialic(8)/addition(7)\n#> 560.8 Kb\nplotNet(metanet, asis=TRUE)\n\nmetanet2 <- manual(input[,c(\"query\",\"text\")],\n                   layout=\"kk\", edgeLink=FALSE,\n                   additionalRemove=remove_words,\n                   numWords=20, colorText=TRUE,\n                   queryPlot=TRUE, ngram=2)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\nmetanet2\n#> Type: manual\n#> Number of words: 20\n#> Query: \n#> Graph: V(22), E(110)\n#> Degree: Escherichia coli(41)/escherichia coli(22)/biosynthetic cluster(15)/coli purified(13)/staphylococcus aureus(13)\n#> 830.2 Kb\nplotNet(metanet2, asis=TRUE)\n# Set candSp to all and noComma to TRUE\ninput <- parseMetaCycPathway(file, candSp=\"all\", withTax = TRUE, noComma=TRUE)\n\ninput2 <- input[grepl(\"TAX-2157\",input$taxonomicRange),]\ninput2 <- input2[!duplicated(input2$pathwayID),]\nonlyText <- data.frame(input2[,c(\"text\")]) |> `colnames<-`(c(\"text\"))\ninput2Net <- manual(onlyText, additionalRemove=c(\"cits\",\"frame\",\n                       \"gene\",\"genes\",\"proteins\",\n                       \"pathway\",\"pathways\",\"enzyme\",\"enzymes\",\n                       \"bacteria\",\"reaction\",\"protein\",\"biosynthesis\",\n                       \"organism\",\"organisms\"))\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\nplotNet(input2Net, asis=TRUE)\ninput$converted <- convertMetaCyc(input$species)\ninput3 <- input[grepl(\"Bifidobacterium\",input$converted),]\ninput3 <- input3[!duplicated(input3$pathwayID),]\ninput3$query <- rep(\"Bifidobacterium\",nrow(input3))\ninput3 <- input3[,c(\"text\",\"pathwayID\",\"query\")]\ninput3Net <- manual(input3, plotType=\"network\", queryPlot=TRUE,\n                    layout=\"lgl\", edgeLink=FALSE, tag=\"cor\",\n                    additionalRemove=c(\"cits\",\"frame\",\n                                       \"gene\",\"genes\",\"proteins\",\n                                       \"pathway\",\"pathways\",\"enzyme\",\"enzymes\",\n                                       \"bacteria\",\"reaction\",\"protein\",\"biosynthesis\",\n                                       \"organism\",\"organisms\"))\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.8\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Including columns pathwayID to link with query\nplotNet(input3Net, asis=TRUE)\nsessionInfo()\n#> R version 4.3.0 (2023-04-21)\n#> Platform: x86_64-pc-linux-gnu (64-bit)\n#> Running under: CentOS Linux 7 (Core)\n#> \n#> Matrix products: default\n#> BLAS:   /usr/local/package/r/4.3.0/lib64/R/lib/libRblas.so \n#> LAPACK: /usr/local/package/r/4.3.0/lib64/R/lib/libRlapack.so;  LAPACK version 3.11.0\n#> \n#> locale:\n#>  [1] LC_CTYPE=ja_JP.UTF-8       LC_NUMERIC=C              \n#>  [3] LC_TIME=ja_JP.UTF-8        LC_COLLATE=ja_JP.UTF-8    \n#>  [5] LC_MONETARY=ja_JP.UTF-8    LC_MESSAGES=ja_JP.UTF-8   \n#>  [7] LC_PAPER=ja_JP.UTF-8       LC_NAME=C                 \n#>  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n#> [11] LC_MEASUREMENT=ja_JP.UTF-8 LC_IDENTIFICATION=C       \n#> \n#> time zone: Asia/Tokyo\n#> tzcode source: system (glibc)\n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets \n#> [6] methods   base     \n#> \n#> loaded via a namespace (and not attached):\n#>  [1] digest_0.6.33     R6_2.5.1          bookdown_0.36    \n#>  [4] fastmap_1.1.1     xfun_0.40         cachem_1.0.8     \n#>  [7] knitr_1.43        memoise_2.0.1     htmltools_0.5.6  \n#> [10] rmarkdown_2.23    xml2_1.3.5        cli_3.6.1        \n#> [13] downlit_0.4.3     sass_0.4.7        withr_2.5.0      \n#> [16] jquerylib_0.1.4   compiler_4.3.0    rstudioapi_0.15.0\n#> [19] tools_4.3.0       evaluate_0.21     bslib_0.5.1      \n#> [22] yaml_2.3.7        fs_1.6.3          jsonlite_1.8.7   \n#> [25] rlang_1.1.1"},{"path":"the-other-usage-for-microbiome-related-data.html","id":"the-other-usage-for-microbiome-related-data","chapter":"4 The other usage for microbiome-related data","heading":"4 The other usage for microbiome-related data","text":"section, introduce usage mining information related microbiome-related signatures, including disease, enzymes metabolites package.","code":"\nlibrary(biotextgraph)\nlibrary(ggplot2)\nlibrary(ggraph)\nlibrary(RColorBrewer)\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"biotextgraph\"))"},{"path":"the-other-usage-for-microbiome-related-data.html","id":"disease","chapter":"4 The other usage for microbiome-related data","heading":"4.1 Diseases","text":"use BugSigDB, R port bugsigdbr obtain curated dataset relationship bacterial taxonomy human diseases (Geistlinger et al. 2022). Users can query microbiome names, searched MetaPhlAn taxonomic annotation. target=\"title\", title corresponding articles summarized.target=\"abstract\", corresponding abstract curated publications fetched summarized.successful visualization, pre-caculated TF-IDF frequency data frame available one can use filter highly occurring words, prefiltering option used refseq.network visualization possible enabling plotType=\"network\".\nparameters can passed refseq can used.words--species relationship can plotted mbPlot=TRUE, useful assessing species similar characteristics regarding diseases.BugSigDB contains relationship bacterial taxonomy disease, disease name can also plotted. disPlot=TRUE, mbPlot\nset TRUE default. Words PubMed contained disease flag concatenated disease label (like pregnancy) colorize=TRUE like example .curated databases, PubMed query can also performed setting curate=FALSE. way, text information latest literature microbes diseases can plotted. options use function obtaining PubMed information can specified abstArg list format, like sortOrder=\"pubdate\".","code":"\nbasic <- bugsigdb(c(\"Veillonella dispar\",\"Neisseria flava\"),tag=\"none\", plotType=\"wc\",\n    curate=TRUE,target=\"title\",pre=TRUE,cl=snow::makeCluster(12),\n    pal=RColorBrewer::brewer.pal(10, \"Set2\"),numWords=80,argList=list(min.freq=1))\n#> Input microbes: 2\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#> Including 28 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\ngetSlot(basic, \"freqDf\") |> head(n=20)\n#>                    word freq\n#> gut                 gut    8\n#> oral               oral    5\n#> patients       patients    5\n#> study             study    3\n#> arthritis     arthritis    2\n#> association association    2\n#> bacterial     bacterial    2\n#> covid19         covid19    2\n#> diabetes       diabetes    2\n#> dysbiosis     dysbiosis    2\n#> infant           infant    2\n#> infection     infection    2\n#> obese             obese    2\n#> respiratory respiratory    2\n#> sequencing   sequencing    2\n#> surgery         surgery    2\n#> tract             tract    2\n#>  features      features    1\n#> 16s                 16s    1\n#> aerosol         aerosol    1\nplotWC(basic, asis=TRUE)\nbasic2 <- bugsigdb(c(\"Veillonella dispar\",\"Neisseria flava\"),tag=\"cor\", plotType=\"wc\",\n    curate=TRUE,target=\"abstract\",pre=TRUE,cl=snow::makeCluster(12),\n    pal=RColorBrewer::brewer.pal(10, \"Dark2\"),numWords=80)\n#> Input microbes: 2\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#> Including 28 entries\n#> Target is abstract\n#>   Querying PubMed for 17 pmids\n#>   Querying without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\n#> Multiscale bootstrap... Done.\ngetSlot(basic2, \"freqDf\") |> head(n=20)\n#>                    word freq\n#> patients       patients   37\n#> gut                 gut   30\n#> oral               oral   27\n#> bacterial     bacterial   25\n#> species         species   24\n#> microbial     microbial   23\n#> subjects       subjects   20\n#> sequencing   sequencing   18\n#> diversity     diversity   17\n#> composition composition   16\n#> 16s                 16s   14\n#> infection     infection   14\n#> differences differences   13\n#> healthy         healthy   13\n#> controls       controls   12\n#> covid19         covid19   12\n#> infant           infant   12\n#> rrna               rrna   12\n#> compared       compared   11\n#> disease         disease   11\nplotWC(basic2, asis=TRUE)\nrmwords <- allFreqBSDB\nfilter <- rmwords[rmwords$freq>quantile(rmwords$freq, 0.95),]\nfilter$word |> length()\n#> [1] 65\nfilter |> head(n=20)\n#>             freq        word\n#> microbiota   275  microbiota\n#> gut          242         gut\n#> microbiome   175  microbiome\n#> patients     146    patients\n#> study         69       study\n#> cancer        64      cancer\n#> composition   62 composition\n#> oral          55        oral\n#> human         49       human\n#> intestinal    48  intestinal\n#> children      45    children\n#> microbial     45   microbial\n#> disease       43     disease\n#> fecal         41       fecal\n#> alterations   36 alterations\n#> analysis      34    analysis\n#> association   34 association\n#> dysbiosis     34   dysbiosis\n#> infection     34   infection\n#> risk          33        risk\nnet <- bugsigdb(c(\"Neisseria\",\"Veillonella\"),\n    curate=TRUE,\n    target=\"title\",\n    pre=TRUE,\n    plotType=\"network\",\n    additionalRemove=filter$word,\n    corThresh=0.2,\n    edgeLink=FALSE,\n    autoThresh=FALSE,\n    numWords=60)\n#> Input microbes: 2\n#>   Found 76 entries for Neisseria\n#>   Found 221 entries for Veillonella\n#> Including 502 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nplotNet(net, asis=TRUE)\nnet2 <- bugsigdb(c(\"Veillonella dispar\",\"Neisseria flava\",\n                 \"Veillonella parvula\",\"Akkermansia muciniphila\"),\n            mbPlot=TRUE,\n            curate=TRUE,\n            target=\"title\",\n            pre=TRUE,\n            plotType=\"network\",\n            additionalRemove=filter$word,\n            colorize=TRUE,\n            showLegend=TRUE,\n            numWords=50, \n            corThresh=0.2,\n            autoThresh=FALSE,\n            colorText=TRUE\n            )\n#> Input microbes: 4\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#>   Found 20 entries for Veillonella parvula\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 90 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nplotNet(net2, asis=TRUE)\nnet3 <- bugsigdb(c(\"Veillonella dispar\",\"Neisseria flava\",\n    \"Veillonella parvula\",\"Akkermansia muciniphila\"), mbPlot=TRUE,\n    curate=TRUE,target=\"title\",pre=TRUE,plotType=\"network\", autoThresh=FALSE,\n    additionalRemove=filter$word, disPlot=TRUE, colorize=TRUE,\n    numWords=50, corThresh=0.2, colorText=TRUE, edgeLink=FALSE)\n#> Input microbes: 4\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#>   Found 20 entries for Veillonella parvula\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 90 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nplotNet(net3, asis=TRUE)\nnet4 <- bugsigdb(c(\"Akkermansia muciniphila\"),\n    curate=FALSE,target=\"title\",pre=TRUE,plotType=\"network\",\n    additionalRemove=filter$word, autoThresh=FALSE,\n    numWords=40, corThresh=0.2, colorText=TRUE, colorize=TRUE,\n    abstArg = list(retMax=80, sortOrder=\"pubdate\"))\n#> Input microbes: 1\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 31 entries\n#> Proceeding without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nplotNet(net4, asis=TRUE)"},{"path":"the-other-usage-for-microbiome-related-data.html","id":"section","chapter":"4 The other usage for microbiome-related data","heading":"4.2 ","text":"EnzymesFor microbiome analysis, often case investigating coded enzymes important. Using enzyme function getUPtax function, queried species genus can linked possible interaction enzymes using following databases. downloaded file path specified function like link queried taxonomy enzymes. Specifically, enzymes listed enzyme.dat searched, corresponding UniProt identifiers obtained, followed mapping using speclist.txt. way, links microbe - textual information - enzyme can plotted.enzyme.dat - Expasyspeclist.txt - UniProt Controlled vocabulary species","code":"\n\nvp <- bugsigdb(c(\"Veillonella parvula\"),\n                 plotType=\"network\", layout=\"kk\",\n                curate=TRUE, target=\"title\", edgeLink=TRUE, autoThresh=FALSE,\n                mbPlot = TRUE, ecPlot=TRUE, disPlot=TRUE, tag=\"cor\",\n                cl=snow::makeCluster(10),colorText=TRUE, pre=TRUE, numWords=30,\n                ecFile=\"enzyme.dat\", addFreqToMB=TRUE, ## Add nodes other than words pseudo-frequency\n                upTaxFile = \"speclist.txt\")\n#> Input microbes: 1\n#>   Found 20 entries for Veillonella parvula\n#> Including 31 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\n#> Processing EC file\n#>   Linking taxonomy to EC\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotNet(vp, asis=TRUE)"},{"path":"the-other-usage-for-microbiome-related-data.html","id":"metabolites","chapter":"4 The other usage for microbiome-related data","heading":"4.3 Metabolites","text":", relationship metabolites microbiome interest. Recent studies revealed various associations gut microbiome composition human plasma metabolites, well environments.Wishart DS, Oler E, Peters H, et al. MiMeDB: Human Microbial Metabolome Database. Nucleic Acids Res. 2023;51(D1):D611-D620. doi:10.1093/nar/gkac868Muller E, Algavi YM, Borenstein E. gut microbiome-metabolome dataset collection: curated resource integrative meta-analysis. npj Biofilms Microbiomes. 2022;8(1):1-7. doi:10.1038/s41522-022-00345-5Dekkers KF, Sayols-Baixeras S, Baldanzi G, et al. online atlas human plasma metabolite signatures gut microbiome composition. Nat Commun. 2022;13(1):5370. doi:10.1038/s41467-022-33050-0We now use data obtained Dekkers et al..\nFirst, read downloaded file using readxl.Pass tibble, well columns represent taxonomy, metabolites, quantitative values threshold metCol. case, metCol <- c(\"Metagenomic species\", \"Metabolite\", \"Spearman's ρ\"). manual function can also used general purpose adding external information.way, can plot links microbes - metabolites - textual information. information combined, one can plot textual information - metabolites - coded enzymes - diseases - microbes link one query.default, category words plotted without node colorization (grey). preferred, set colorize=TRUE colorize associated information catColors. way, color nodes words shown gradient frequency, independent color associated categories.","code":"\nmetab <- readxl::read_excel(\n  \"41467_2022_33050_MOESM8_ESM.xlsx\",skip = 7)\n\nmetabEx <- bugsigdb(c(\"Akkermansia muciniphila\"),\n                edgeLink=FALSE,\n                curate=TRUE,\n                corThresh=0.3,\n                pre=TRUE,\n                additionalRemove = filter$word,\n                target=\"abstract\",\n                colorText=TRUE,\n                plotType=\"network\",\n                numWords=50,\n                mbPlot=TRUE,\n                layout=\"lgl\",\n                autoThresh=FALSE,\n                metCol=c(\"Metagenomic species\", \"Metabolite\", \"Spearman's ρ\"),\n                metab =metab, metThresh=0.15,\n                preserve = TRUE,\n                cl=snow::makeCluster(10),\n                showLegend=TRUE,\n                abstArg = list(retMax=80,\n                               sortOrder=\"relevance\"))\n#> Input microbes: 1\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 31 entries\n#> Target is abstract\n#>   Querying PubMed for 20 pmids\n#>   Querying without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\n#> Checking metabolites\nplotNet(metabEx, asis=TRUE)\n\nmetabEx <- bugsigdb(c(\"Akkermansia muciniphila\"),\n                edgeLink=FALSE,\n                curate=TRUE,\n                target=\"abstract\",\n                corThresh=0.3,\n                colorize=TRUE,\n                pre=TRUE,\n                additionalRemove = filter$word,\n                colorText=TRUE,\n                plotType=\"network\",\n                layout=\"lgl\",\n                numWords=50,\n                mbPlot=TRUE,\n                disPlot=TRUE,\n                autoThresh=FALSE,\n                preserve = TRUE)\n#> Input microbes: 1\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 31 entries\n#> Target is abstract\n#>   Querying PubMed for 20 pmids\n#>   Querying without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nplotNet(metabEx, asis=TRUE)"},{"path":"the-other-usage-for-microbiome-related-data.html","id":"interactive","chapter":"4 The other usage for microbiome-related data","heading":"4.3.1 Visualizing complex network interactively","text":"complex network, resulting image might unreadable.\nexportCyjsWithoutImage function can used export graph readily interactive interface using Cytoscape.js. chunk shows output produced function, hosted GitHub Pages.","code":"\n## exportCyjsWithoutImage(getSlot(metabEx, \"igraph\"), rootDir=\".\", netDir=\"\",nodeColorDiscretePal = \"Pastel1\")\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/complex\")"},{"path":"the-other-usage-for-microbiome-related-data.html","id":"pathway-information","chapter":"4 The other usage for microbiome-related data","heading":"4.4 Pathway information","text":"enzymes, metabolites, diseases, metabolic pathways important functional entities can analyzed microbiome. Analyzing text information databases KEGG MetaCyc crucial purpose. Please refer Section 3 methods used analysis.","code":""},{"path":"the-other-usage-for-microbiome-related-data.html","id":"annotating-the-dendrogram-of-taxonomy","chapter":"4 The other usage for microbiome-related data","heading":"4.5 Annotating the dendrogram of taxonomy","text":"Annotating dendrogram (cladogram) taxonomy possible plotEigengeneNetworksWithWords function. used need provide customized data.frame depicting query (taxonomy) corresponding text, like MetaCyc.Now fetch species Bacillota.time use random dendrogram rename rows taxonomic name included MetaCyc.Using dendrogram (dhc argument) input data.frame column name query, can plot dendrogram pathway information. Note need provide function named vector nodes (corresponding gene clusters gene input). time, wordclouds plotted additional arguments can specified argList.","code":"\n\n## Read pathway description\nfile <- \"metacyc/24.5/data/pathways.dat\"\ninput <- parseMetaCycPathway(file,\n                              candSp=\"all\",\n                              withTax=TRUE,\n                              clear=TRUE,\n                              noComma = TRUE)\n\n\n## Convert the species name by taxonomizr\ninput$spConverted <- convertMetaCyc(input$species)\ninput$spConverted |> head()\n#> [1] \"Bacteria;Cyanobacteria;NA;Synechococcales;Prochloraceae;Prochloron;Prochloron didemni\"                                 \n#> [2] \"Bacteria;Pseudomonadota;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Escherichia;Escherichia coli\"          \n#> [3] \"Bacteria;Pseudomonadota;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Salmonella;Salmonella enterica\"        \n#> [4] \"Bacteria;Pseudomonadota;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Escherichia;Escherichia coli\"          \n#> [5] \"Bacteria;Pseudomonadota;Betaproteobacteria;Burkholderiales;Burkholderiaceae;Paraburkholderia;Paraburkholderia phymatum\"\n#> [6] \"Bacteria;Pseudomonadota;Betaproteobacteria;Burkholderiales;Burkholderiaceae;Cupriavidus;Cupriavidus basilensis\"\nbc <- input[grepl(\"Bacillota\", input$spConverted),]\nbc <- bc[!duplicated(bc$pathwayID),]\nbc |> head()\n#>      pathwayID\n#> 12  PCEDEG-PWY\n#> 173   PWY-7872\n#> 349   PWY-7013\n#> 748   PWY-7886\n#> 749   PWY-8146\n#> 799   PWY-7942\ntext\nnother group of organisms, called the halorespirators, has been shown to metabolize tetrachloroethene in a process known as dehalorespiration, in which halogenated organic compounds are used as electron acceptors in an anaerobic respiratory process . Halorespiration can result in the complete dechlorination of PCE and TRICHLOROETHENE (TCE) to the benign end products ETHYLENE-CMPD and CPD-9312. In most cases different organisms specialize in different steps of this pathway. Thus far, only TAX-243164 has been shown to completely dechlorinate TETRACHLOROETHENE to ETHYLENE-CMPD through anaerobic reductive dechlorination (dehalorespiration) .  TAX-243164 achieves this utilizing only two enzymes: EC-1.21.99.5 (PCE-RDase), which degrades PCE to TCE, and EC-1.21.99.M1 (TCE-RDase), which performs all the other steps of the pathway. However, TCE-RDase has a very low activity using DICHLOROETHENE and VINYL-CHLORIDE (vinyl chloride, or VC) as substrates, and is apparently catalyzing these reductions as a slow, cometabolic reaction (the reaction rate in &mu;molminmg is 5.2 for TCE but only 0.036 for VC) . This phenomenon poses a problem for the treatment of contaminated sites, as it results in the accumulation of VINYL-CHLORIDE, which is the most toxic compound of all the chloroethenes. The problem can be alleviated by other organisms, such as TAX-311424, which have a dedicated EC-1.21.99.M2, which reduces VC and all dichloroethene (DCE) isomers at a high rate .  All of these enzymes are inhibited by the addition of iodoalkanes, and this inhibition is reversed by exposure to light, indicating the presence of corrinoid cofactors. In addition, most (but not all) of these enzymes have been shown to contain at least one  cluster. \nhe pathway for the degradation of CPD-19877 was found by a bioinformatic analysis of genes clustered with a D-threonate-binding protein (SBP), which is a part of a TRAP (tripartite ATP-independent permease) transporter for the compound .  Following import into the cell, CPD-19877 is phosphorylated to form ERYTHRONATE-4P by EC-2.7.1.220. The enzyme, encoded by the G-55076 gene, is one of the first members of a large family of enzymes, known as DUF (domain of unknown function) 1537, to which a function has been assigned .  Following phosphorylation, the compound is dehygrogenated at position 3 by EC-1.1.1.409. This dehydrogenase, with has some similarity to EC-1.1.1.262, catalyzes a dehydrogenation, generating an unstable product that undergoes a decarboxylation to yield the central metabolite DIHYDROXY-ACETONE-PHOSPHATE . \n#> 349  PROPANE-1-2-DIOL (propylene glycol) is produced from LACTALD during the bacterial degradation of L-rhamnose and L-Fucopyranoses (see PWY0-1315 and the associated pathway links) (in ). TAX-28901 can utilize PROPANE-1-2-DIOL as a carbon source and its metabolism may be a virulence factor . Under fermentative conditions, CPD-665 (propionaldehyde) is formed and converted to PROPANOL and PROPIONATE (propionate), ATP is produced, and NAD is regenerated (in ). The reactions forming CPD-665 and PROPIONYL-COA occur within a specialized bacterial microcompartment known as a metabolosome (see the About This Pathway section below).   The first enzyme in this pathway is CPLX1R65-171, a diol dehydratase composed of polypeptides PduCDE. This enzyme is dependent upon ADENOSYLCOBALAMIN (vitamin B12), which requires anaerobic conditions for its de novo biosynthesis (see pathway PWY-5507). Initially it was thought that PROPANE-1-2-DIOL utilization required oxygen, leading to an apparent ADENOSYLCOBALAMIN paradox. This paradox was resolved by the discovery that TAX-28901 can use CPD-14 as an alternative electron acceptor during anaerobic degradation of both PROPANE-1-2-DIOL and ETHANOL-AMINE .  The adenosyl group of the ADENOSYLCOBALAMIN cofactor of CPLX1R65-171 is unstable in vivo and can be converted to CPD0-1256 in a reaction that inactivates the enzyme . Active enzyme can be regenerated within the microcompartment by the combined action of a reactivase PduGH  (biochemically characterized in TAX-571 ), a dedicated STM2050-MONOMER , and a cobalamin reductase PduS, that together regenerate ADENOSYLCOBALAMIN. Thus, the microcompartment contains a complete ADENOSYLCOBALAMIN recycling system  (and in ).  Under aerobic conditions, exogenously added ADENOSYLCOBALAMIN (or its precursor COBINAMIDE) can be imported into the cell to allow use of PROPANE-1-2-DIOL as a carbon and energy source via the PWY0-42 as shown in the pathway link  and in .  There is also evidence for the production of PROPANOL and PROPIONATE via this pathway in TAX-1637 species, although the PWY0-42 may not be present in these organisms .  In addition to the organisms shown here, genes for ADENOSYLCOBALAMIN-dependent propanediol utilization have also been identified in species of FRAME:TAX-620, FRAME:TAX-629, FRAME:TAX-1578 and FRAME:TAX-1357, as well as FRAME:TAX-562 E24377A (reviewed in ).  About This Pathway  The first two reactions of this pathway occur within the lumen of a bacterial microcompartment (BMC), a capsid-like shell composed of multiple proteins that is analogous to the carboxysome of cyanobacteria. The ADENOSYLCOBALAMIN-dependent PROPANE-1-2-DIOL utilization (Pdu) microcompartment consists of major polypeptides PduABB'CDEGHJKOPTU which includes enzymes PduCDE, PduGH, PduO and PduP, as well as BMC-domain containing proteins PduABB'JKNTU . A structural proein (PduM) has also been described . The proposed function of this microcompartment is to sequester toxic CPD-665 (propionaldehyde).  The remaining reactions occur in the cytosol (reviewed in  and ).  The conversion of CPD-665 to PROPANOL is catalyzed within the compartment by an alcohol dehydrogenasealdehyde reductase encoded by the STM2052 gene, which provides ample supply of NAD+ to EC-1.2.1.87 (STM2051 PduP) .  The PROPIONATE formed can be activated to PROPIONYL-COA by the reversible reactions catalyzed by PduW and PduL. PROPIONYL-COA Propanoyl-CoA can also be formed from PROPIONATE by the Acs and PrpE enzymes in pathway PWY0-42 (see EC-6.2.1.17). PROPIONYL-COA Propanoyl-CoA is thus an intermediate in the catabolism of both PROPANE-1-2-DIOL (this pathway) and PROPIONATE (in pathway PWY0-42) and is necessary for expression of the prpBCDE genes of the PWY0-42 during growth on PROPANE-1-2-DIOL .  The genes of this pathway are clustered and are located adjacent to the cbicob gene cluster needed for ADENOSYLCOBALAMIN biosynthesis. Both clusters are regulated by the pocR gene ( and in ).  The 21 gene regulon encoding the pdu organelle and propanediol degradation enzymes from TAX-546 was cloned and expressed successfully in TAX-562, allowing PROPANE-1-2-DIOL utilization . \nacteria do not possess the PWY3O-450 eukaryote-like CDP-choline-dependent pathway for phosphatidylcholine synthesis, but it is now well-documented that a wide range of Gram-positive and Gram-negative species that colonize mucosal tissue utilize a pathway very similar to the eukaryotic pathway as a means to decorate cell wall glycoconjugates with phosphocholine. While the addition of phosphocholine to these glycoconjugates is not as common as acetylation or methylation, it has far more potent biological consequences due to the multiple interactions between phosphocholine and host proteins, which are important at all stages of the infection process by pathogens .   These phosphocholine glycoconjugate modifications are found on various surface structures depending on the species. Examples include Lipopolysaccharides lipopolysaccharides (TAX-727) , pili (TAX-487 and TAX-485) , Lipoteichoic-Acids lipoteichoic acid (TAX-1313) , a 43-kDa surface protein (TAX-287) , and surface components of diverse commensal oral species .  The first two enzyme activities in the pathway, EC-2.7.1.32, and EC-2.7.7.15, are essentially identical to those of the eukaryotic pathway. These enzymes are encoded by homologues of the eukaryotic genes (G-44724 and G-44725, respectively) that have been detected in many species that colonize mucosal tissue.  The third and last enzyme, diphosphonucleoside choline phosphotransferase, catalyzes the transfer of the phosphoclholine moiety to a cell surface glycoconjugate. The gene encoding this enzyme has not been definitively identified in many of these organisms , but is proposed to be G-43708 in TAX-727  and TAX-1313 . \n#> 749                                                                                                                           C-type cytochromes (cytC) are electron-transfer proteins that have one or more HEME_C groups. They are characterized by the covalent attachment of the heme to the polypeptide chain via two (or rarely one) thioether bonds formed between thiol groups of cysteine residues and vinyl groups of a PROTOHEME molecule. The two cysteine residues almost always occur in the amino-acid sequence CXXCH .  C-type cytochromes possess a wide range of properties and function in a large number of different redox processes. In general, the differences in c-type cytochromes among bacteria are much larger than those among animal species. The use of the term term c-type cytochromes was introduced to distinguish this family of diverse proteins from the well-characterized mitochondrial protein, which is often referred to as cytochrome c.  Bacterial c-type cytochromes function in the electron transport chains of bacteria with many different types of energy metabolism, including phototrophs, methylotrophs, denitrifiers, sulfate reducers and the nitrogen-fixers.   The biogenesis of c-type cytochromes involves covalent attachment of PROTOHEME to two cysteines at a conserved CXXCH sequence in the apocytochrome. The histidine residue acts as an axial ligand to the heme iron. Three unique cytochrome c assembly pathways, known as systems I, II, and III, have ben described. This pathway describes system III, which is found in the mitochondria of fungi, vertebrates, invertebrates, and sme protozoa.  About This Pathway  The first indication for the existence of the system II pathway was the discovery that the ccsA gene (named for cytochrome c synthesis) in chloroplasts contains a WWD domain (a tryptophan-rich domain that is known to maintain a heme molecule in the reduced state by two external histidines) that is different from that found in the bacterial CcmF genes of system I . The gene was later shown to be required for cytochrome f biosynthesis (cytochrome f, a part of the cytochrome b6f complex, is analogous to cytochrome c1 of the bc1 complex and contains the CXXCH motif), and led to the discovery of the rest of the involved genes . Analogous genes were discovered in the Gram-positive bacterium TAX-1423  and the &beta;-proteobacterium TAX-520 .  The system is now known to operate in a wide range of organisms, including chloroplasts, Gram-positive bacteria, cyanobacteria, most &beta;-proteobacteria, some &delta;-proteobacteria, and all &epsilon;-proteobacteria .  In organisms that utilize system II the apocytochrome polypeptide, upon translocation from the cytosol, is exposed to the activity of EC-1.8.4.15, which forms a disulfide bridge between the two cysteines in the CXXCH motif. This bridge must be reduced before the heme molecule can be attached to the polypeptide. System II uses reducing equivalents from inside the cell (likely thioredoxin) to reduce the cysteine residues. Dedicated thioredoxin-related proteins called ResA (in TAX-1423) and CcsX (in TAX-520) can reduce the cysteines directly . These proteins are kept in their reduced active form by the DsbD protein, or by the similar, smaller protein CcdA .  The other components of system II are the CcsA and CcsB proteins, which form a tight complex with the activity of EC-4.4.1.17. In a few bacterial species (such as TAX-209, TAX-816, and TAX-843) the two proteins are fused into one large ORF called CcsBA. The two proteins are membrane-bound. CcsA, which has either eight or six transmembrane domains , contains the WWD domain that binds the heme molecule, as well as conserved histidine residues that are believed to help keep the heme iron in its reduced form. The reduced heme molecule moves from the cytosol through CcsA until it reaches the WWD domain, where it is liganded in place. CcsB has four transmembrane domains, with the third and fourth separated by a large periplasmic domain that includes the apocytochrome c CXXCH recognition function. CcsB thus recruites the apocytochrome polypeptide and presents it to the heme bound to CcsA . \n#> 799                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     The cyclization is not limited to free amino acids. N-terminal glutaminyl and glutamyl residues of polypeptides can also spontaneously cyclize to 5-OXOPROLINE residues. The former transformation is also enzymically catalyzed by EC-2.3.2.5 . Once formed, the abberant residue is removed from the peptide by EC-3.4.19.3, yielding free 5-OXOPROLINE .  5-OXOPROLINE is also formed by additional routes. One such route is from GLUTATHIONE, in a reaction catalyzed by EC-4.3.2.7 . In eukaryotic organisms it is also formed by EC-4.3.2.9 as part of the PWY-4041 .   Accumulation of 5-OXOPROLINE is deleterious to the organism. Its reported effects include growth inhibition in prokaryotes and plants  and interference with energy production, lipid synthesis, and antioxidant defenses in mammalian brain . Human inborn errors of glutathione metabolism that lead to 5-OXOPROLINE buildup result in metabolic acidosis, hemolytic anemia, neurological problems, and massive urinary excretion of 5-OXOPROLINE .  An ATP-dependent enzyme that hydrolyzes 5-OXOPROLINE to GLT, EC-3.5.2.9, has been known for a while, as it functions in the PWY-4041. Until recently, the enzyme, which is encoded by the HS11319 gene, was thought to be a eukaryotic enzyme exclusively . However, in 2017 a widespread prokaryotic enzyme that catalyzes the same reaction was discovered . The trimeric enzyme is encoded by the G6382, G6380, and G6381 genes. Inactivation of any of these genes in TAX-1423 slowed growth and caused 5-OXOPROLINE accumulation in the cells. \n#>                                                         commonName\n#> 12                                   tetrachloroethene degradation\n#> 173                                    D-erythronate degradation I\n#> 349                        (<i>S<\/i>)-propane-1,2-diol degradation\n#> 748 cell-surface glycoconjugate-linked phosphocholine biosynthesis\n#> 749                cytochrome <i>c<\/i> biogenesis (system II type)\n#> 799                                     5-oxo-L-proline metabolism\n#>        species taxonomicRange\n#> 12   TAX-55583          TAX-2\n#> 173 TAX-498761          TAX-2\n#> 349   TAX-1642          TAX-2\n#> 748   TAX-1313          TAX-2\n#> 749 TAX-224308      TAX-28216\n#> 799   TAX-1423       TAX-2759\n#>                                                                                                   spConverted\n#> 12     Bacteria;Bacillota;Clostridia;Eubacteriales;Desulfitobacteriaceae;Dehalobacter;Dehalobacter restrictus\n#> 173 Bacteria;Bacillota;Clostridia;Eubacteriales;Heliobacteriaceae;Heliomicrobium;Heliomicrobium modesticaldum\n#> 349                              Bacteria;Bacillota;Bacilli;Bacillales;Listeriaceae;Listeria;Listeria innocua\n#> 748        Bacteria;Bacillota;Bacilli;Lactobacillales;Streptococcaceae;Streptococcus;Streptococcus pneumoniae\n#> 749                              Bacteria;Bacillota;Bacilli;Bacillales;Bacillaceae;Bacillus;Bacillus subtilis\n#> 799                              Bacteria;Bacillota;Bacilli;Bacillales;Bacillaceae;Bacillus;Bacillus subtilis\nwhile (TRUE) {\n  uniq <- sample(bc$species, 10)\n  if (length(uniq)==length(unique(uniq))) {\n    # if (sum(is.na(sapply(strsplit(bc[bc$species %in% uniq,]$spConverted, \";\"), \"[\", 7)))==0) {\n      break\n    # }\n  }\n}\ndata <- matrix(sample(seq(1,100),100), ncol = 10)\nrownames(data) <- uniq\n\n## Dendrogram\ndhc <- as.dendrogram(hclust(dist(data)))\nplot(dhc)\n\n## Maket it cladogram\ndhc <- phylogram::as.cladogram(dhc)\n# Some filtering\nload(\"allFreqMetaCyc.rda\")\ndeleter <- (allFreqMetaCyc |> dplyr::filter(freq>5000) |> dplyr::select(word))$word\n# Named vector\nsampled <- row.names(data)\nnames(sampled) <- sampled\n# Query column (including node names) is specified as query\ninput$query <- input$species\n\nlibrary(ggfx) # use ggfx\nmicro <- plotEigengeneNetworksWithWords(NA, sampled,\n    useWC = TRUE, # Use wordcloud\n    useFunc = \"manual\", # Use manual function (as the input is custom data.frame)\n    useDf=input,dendPlot=\"ggplot\",dhc=dhc,\n    useggfx=\"with_outer_glow\",\n    ggfxParams=list(colour=\"white\",expand=5),\n    argList=list(additionalRemove=deleter,\n        ngram=1), horizontalSpacer=0.1,\n    useWGCNA=FALSE, spacer=0.05,\n    horiz=FALSE, wcScale=5)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.101\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.401\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.101\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.101\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.402\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\n#> Including columns pathwayID and commonName and species and taxonomicRange and spConverted to link with query\n#> border is set to FALSE as useggfx is not NULL\nscaled <- micro + scale_y_continuous(expand=c(0,6))\n\n## Non-scaled and scaled (show the truncated tip labels)\nmicro\nscaled\nsessionInfo()\n#> R version 4.3.0 (2023-04-21)\n#> Platform: x86_64-pc-linux-gnu (64-bit)\n#> Running under: CentOS Linux 7 (Core)\n#> \n#> Matrix products: default\n#> BLAS:   /usr/local/package/r/4.3.0/lib64/R/lib/libRblas.so \n#> LAPACK: /usr/local/package/r/4.3.0/lib64/R/lib/libRlapack.so;  LAPACK version 3.11.0\n#> \n#> locale:\n#>  [1] LC_CTYPE=ja_JP.UTF-8       LC_NUMERIC=C              \n#>  [3] LC_TIME=ja_JP.UTF-8        LC_COLLATE=ja_JP.UTF-8    \n#>  [5] LC_MONETARY=ja_JP.UTF-8    LC_MESSAGES=ja_JP.UTF-8   \n#>  [7] LC_PAPER=ja_JP.UTF-8       LC_NAME=C                 \n#>  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n#> [11] LC_MEASUREMENT=ja_JP.UTF-8 LC_IDENTIFICATION=C       \n#> \n#> time zone: Asia/Tokyo\n#> tzcode source: system (glibc)\n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets \n#> [6] methods   base     \n#> \n#> other attached packages:\n#> [1] ggfx_1.0.1          RColorBrewer_1.1-3 \n#> [3] ggraph_2.1.0        biotextgraph_0.99.0\n#> [5] ggplot2_3.4.2      \n#> \n#> loaded via a namespace (and not attached):\n#>   [1] ggdendro_0.1.23         rstudioapi_0.15.0      \n#>   [3] jsonlite_1.8.7          pvclust_2.2-0          \n#>   [5] magrittr_2.0.3          magick_2.8.1           \n#>   [7] farver_2.1.1            rmarkdown_2.23         \n#>   [9] ragg_1.2.5              GlobalOptions_0.1.2    \n#>  [11] fs_1.6.3                zlibbioc_1.46.0        \n#>  [13] vctrs_0.6.3             memoise_2.0.1          \n#>  [15] cyjShiny_1.0.42         RCurl_1.98-1.13        \n#>  [17] base64enc_0.1-3         htmltools_0.5.6        \n#>  [19] curl_5.0.1              cellranger_1.1.0       \n#>  [21] gridGraphics_0.5-1      sass_0.4.7             \n#>  [23] GeneSummary_0.99.6      bslib_0.5.1            \n#>  [25] htmlwidgets_1.6.2       cachem_1.0.8           \n#>  [27] commonmark_1.9.0        igraph_1.5.1           \n#>  [29] mime_0.12               lifecycle_1.0.3        \n#>  [31] pkgconfig_2.0.3         R6_2.5.1               \n#>  [33] fastmap_1.1.1           GenomeInfoDbData_1.2.10\n#>  [35] shiny_1.7.4.1           digest_0.6.33          \n#>  [37] colorspace_2.1-0        patchwork_1.1.3        \n#>  [39] AnnotationDbi_1.64.1    S4Vectors_0.38.1       \n#>  [41] textshaping_0.3.6       RSQLite_2.3.3          \n#>  [43] org.Hs.eg.db_3.18.0     filelock_1.0.2         \n#>  [45] labeling_0.4.2          fansi_1.0.4            \n#>  [47] httr_1.4.6              polyclip_1.10-6        \n#>  [49] compiler_4.3.0          bit64_4.0.5            \n#>  [51] withr_2.5.0             viridis_0.6.4          \n#>  [53] DBI_1.1.3               dendextend_1.17.1      \n#>  [55] highr_0.10              ggforce_0.4.1          \n#>  [57] MASS_7.3-58.4           ISOcodes_2022.09.29    \n#>  [59] rjson_0.2.21            tools_4.3.0            \n#>  [61] ape_5.7-1               stopwords_2.3          \n#>  [63] rentrez_1.2.3           httpuv_1.6.11          \n#>  [65] glue_1.6.2              nlme_3.1-162           \n#>  [67] promises_1.2.1          gridtext_0.1.5         \n#>  [69] grid_4.3.0              shadowtext_0.1.2       \n#>  [71] generics_0.1.3          gtable_0.3.3           \n#>  [73] tidyr_1.3.0             bugsigdbr_1.8.1        \n#>  [75] data.table_1.14.8       tidygraph_1.2.3        \n#>  [77] xml2_1.3.5              utf8_1.2.3             \n#>  [79] XVector_0.40.0          BiocGenerics_0.46.0    \n#>  [81] stringr_1.5.0           markdown_1.11          \n#>  [83] ggrepel_0.9.4           pillar_1.9.0           \n#>  [85] yulab.utils_0.1.0       later_1.3.1            \n#>  [87] dplyr_1.1.2             tweenr_2.0.2           \n#>  [89] BiocFileCache_2.8.0     lattice_0.21-8         \n#>  [91] bit_4.0.5               tidyselect_1.2.0       \n#>  [93] phylogram_2.1.0         tm_0.7-11              \n#>  [95] Biostrings_2.68.1       downlit_0.4.3          \n#>  [97] knitr_1.43              gridExtra_2.3          \n#>  [99] NLP_0.2-1               bookdown_0.36          \n#> [101] IRanges_2.34.1          stats4_4.3.0           \n#> [103] xfun_0.40               graphlayouts_1.0.2     \n#> [105] Biobase_2.60.0          stringi_1.7.12         \n#> [107] yaml_2.3.7              evaluate_0.21          \n#> [109] ggwordcloud_0.6.0       wordcloud_2.6          \n#> [111] tibble_3.2.1            graph_1.80.0           \n#> [113] ggplotify_0.1.2         cli_3.6.1              \n#> [115] systemfonts_1.0.4       xtable_1.8-4           \n#> [117] munsell_0.5.0           jquerylib_0.1.4        \n#> [119] Rcpp_1.0.11             GenomeInfoDb_1.36.4    \n#> [121] readxl_1.4.3            dbplyr_2.3.3           \n#> [123] png_0.1-8               XML_3.99-0.15          \n#> [125] parallel_4.3.0          ellipsis_0.3.2         \n#> [127] blob_1.2.4              bitops_1.0-7           \n#> [129] viridisLite_0.4.2       slam_0.1-50            \n#> [131] scales_1.2.1            purrr_1.0.2            \n#> [133] crayon_1.5.2            GetoptLong_1.0.5       \n#> [135] rlang_1.1.1             cowplot_1.1.1          \n#> [137] KEGGREST_1.40.1"},{"path":"interactive-inspection-of-gene-cluster-network-annotated-by-words.html","id":"interactive-inspection-of-gene-cluster-network-annotated-by-words","chapter":"5 Interactive inspection of gene cluster network annotated by words","heading":"5 Interactive inspection of gene cluster network annotated by words","text":"example, Bayesian network showing module eigengenes relationship inferred using boot.strength function bnlearn weighted gene correlation network analysis (WGCNA) results. modules annotated word clouds produced refseq(), can exported format Cytoscape.js vis.js. way, module relationship can interactively inspected functional implications. functions like pubmed() can used, however, shold specify API keys function makes multiple queries.Use like http-server directory containing exported JavaScript, interactively inspect module relationship word information. example visualization shown (code , Bayesian network module eigenes inferred RNA-seq dataset ofbladder cancer).Interactive inspection possible using GitHub pages hosting services like .specify node attribute named group, set bubble=TRUE exportCyjs function, bubble sets plotted using cytoscape.js-bubblesets, useful inspecting similarity betwteen gene cluster, like output pvclust pvpick module eigengenes.vis.js can used, exporting function exportVisjs.\nexample, barplot words shown nodes.","code":"\nlibrary(biotextgraph)\nlibrary(ggplot2)\nlibrary(ggraph)\nlibrary(org.Hs.eg.db)\nlibrary(clusterProfiler)\nlibrary(RColorBrewer)\n## In this example, we simulate WGCNA results.\n## you can just use results from WGCNA.\n## Assuming WGCNA results are stored in `mod`\nmod <- biotextgraph::returnExample()\nMEs <- mod$MEs\nmodColors <- mod$colors\nensg <- names(modColors)\n\n# library(bnlearn)\nlibrary(igraph)\n\n## Replace like boot.strength(mod$MEs, R=500, algorithm = \"hc\")\n# dag <- model2network(\"[ME1][ME2|ME1]\") # If using bnlearn\ng <- graph_from_literal( ME1-+ME2, ME1-+ME3 )\n\n## Convert to igraph\n# g <- as.igraph(dag)\n\n## Assign edge attributes\n## Skip, if you perform boot.strength, the edge attributes can be added from the result\n# el <- data.frame(as_edgelist(g))\n# colnames(el) <- c(\"from\",\"to\")\n# el <- left_join(el, bs)\n# E(g)$strength <- el$strength\n# E(g)$direction <- el$direction\n\n## Node attributes\nV(g)$stripName <- gsub(\"ME\",\"\",V(g)$name)\nsizes <- table(modColors)\nV(g)$size <- as.numeric(sizes[V(g)$stripName])\n\n## Directory to save images and a script\nrootDir <- \"./\"\nnetDir <- \"visCyjs\"\nimageDir <- \"images\"\n\ndir.create(paste0(rootDir, \"/\", netDir))\ndir.create(paste0(rootDir, netDir, \"/\", imageDir))\n\nimages <- c()\nplotType <- \"bar\"\nnumLim <- 200 # limit for gene number\nfor (i in V(g)$name){\n    print(i)\n    i <- as.numeric(gsub(\"ME\",\"\",i)) # strip ME\n\n    queries <- ensg[modColors==i]\n    if (length(queries)>numLim) {\n        warning(\"Sampling random genes\")\n        queries <- queries[sample(1:length(queries), numLim)] ## Temporary restrict to randomly chosen genes, should be replaced to like kME values\n    }\n    \n    ## Convert to ENTREZ\n    entre <- AnnotationDbi::select(org.Hs.eg.db, keytype=\"ENSEMBL\",\n        keys = queries, columns = \"ENTREZID\")$ENTREZID\n    \n    if (plotType==\"bar\"){\n        plt <- makeBar(entre, keyType=\"ENTREZID\") # get barplot\n    } else { ## If wordcloud\n        # A <- refseq(entre, keyType=\"ENTREZID\",\n        #                    argList=list(rot.per=0.4,\n        #                                 colors=brewer.pal(10,\n        #                                                   sample(row.names(RColorBrewer::brewer.pal.info), 1)),\n        #                                 random.order=FALSE),\n        #                    numWords=80)\n        # # plt <- plotWC(A)\n        # # \n        # # ## This time use ggwordcloud()\n        # plt <- ggwordcloud::ggwordcloud(getSlot(A, \"freqDf\")$word, getSlot(A, \"freqDf\")$freq,\n        #                      shape=\"circle\", min.freq = 1,max.words = Inf,\n        #                      rot.per = 0.5, random.order = FALSE,\n        #                      colors = brewer.pal(10,\n        #                                          sample(row.names(RColorBrewer::brewer.pal.info), 1)))+\n        #          scale_size_area(max_size = 40)\n    }\n    ## Save images\n    ggsave(paste0(rootDir, netDir, \"/\", imageDir, \"/\", i ,\".png\"),\n           plt, dpi=300, width=10, height=10)\n    ## Store image dir\n    images <- c(images, paste0(imageDir, \"/\", i ,\".png\"))\n}\n#> [1] \"ME1\"\n#> Input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> [1] \"ME2\"\n#> Input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> [1] \"ME3\"\n#> Input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nV(g)$image <- images\n\n## Node shape\nif (plotType==\"bar\"){\n    V(g)$shape <- rep(\"rectangle\", length(V(g))) \n} else {\n    V(g)$shape <- rep(\"circle\", length(V(g)))\n}\n\n## Scale the node size\nsizeMin <- 50\nsizeMax <- 200\nrawMin <- min(V(g)$size)\nrawMax <- max(V(g)$size)\nscf <- (sizeMax-sizeMin)/(rawMax-rawMin)\nV(g)$size <- scf * V(g)$size + sizeMin - scf * rawMin\n\n## Export\nexportCyjs(g, rootDir, netDir)\n# or, exportVisjs(g, rootDir, netDir)\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/wordcloud\")\nV(g)$group <- c(1, 1, NA)\n# exportCyjs(g, rootDir, netDir, bubble=TRUE)\n\n## Example, not by the code above.\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/wordcloud_bubble\")\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/visjs\")"},{"path":"interactive-inspection-of-gene-cluster-network-annotated-by-words.html","id":"wrapper-function-for-wordcloud-network","chapter":"5 Interactive inspection of gene cluster network annotated by words","heading":"5.1 Wrapper function for wordcloud network","text":"network like previous example can conveniently exported using exportWCNetwork function, wrapped previous code. input igraph named gene list.","code":"\nmod <- biotextgraph::returnExample()\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\ng <- graph_from_literal( ME1-+ME2, ME1-+ME3 )\ngeneList <- list(\"ME1\"=mod$colors[mod$colors==1] |> names(),\n     \"ME2\"=mod$colors[mod$colors==2] |> names(),\n     \"ME3\"=mod$colors[mod$colors==3] |> names())\ng\n#> IGRAPH 91c1169 DN-- 3 2 -- \n#> + attr: name (v/c)\n#> + edges from 91c1169 (vertex names):\n#> [1] ME1->ME2 ME1->ME3\ngeneList\n#> $ME1\n#>  [1] \"ENSG00000108702\" \"ENSG00000108691\" \"ENSG00000277632\"\n#>  [4] \"ENSG00000278567\" \"ENSG00000274221\" \"ENSG00000275302\"\n#>  [7] \"ENSG00000277943\" \"ENSG00000275824\" \"ENSG00000271503\"\n#> [10] \"ENSG00000274233\" \"ENSG00000108688\" \"ENSG00000108700\"\n#> \n#> $ME2\n#>  [1] \"ENSG00000163739\" \"ENSG00000081041\" \"ENSG00000163734\"\n#>  [4] \"ENSG00000163735\" \"ENSG00000124875\" \"ENSG00000169429\"\n#>  [7] \"ENSG00000138755\" \"ENSG00000169245\" \"ENSG00000169248\"\n#> [10] \"ENSG00000107562\" \"ENSG00000156234\" \"ENSG00000145824\"\n#> [13] \"ENSG00000161921\"\n#> \n#> $ME3\n#> [1] \"ENSG00000012061\" \"ENSG00000104884\" \"ENSG00000163161\"\n#> [4] \"ENSG00000175595\" \"ENSG00000134899\" \"ENSG00000225830\"\n#> [7] \"ENSG00000049167\"\nexportWCNetwork(g,geneList,keyType=\"ENSEMBL\",\n    wcScale=50,scaleMax=20,scaleMin=10)\n#> Warning in brewer.pal(10, sample(row.names(RColorBrewer::brewer.pal.info), : n too large, allowed maximum for palette YlGnBu is 9\n#> Returning the palette you asked for with that many colors\n#> Warning in dir.create(paste0(dir)): 'network'\n#> はすでに存在します\n#> Warning in dir.create(paste0(dir, \"/images\")):\n#> 'network/images' はすでに存在します\n#> Input genes: 12\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\n#> Warning in wordcloud_boxes(data_points =\n#> points_valid_first, boxes = boxes, : Some words could not\n#> fit on page. They have been removed.\n#> Input genes: 13\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\n#> Warning in wordcloud_boxes(data_points =\n#> points_valid_first, boxes = boxes, : Some words could not\n#> fit on page. They have been removed.\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale."},{"path":"annotating-gene-cluster-dendrogram.html","id":"annotating-gene-cluster-dendrogram","chapter":"6 Annotating gene cluster dendrogram","heading":"6 Annotating gene cluster dendrogram","text":"","code":""},{"path":"annotating-gene-cluster-dendrogram.html","id":"annotating-by-pyramid-plots","chapter":"6 Annotating gene cluster dendrogram","heading":"6.1 Annotating by pyramid plots","text":"relationship gene clusters often investigated clustering analysis like WGCNA. workflows involving gene clustering analysis typically plot dendrogram heatmap module eigengenes using plotEigengeneNetworks, useful combine biotextgraph, plot additional word information dendrogram one line.calculates dendrogram using pvclust internally default. like plot segments involving specified gene cluster, use candidateNodes specify nodes.default, function calculates frequency common words across branches plot words differences branches large. disabling takeIntersect, function plots frequent words branch.examining enriched pathway names dendrograms, specify argList refseq, like list(enrich=\"kegg\").textual information, can simply annotate dendrogram using enrichment analysis.\nUseful inspecting branches dendrogram contains pathway information.column names clusterProfiler results can specified showType.Text sizing wrapping can controlled textSize wrap.specifically interested pathway, use highlight highlight names dendrogram.","code":"\n# WGCNA::plotEigengeneNetworks(mod$MEs, mod$colors, plotHeatmaps = FALSE)\nplotEigengeneNetworksWithWords(MEs, modColors)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs, modColors, candidateNodes=c(\"ME2\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs,\n    modColors, takeIntersect=FALSE, candidateNodes=c(\"ME2\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"words\", argList=list(enrich=\"kegg\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Performing enrichment analysis\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Performing enrichment analysis\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"enrich\")\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"enrich\", showType=\"Description\")\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"enrich\", showType=\"Description\",\n    textSize=1.5, wrap=30)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotEigengeneNetworksWithWords(mod$MEs, mod$colors,\n                               type=\"enrich\", highlight=c(\"hsa04060\"))+\n  scale_y_continuous(expand=c(0,0.5))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#> 'select()' returned 1:1 mapping between keys and\n#> columns"},{"path":"annotating-gene-cluster-dendrogram.html","id":"annotating-by-word-clouds","chapter":"6 Annotating gene cluster dendrogram","heading":"6.2 Annotating by word clouds","text":"plot word cloud instead pyramid plots, use useWC option. scaling word size, use wcScale option.uses ggwordcloud list specified wcArgs passed function.horizontal plot can specified horiz=TRUE.spacer can control gaps grob dendrogram (y-axis).\nhorizontalSpacer can used x-axis.Using popular tree visualization library ggtree ggimage, plotting word cloud tip nodes possible specifying tipWC=TRUE . saves word cloud plots imageDir, show images tip nodes. Various positional parameters well aspect ratio can passed function correctly plot images. Note show tip nodes, interesting nodes specified tipWCNodes. mode, one must pass object can passed ggtree().specifying returnGlobOnly, grobs position dendrogram can returned.","code":"\nscale4 <- plotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=4)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\nscale15 <- plotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=15)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\nscale4 + scale15\nplotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=15, wcArgs=list(rot.per=0))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\nplotEigengeneNetworksWithWords(MEs,\n                               modColors,\n                               useWC=TRUE,\n                               candidateNodes=c(\"ME2\"),\n                               wcScale=15,\n                               wcArgs=list(rot.per=0),\n                               horiz=TRUE)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\nplotEigengeneNetworksWithWords(mod$MEs, mod$colors,\n                               type=\"enrich\", highlight=c(\"hsa04060\"), spacer=0.2)+\n    scale_y_continuous(expand=c(0,0.5))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n\nplotEigengeneNetworksWithWords(mod$MEs, mod$colors, useWC=TRUE,\n                               spacer=0.2, horizontalSpacer=0.1)+\n    scale_y_continuous(expand=c(0,0.5))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\n#> Warning in brewer.pal(10, sample(row.names(RColorBrewer::brewer.pal.info), : n too large, allowed maximum for palette OrRd is 9\n#> Returning the palette you asked for with that many colors\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\nhcl <- hclust(dist(t(mod$MEs)))\ngr <- plotEigengeneNetworksWithWords(mod$MEs,\n                                     mod$colors,\n                                     dendPlot=\"ggtree\",\n                                     dhc=hcl,\n                                     useWC=TRUE,\n                                     tipWC=TRUE,\n                                     tipWCNodes=c(\"ME3\"),\n                                     imageDir=\"testimage\",\n                                     candidateNodes=c(\"ME2\"),\n                                     wcScale=10,\n                                     tipSize = .3,\n                                     offset = .1,\n                                     asp=1.4)\n#> Annotating tip by word cloud\n#>   Producing ME3\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\n#> Warning in brewer.pal(10, sample(row.names(RColorBrewer::brewer.pal.info), : n too large, allowed maximum for palette BuPu is 9\n#> Returning the palette you asked for with that many colors\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\n#> Saving the image for plotting on the dendrogram\n#> Input genes: 25\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\ngr + scale_x_continuous(expand=c(0,6))\n#> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned.\n#> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned.\n#> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned.\n#> ! # Invaild edge matrix for <phylo>. A <tbl_df> is returned.\n#> Warning in wordcloud_boxes(data_points =\n#> points_valid_first, boxes = boxes, : Some words could not\n#> fit on page. They have been removed.\ngro <- plotEigengeneNetworksWithWords(mod$MEs, mod$colors, candidateNodes=c(\"ME2\"),\n                               returnGlobOnly=TRUE)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 13\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nggplotify::as.ggplot(gro[[1]]$plot)"},{"path":"annotating-gene-cluster-dendrogram.html","id":"decorating-wordclouds","chapter":"6 Annotating gene cluster dendrogram","heading":"6.3 Decorating wordclouds","text":"needed, wordclouds can filtered ggfx using shadowtext. case, border set FALSE background transparent resulting grobs. shadowtext needed, specify bg.colour argument. ggfx needed, specify filter function useggfx parameters ggfxParams.example shows using dendrogram like produced WGCNA combining parameters.","code":"\nlibrary(ggfx)\nplotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=4,\n    bg.colour=\"grey80\")+ scale_y_continuous(expand=c(0,3))\n#> Bootstrap (r = 0.5)... Done.\n#> Warning: inappropriate distance matrices are omitted in\n#> computation: r = 0.5\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\n#> border is set to FALSE as bg.colour is not NULL\nplotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=4,\n    useggfx=\"with_outer_glow\", ggfxParams=list(colour=\"white\",expand=5))+ scale_y_continuous(expand=c(0,3))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 20\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.304\n#> Scale for size is already present.\n#> Adding another scale for size, which will replace the\n#> existing scale.\n#> border is set to FALSE as useggfx is not NULL\nlibrary(ggfx)\nload(\"./blockwiseModule.rda\")\nMEs <- bwmod$MEs\nmodColors <- bwmod$colors\nplotEigengeneNetworksWithWords(MEs,useWC=TRUE,\n                              modColors, candidateNodes=c(\"ME11\",\"ME3\",\"ME7\",\"ME6\",\"ME12\"),\n                              useggfx=\"with_outer_glow\", useRandomColor=TRUE,\n                              ggfxParams=list(colour=\"white\",expand=3),\n                              wcScale=6, wcArgs=list(shape=\"square\",\n                              min.freq=1, max.words=Inf, rot.per=0.5,random.order=FALSE))\n#> Bootstrap (r = 0.49)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.69)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.89)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.09)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.29)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 5847\n#>   Converted input genes: 4869\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0\n#> Input genes: 132\n#>   Converted input genes: 127\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.201\n#> Input genes: 5673\n#>   Converted input genes: 4702\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0\n#> border is set to FALSE as useggfx is not NULL"},{"path":"quantitative-analysis.html","id":"quantitative-analysis","chapter":"7 Quantitative analysis","heading":"7 Quantitative analysis","text":"","code":""},{"path":"quantitative-analysis.html","id":"assess-the-occurrence-of-the-speicific-words-across-gene-clusters","chapter":"7 Quantitative analysis","heading":"7.1 Assess the occurrence of the speicific words across gene clusters","text":"clustering analysis like WGCNA, making list query.","code":"\nlibrary(limma)\nlibrary(ggrepel)\nquery <- \"DNA repair\"\ntab <- getGeneKEGGLinks(species=\"hsa\")\nlistOfGenes <- list()\nfor (path in unique(tab$PathwayID)){\n    listOfGenes[[path]] <- subset(tab, PathwayID==path)$GeneID\n}\n## Random subset! The results would be different.\nfrq <- findTerm(query, listOfGenes[sample(length(listOfGenes), 20)],\n                split=TRUE, calc=\"mean\",\n                keyType=\"ENTREZID\")\n#> Finding query in 20 clusters ...\n#> Input genes: 85\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 48\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 21\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 115\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 47\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 108\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 15\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 78\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 63\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 113\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 34\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 52\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 18\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 225\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 306\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 53\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 42\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 49\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 137\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplt <- data.frame(t(data.frame(frq, check.names=FALSE)),\n                  check.names=FALSE)\n\nplt$name <- gsub(\"path:\", \"\", rownames(plt))\np <- ggplot(plt, aes(dna, repair, label = plt[,3])) +\n    geom_point(color = \"red\")+ \n    geom_text_repel(bg.color=\"white\")+theme_minimal()+\n    xlab(\"dna\")+ylab(\"repair\")\np\nquery <- \"antiviral response\"\nload(\"./blockwiseModule.rda\")\nmecolors <- bwmod$color\ninputList <- names(mecolors)\nnames(inputList) <- paste0(\"ME\",bwmod$color)\n\nlistOfGenes <- split(inputList, names(inputList))\n\nfrq <- findTerm(query, listOfGenes,\n                split=TRUE,calc=\"highest\",\n                keyType=\"ENSEMBL\")\n#> Finding query in 17 clusters ...\n#> Input genes: 12943\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 9875\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 5534\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 4644\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 43\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 42\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 43\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 42\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 41\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 40\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 33\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 39\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 37\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 38\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 38\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 2192\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 2017\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 740\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 577\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 653\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 533\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 621\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 534\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 591\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 471\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 139\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 58\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 112\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 65\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Input genes: 89\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 87\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nplt <- data.frame(t(data.frame(frq, check.names=FALSE)),\n                  check.names=FALSE)\nplt$name <- row.names(plt)\n\np <- ggplot(plt, aes(antiviral, response, label = plt[,3])) +\n  geom_point(color = \"blue\")+ \n  geom_text_repel(bg.color=\"white\")+theme_minimal()+\n  xlab(\"antiviral\")+ylab(\"response\")\np"},{"path":"quantitative-analysis.html","id":"recluster-the-cluster-using-word-information","chapter":"7 Quantitative analysis","heading":"7.2 Recluster the cluster using word information","text":"","code":"\nsimExample <- returnSim(returnExample()$color,\n                        keyType=\"ENSEMBL\", argList=list(ora=TRUE))\n#> Number of clusters: 3\n#> 1\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 109 words (ORA)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.6\n#> 2\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 238 words (ORA)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.4\n#> 3\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 148 words (ORA)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.5\nheatmap(simExample)\nsimExample <- returnSim(returnExample()$color,\n                        keyType=\"ENSEMBL\",\n                        argList=list(tfidf=TRUE, takeMax=TRUE))\n#> Number of clusters: 3\n#> 1\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.917\n#> 2\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.091\n#> 3\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.216\nheatmap(simExample)\nsimExample <- returnSim(returnExample()$color,\n                        keyType=\"ENSEMBL\",\n                        argList=list(tfidf=FALSE,\n                            normalize=TRUE,\n                            takeMean=TRUE))\n#> Number of clusters: 3\n#> 1\n#> Input genes: 12\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.6\n#> 2\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.4\n#> 3\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.7\nheatmap(simExample)"},{"path":"single-cell-transcriptomic-data.html","id":"single-cell-transcriptomic-data","chapter":"8 Single-cell transcriptomic data","heading":"8 Single-cell transcriptomic data","text":"use single-cell transcriptomic data, functions prepared.","code":""},{"path":"single-cell-transcriptomic-data.html","id":"visualizing-textual-information-for-marker-genes","chapter":"8 Single-cell transcriptomic data","heading":"8.1 Visualizing textual information for marker genes","text":"Visualize network cluster’s marker genes.TextMarkers function can used Seurat results. pvalThresh can specified.Word clouds can also shown.","code":"\nlibrary(Seurat)\nlibrary(patchwork)\nlibrary(ggraph)\nlibrary(biotextgraph)\nlibrary(ggsc) ## can be installed by devtools::install_github(\"YuLab-SMU/ggsc\")\ndir = \"filtered_gene_bc_matrices/hg19\"\npbmc.data <- Read10X(data.dir = dir)\npbmc <- CreateSeuratObject(counts = pbmc.data, project = \"pbmc3k\",\n                           min.cells=3, min.features=200)\npbmc <- NormalizeData(pbmc)\npbmc <- FindVariableFeatures(pbmc, selection.method = \"vst\")\npbmc <- ScaleData(pbmc, features = row.names(pbmc))\npbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))\npbmc <- FindNeighbors(pbmc, dims = 1:10, verbose = FALSE)\npbmc <- FindClusters(pbmc, resolution = 0.5, verbose = FALSE)\n# pbmc <- RunUMAP(pbmc, dims = 1:10, umap.method = \"uwot\", metric = \"cosine\")\nDimPlot(pbmc, reduction = \"pca\",\n        label = TRUE, pt.size = 0.5) \n## Or, use ggsc (ggsc, https://yulab-smu.top/ggsc/)\nsc_dim(pbmc) + \n    sc_dim_geom_label(geom = shadowtext::geom_shadowtext, \n            color='black', bg.color='white')\nmarkers <- FindAllMarkers(pbmc)\ntexts <- markers |> TextMarkers(type=\"network\", pvalThresh=1e-50)\n#> 0\n#> Input genes: 75\n#>   Converted input genes: 75\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.514\n#> 1\n#> Input genes: 197\n#>   Converted input genes: 189\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.102\n#> 2\n#> Input genes: 8\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.323\n#> 3\n#> Input genes: 64\n#>   Converted input genes: 60\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.101\n#> 4\n#> Input genes: 16\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.2\n#> 5\n#> Input genes: 88\n#>   Converted input genes: 82\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.201\n#> 6\n#> Input genes: 40\n#>   Converted input genes: 39\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n#> 7\n#> Input genes: 9\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.273\n#> 8\n#> Input genes: 63\n#>   Converted input genes: 52\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.102\nwrap_plots(texts, nrow=3)\ntexts <- markers |> TextMarkers(type=\"wc\", pvalThresh=1e-50)\n#> 0\n#> Input genes: 75\n#>   Converted input genes: 75\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 1\n#> Input genes: 197\n#>   Converted input genes: 189\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 2\n#> Input genes: 8\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 3\n#> Input genes: 64\n#>   Converted input genes: 60\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 16\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 5\n#> Input genes: 88\n#>   Converted input genes: 82\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 6\n#> Input genes: 40\n#>   Converted input genes: 39\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 7\n#> Input genes: 9\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 8\n#> Input genes: 63\n#>   Converted input genes: 52\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nwrap_plots(texts, nrow=3)"},{"path":"single-cell-transcriptomic-data.html","id":"findmarkers-in-scran","chapter":"8 Single-cell transcriptomic data","heading":"8.2 findMarkers() in scran","text":"use data GSE101341 example input scran.function TextMarkersScran performs text fetching recursively cluster.","code":"\nlibrary(SingleCellExperiment)\nlibrary(scater)\nlibrary(scran)\ndf <- read.table(\"GSE101341_CD14_umis.txt\",\n                 sep=\"\\t\", row.names=1,\n                 header=1)\ndf |> dim()\n#> [1] 26121  3655\ndes <- read.table(\"GSE101341_experimental_design.txt\", sep=\"\\t\", row.names=1, header=1)\ndes |> dim()\n#> [1] 3655    5\nsce <- SingleCellExperiment(list(counts=df), colData=des |> DataFrame())\nsce ## Contains some malformed gene names...\n#> class: SingleCellExperiment \n#> dim: 26121 3655 \n#> metadata(0):\n#> assays(1): counts\n#> rownames(26121): 1-Dec 1-Mar ... mir-34;MIR34A\n#>   unknown\n#> rowData names(0):\n#> colnames(3655): W101153 W101171 ... W503839 W503840\n#> colData names(5): Batch.ID well_coordinates\n#>   Cell_barcode Pool_barcode DPI\n#> reducedDimNames(0):\n#> mainExpName: NULL\n#> altExpNames(0):\n\nset.seed(1)\n\nqcstats <- perCellQCMetrics(sce)\nqcfilter <- quickPerCellQC(qcstats)\nsce <- sce[,!qcfilter$discard]\nsummary(qcfilter$discard)\n#>    Mode   FALSE \n#> logical    3655\n\nlib.sf.sce <- librarySizeFactors(sce)\nclust.sce <- quickCluster(sce) \nsce <- computeSumFactors(sce,\n                         cluster=clust.sce,\n                         min.mean=0.1)\nsce <- logNormCounts(sce)\ntop.sce <- getTopHVGs(sce, n=2000)\nsce <- fixedPCA(sce, subset.row=top.sce) \n# sce <- runUMAP(sce)\nnn.clusters <- clusterCells(sce, use.dimred=\"PCA\")\ncolLabels(sce) <- nn.clusters\nplrd <- plotReducedDim(sce, dimred=\"PCA\", colour_by=\"label\")\nplrd_DPI <- plotReducedDim(sce, dimred=\"PCA\", colour_by=\"DPI\")\n\nplrd + plrd_DPI\nmarker.info <- findMarkers(sce, colLabels(sce))\ntexts <- marker.info |> TextMarkersScran(top=5)\n#> 1\n#> Input genes: 21\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 2\n#> Input genes: 21\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 3\n#> Input genes: 22\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 18\n#>   Converted input genes: 11\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 5\n#> Input genes: 25\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 6\n#> Input genes: 25\n#>   Converted input genes: 15\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 7\n#> Input genes: 17\n#>   Converted input genes: 11\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 8\n#> Input genes: 24\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 9\n#> Input genes: 16\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\ntexts$`1` + texts$`4`"},{"path":"single-cell-transcriptomic-data.html","id":"map-resulting-wordcloud-plots-on-the-dimensionality-reducing-plot.","chapter":"8 Single-cell transcriptomic data","heading":"8.3 Map resulting wordcloud plots on the dimensionality reducing plot.","text":"Single-cell level wordclouds can plotted reduced dimension plot cells.\ntitle wordcloud network can suppressed withTitle=FALSE.function prepared generate colors show word cloud reduced dimension plot using color original plot (plotReducedDimWithTexts). function can use use_shadowtext ggwordcloud::geom_text_wordcloud, available forked repository (noriakis/ggwordcloud). bg.colour used specify background color. Otherwise, one can specify ggfx filtering functions withggfx ggfxParams parameters, reflects wordcloud.Seurat object, use DimPlotWithTexts().Give function data frame already filtered, like thersholding adjusted p-values.geom_sc_wordcloud prepared use conjuction ggsc.positioning arguments prepared.","code":"\nlibrary(dplyr)\n\n## Make text visible\nrawPlot <- plotReducedDim(sce, dimred=\"PCA\",\n                          colour_by=\"label\",\n                          point_alpha=0.4)\n\n\nset.seed(5)\ntexts <- marker.info[c(1,4)] |> TextMarkersScran(wcArgs=list(alpha=0.9),\n                                                      args=list(wcScale=4),\n                                                      withTitle=FALSE, top=5)\n#> 1\n#> Input genes: 21\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 18\n#>   Converted input genes: 11\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n\n\nnew_points <- rawPlot$data |>\n  group_by(colour_by) |>\n  summarise(XMi=min(X),\n            YMi=min(Y),\n            XMa=max(X),\n            YMa=max(Y))\n\nfor (i in names(texts)) {\n  tmp <- subset(new_points,\n                new_points$colour_by==i)\n  tmpXMi <- tmp$XMi; tmpYMi <- tmp$YMi; tmpXMa <- tmp$XMa; tmpYMa <- tmp$YMa\n  rawPlot <- rawPlot + annotation_custom(ggplotify::as.grob(texts[[i]]),\n                                   xmin=tmpXMi, xmax=tmpXMa,\n                                   ymin=tmpYMi, ymax=tmpYMa)\n}\nrawPlot\nlibrary(ggfx)\n\nplotReducedDimWithTexts(sce, marker.info, colour_by=\"label\",point_alpha=0.3,\n                        use_shadowtext=TRUE, which.label=c(\"1\",\"4\"))\n#> 1\n#> Input genes: 39\n#>   Converted input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 43\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n\n## Change the bg.colour\nplotReducedDimWithTexts(sce, marker.info, colour_by=\"label\",point_alpha=0.3,\n                        use_shadowtext=TRUE, bg.colour=\"tomato\",\n                        which.label=c(\"1\",\"4\"))\n#> 1\n#> Input genes: 39\n#>   Converted input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 43\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n\n## Use `with_outer_glow`\nplotReducedDimWithTexts(sce, marker.info, colour_by=\"label\",point_alpha=0.3,\n                        use_shadowtext=FALSE, withggfx=\"with_outer_glow\",\n                        which.label=c(\"1\",\"4\"))\n#> 1\n#> Input genes: 39\n#>   Converted input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 43\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n\n## Use `with_outer_glow` with parameters\nplotReducedDimWithTexts(sce, marker.info, colour_by=\"label\",point_alpha=0.3,\n                        use_shadowtext=FALSE, withggfx=\"with_outer_glow\",\n                        ggfxParams=list(colour=\"white\", expand=2),\n                        which.label=c(\"1\",\"4\"))\n#> 1\n#> Input genes: 39\n#>   Converted input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 43\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n## Use `with_inner_glow`\nplotReducedDimWithTexts(sce, marker.info, colour_by=\"label\",point_alpha=0.3,\n                        use_shadowtext=FALSE, withggfx=\"with_inner_glow\",\n                        which.label=c(\"1\",\"4\"))\n#> 1\n#> Input genes: 39\n#>   Converted input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 43\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n\n## Change the font\n## Use alien encounter fonts (http://www.hipsthetic.com/alien-encounters-free-80s-font-family/)\nsysfonts::font_add(family=\"alien\",regular=\"SFAlienEncounters.ttf\")\nshowtext::showtext_auto()\nplotReducedDimWithTexts(sce, marker.info, colour_by=\"label\",point_alpha=0.3,\n                        use_shadowtext=TRUE, bg.colour=\"white\", args=list(fontFamily=\"alien\"),\n                        which.label=c(\"4\"), wcScale=6)\n#> 4\n#> Input genes: 43\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nr <- rep(4, length(unique(markers$cluster)))\nnames(r) <- unique(markers$cluster)\nDimPlotWithTexts(pbmc, markers, label=FALSE, rad=r, which.label=c(\"1\",\"4\"),\n                 wcScale=6)\n#> 1\n#> Input genes: 1455\n#>   Converted input genes: 1349\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 385\n#>   Converted input genes: 358\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nr <- rep(2, length(unique(markers$cluster)))\nnames(r) <- unique(markers$cluster)\nthresh <- subset(markers, markers$p_val_adj<1e-50)\nDimPlotWithTexts(pbmc,\n                 thresh,\n                 label=FALSE,\n                 rad=r,\n                 which.label=c(\"2\",\"4\",\"6\"),\n                 args=list(numWords=50,scaleFreq=5))\n#> 2\n#> Input genes: 8\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 4\n#> Input genes: 16\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 6\n#> Input genes: 40\n#>   Converted input genes: 39\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nsc_dim(pbmc,reduction = \"pca\")+\n  geom_sc_wordcloud(markers, show_markers = c(3,5),\n                    p_val_adj_threshold = 1e-50, wcScale=7)+\n  sc_dim_geom_label(geom = shadowtext::geom_shadowtext, \n                  color='black', bg.color='white')\n#> 3\n#> Input genes: 64\n#>   Converted input genes: 60\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 5\n#> Input genes: 88\n#>   Converted input genes: 82\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\nsc_dim(pbmc,reduction = \"pca\")+\n  geom_sc_wordcloud(markers, show_markers = c(4,7),\n                    p_val_adj_threshold = 1e-50,\n                    wcScale=7,\n                    base_dens=TRUE)\n#> 4\n#> Input genes: 16\n#>   Converted input genes: 16\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 7\n#> Input genes: 9\n#>   Converted input genes: 8\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)"},{"path":"single-cell-transcriptomic-data.html","id":"plotting-marker-gene-names-in-plot","chapter":"8 Single-cell transcriptomic data","heading":"8.4 Plotting marker gene names in plot","text":"can plot gene names instead gene description specifying gene_name=TRUE geom_sc_wordcloud(). Number genes can controlled geneNum. genes cluster ordered sortBy, decreasing order default (decreasing option).Scaling color called geom_sc_wordcloud().scran, use plotReducedDimWithTexts.","code":"\nsc_dim(pbmc,reduction = \"pca\")+\n    geom_sc_wordcloud(markers, show_markers = c(0,5),\n                      gene_name = TRUE, wcScale=7,\n                      p_val_adj_threshold = 1e-50, base_dens = TRUE)\n\nsc_dim(pbmc,reduction = \"pca\")+\n    geom_sc_wordcloud(markers, show_markers = c(0,5),\n                      gene_name = TRUE, wcScale=7, use_shadowtext=FALSE,\n                      withggfx=\"with_outer_glow\", ggfxParams=list(colour=\"white\", expand=1.5),\n                      p_val_adj_threshold = 1e-50, base_dens = TRUE)\nsc_dim(pbmc,reduction = \"pca\")+\n    scale_color_manual(values=RColorBrewer::brewer.pal(9, \"PuOr\"))+\n    geom_sc_wordcloud(markers, show_markers = c(0,5),\n                      gene_name = TRUE, wcScale=7,\n                      p_val_adj_threshold = 1e-50, base_dens = TRUE)\nscex <- plotReducedDimWithTexts(sce,\n                        marker.info,\n                        colour_by=\"label\",\n                        base_dens = TRUE,\n                        point_alpha=0.3,\n                        wcScale=6,\n                        use_shadowtext=TRUE,\n                        bg.colour=\"grey80\",\n                        gene_name=TRUE,\n                        which.label=c(\"1\",\"4\"))\nscex"},{"path":"single-cell-transcriptomic-data.html","id":"plotting-the-enrichment-analysis-results-of-marker-genes","chapter":"8 Single-cell transcriptomic data","heading":"8.4.1 Plotting the enrichment analysis results of marker genes","text":"","code":"\nr <- rep(3, length(unique(markers$cluster)))\nnames(r) <- unique(markers$cluster)\n\n## Enrichment analysis\nDimPlotWithTexts(pbmc, thresh, label=FALSE,\n                       point_alpha = 0.8,which.label = c(0,6),\n                       args=list(enrich=\"reactome\",\n                                 numWords=50),\n                       reduction = \"pca\", base_dens=TRUE,\n                       wcScale=7)\n#> 0\n#> Input genes: 75\n#>   Converted input genes: 75\n#> Performing enrichment analysis\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> 6\n#> Input genes: 40\n#>   Converted input genes: 39\n#> Performing enrichment analysis\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)"},{"path":"app.html","id":"app","chapter":"9 Application examples","heading":"9 Application examples","text":"","code":""},{"path":"app.html","id":"actual-application-of-the-package","chapter":"9 Application examples","heading":"9.1 Actual application of the package","text":"","code":""},{"path":"app.html","id":"the-selection-of-genes","chapter":"9 Application examples","heading":"9.1.1 The selection of genes","text":"input genes can selected various ways. cases, list obtained differential expression analysis can used input function. Additionally, cluster genes identified gene clustering analysis weighted gene co-expression network analysis can used input.","code":""},{"path":"app.html","id":"gene-cluster","chapter":"9 Application examples","heading":"9.2 Gene cluster","text":"","code":""},{"path":"app.html","id":"load-the-necessary-packages-and-genes","chapter":"9 Application examples","heading":"9.2.1 Load the necessary packages and genes","text":"omics analysis involving transcript genes, obtain list containing single gene type ERCC genes shown example. almost cases, gene comes various biological pathways like obtained analysis mentioned section. , introduce example using example cluster WGCNA analysis obtained transcriptomic dataset investigating bladder cancer (Chen et al. 2019).First, perform -representation analysis gene set (KEGG) grasp biological functions genes.use function biotextgraph make summarized visualization textual information, along associated genes. input reaching hundred genes, option filterByGO term, filters text mining results used GO terms. useful limiting visualization biologically-relevant terms.genes related significantly enriched pathway, one like inspect biological function genes.time, enable filterByGO option along ngram=2, produces 2-gram visualization.way, can filter unnecessary words many terms included textual information identifiers, focus biologically relevant terms contained identifiers.","code":"\nlibrary(biotextgraph)\nlibrary(org.Hs.eg.db)\nlibrary(ggplot2)\nlibrary(ReactomePA);library(clusterProfiler)\nlibrary(ggraph);library(igraph)\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"biotextgraph\"))\nconverted <- clusterProfiler::bitr(exampleWGCNAcluster,\n    fromType=\"ENSEMBL\", toType=\"ENTREZID\",\n    OrgDb=\"org.Hs.eg.db\")[,2]\nora <- clusterProfiler::enrichKEGG(converted)\nora |> filter(p.adjust<0.05) |> data.frame() |> dplyr::pull(\"Description\")\n#>  [1] \"Butanoate metabolism\"                      \n#>  [2] \"Fatty acid metabolism\"                     \n#>  [3] \"Tight junction\"                            \n#>  [4] \"Valine, leucine and isoleucine degradation\"\n#>  [5] \"Peroxisome\"                                \n#>  [6] \"Fatty acid degradation\"                    \n#>  [7] \"Fatty acid elongation\"                     \n#>  [8] \"Biosynthesis of unsaturated fatty acids\"   \n#>  [9] \"alpha-Linolenic acid metabolism\"           \n#> [10] \"PPAR signaling pathway\"                    \n#> [11] \"Aldosterone-regulated sodium reabsorption\" \n#> [12] \"Sphingolipid metabolism\"\nenrichplot::dotplot(ora, showCategory=20)\ncheck <- refseq(converted, genePlot=TRUE,\n                filterByGO=TRUE, keyType=\"ENTREZID\", autoThresh=FALSE)\n#> Input genes: 534\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> `filterByGO` option enabled. Filtering by GO terms ...\nplotNet(check, asis=TRUE)\n## Extraction of non-related genes\nenr_genes <- ora@result %>% data.frame() %>% \n  filter(p.adjust<0.05) %>% dplyr::pull(geneID) %>%\n  strsplit(\"/\") %>% unlist() %>% unique()\n\nno_enr <- converted[!(converted %in% enr_genes)]\nlength(no_enr)\n#> [1] 472\ncheck_noenr_WGO <- refseq(no_enr,\n    layout=\"nicely\",\n    ngram=2,\n    keyType=\"ENTREZID\",\n    filterByGO=TRUE,\n    autoThresh=FALSE,\n    corThresh=0.1,\n    docsum=TRUE)\n#> Input genes: 472\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> `filterByGO` option enabled. Filtering by GO terms ...\nplotNet(check_noenr_WGO, asis=TRUE)"},{"path":"app.html","id":"degs","chapter":"9 Application examples","heading":"9.3 DEGs","text":"demonstrate use case package, investigates transcriptomic changes induced BK polyomavirus (BKPyV) infection renal proximal tubular epithelial cells (Assetta et al. 2016). Differentially expressed mRNAs 3 days post-infection obtained, -regulated mRNAs BKPyV infected cells examined.","code":""},{"path":"app.html","id":"load-the-necessary-packages-and-genes-1","chapter":"9 Application examples","heading":"9.3.1 Load the necessary packages and genes","text":"","code":"\nlibrary(biotextgraph)\nlibrary(org.Hs.eg.db)\nlibrary(ggplot2)\nlibrary(ReactomePA);library(clusterProfiler)\nlibrary(ggraph);library(igraph)\nlibrary(ggforce) ## For genePathPlot\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"biotextgraph\"))\ndegs <- d3degDownAssetta2016\nlength(degs)\n#> [1] 191\ndegs\n#>   [1] \"ABCB4\"           \"ABCB7\"           \"AKTIP\"          \n#>   [4] \"ALS2\"            \"ANKRA2\"          \"ANTXR1\"         \n#>   [7] \"APH1B\"           \"ARHGEF28\"        \"ARNTL\"          \n#>  [10] \"ATMIN\"           \"BDH2\"            \"BIRC2\"          \n#>  [13] \"BTG1\"            \"BTG2\"            \"C4A\"            \n#>  [16] \"C7orf60\"         \"C8orf4\"          \"CALCOCO1\"       \n#>  [19] \"CAPRIN2\"         \"CARS\"            \"CBLB\"           \n#>  [22] \"CCNDBP1\"         \"CCNG2\"           \"CCZ1B\"          \n#>  [25] \"CDC42EP3\"        \"CDH6\"            \"CFLAR\"          \n#>  [28] \"CHMP1B\"          \"CHMP4C\"          \"CLUAP1\"         \n#>  [31] \"COG2\"            \"COG3\"            \"CPQ\"            \n#>  [34] \"CROT\"            \"CTTNBP2NL\"       \"CYP4V2\"         \n#>  [37] \"DAB2\"            \"DDB2\"            \"DDX17\"          \n#>  [40] \"DDX5\"            \"DGKA\"            \"DHX32\"          \n#>  [43] \"DLG1\"            \"DYNC2LI1\"        \"DYRK2\"          \n#>  [46] \"EFHC1\"           \"EIF4A2\"          \"ERMAP\"          \n#>  [49] \"ERMARD\"          \"EXOC1\"           \"FAM134B\"        \n#>  [52] \"FAM160B1\"        \"FAM21C\"          \"FAM84B\"         \n#>  [55] \"FANK1\"           \"FAS\"             \"FBXO38\"         \n#>  [58] \"FCHO2\"           \"FGD6\"            \"FLJ22447\"       \n#>  [61] \"FMNL2\"           \"GADD45A\"         \"GJA1\"           \n#>  [64] \"GLIDR\"           \"GLT8D1\"          \"GOPC\"           \n#>  [67] \"GPBP1L1\"         \"GPR155\"          \"GPR75-ASB3\"     \n#>  [70] \"GRAMD3\"          \"HADHB\"           \"HCG11\"          \n#>  [73] \"HDAC9\"           \"HDHD2\"           \"HERPUD1\"        \n#>  [76] \"HSDL2\"           \"ICA1\"            \"ICK\"            \n#>  [79] \"IFNGR1\"          \"IFT46\"           \"IFT74\"          \n#>  [82] \"IRF6\"            \"ITGA2\"           \"ITGA6\"          \n#>  [85] \"ITGAV\"           \"ITGB6\"           \"KDM5B\"          \n#>  [88] \"KIF3A\"           \"KIF5B\"           \"KLHL20\"         \n#>  [91] \"KLHL24\"          \"KLHL9\"           \"KPNA5\"          \n#>  [94] \"KRCC1\"           \"L3MBTL3\"         \"LINC00657\"      \n#>  [97] \"LOC100131564\"    \"LZTFL1\"          \"MAMDC2\"         \n#> [100] \"MAP4K5\"          \"MAT2B\"           \"MBNL2\"          \n#> [103] \"MDM2\"            \"MECOM\"           \"MFSD1\"          \n#> [106] \"MGEA5\"           \"MICU3\"           \"MSANTD4\"        \n#> [109] \"NBPF11\"          \"NCBP2\"           \"NEAT1\"          \n#> [112] \"NTM\"             \"OGT\"             \"PAFAH1B2\"       \n#> [115] \"PAFAH2\"          \"PCMTD2\"          \"PDE4D\"          \n#> [118] \"PDP1\"            \"PELI1\"           \"PEX1\"           \n#> [121] \"PHF14\"           \"PHOSPHO2-KLHL23\" \"PIK3IP1\"        \n#> [124] \"PLA2R1\"          \"PLCB4\"           \"PLK2\"           \n#> [127] \"POLI\"            \"POSTN\"           \"PPAN-P2RY11\"    \n#> [130] \"PPFIBP1\"         \"PPP2CB\"          \"PRICKLE1\"       \n#> [133] \"PROS1\"           \"PSMD5-AS1\"       \"RAD17\"          \n#> [136] \"RHOQ\"            \"RIMKLB\"          \"RNA18S5\"        \n#> [139] \"RNF170\"          \"RNF20\"           \"RNU1-28P\"       \n#> [142] \"RPL23AP53\"       \"RRM2B\"           \"RRN3\"           \n#> [145] \"RRN3P1\"          \"SEMA3C\"          \"SERINC1\"        \n#> [148] \"SESN1\"           \"SESN3\"           \"SGK1\"           \n#> [151] \"SLC22A5\"         \"SLC37A3\"         \"SVIL\"           \n#> [154] \"SYT11\"           \"TARSL2\"          \"TBC1D19\"        \n#> [157] \"TBCK\"            \"TBRG1\"           \"TGFA\"           \n#> [160] \"TGFB2\"           \"TIPARP\"          \"TMEM136\"        \n#> [163] \"TNFRSF10B\"       \"TNFRSF10D\"       \"TOM1L1\"         \n#> [166] \"TP53INP1\"        \"TRIM13\"          \"TRIM32\"         \n#> [169] \"TRIM4\"           \"TSC1\"            \"TSPYL5\"         \n#> [172] \"UGT2B7\"          \"UNC13B\"          \"UPRT\"           \n#> [175] \"VPS41\"           \"VPS8\"            \"WDR11\"          \n#> [178] \"WDR19\"           \"XPC\"             \"YPEL2\"          \n#> [181] \"ZC2HC1A\"         \"ZFAND5\"          \"ZFP90\"          \n#> [184] \"ZFR\"             \"ZMAT3\"           \"ZNF12\"          \n#> [187] \"ZNF248\"          \"ZNF322\"          \"ZNF561\"         \n#> [190] \"ZNF626\"          \"ZSCAN30\"\nset.seed(1)"},{"path":"app.html","id":"enrichment-analysis","chapter":"9 Application examples","heading":"9.3.2 Enrichment analysis","text":"First, perform enrichment analysis using ReactomePA.\nenrichment analysis results, cluster related transcriptional regulation TP53.","code":"\n## Convert to ENTREZID\nentre <- AnnotationDbi::select(org.Hs.eg.db, keytype=\"SYMBOL\",\n                               keys = degs, columns = \"ENTREZID\")$ENTREZID\npway <- setReadable(enrichPathway(entre), org.Hs.eg.db)\nsigpway <- subset(pway |> data.frame(), p.adjust<0.05)\nsigpway$Description\n#>  [1] \"Transcriptional Regulation by TP53\"                              \n#>  [2] \"RIPK1-mediated regulated necrosis\"                               \n#>  [3] \"Regulation of necroptotic cell death\"                            \n#>  [4] \"Regulated Necrosis\"                                              \n#>  [5] \"Intraflagellar transport\"                                        \n#>  [6] \"Regulation by c-FLIP\"                                            \n#>  [7] \"CASP8 activity is inhibited\"                                     \n#>  [8] \"Dimerization of procaspase-8\"                                    \n#>  [9] \"TP53 Regulates Transcription of Death Receptors and Ligands\"     \n#> [10] \"Caspase activation via Death Receptors in the presence of ligand\"\n#> [11] \"FOXO-mediated transcription of cell cycle genes\"                 \n#> [12] \"Cilium Assembly\"                                                 \n#> [13] \"TP53 Regulates Transcription of Cell Death Genes\"\ncnetplot(pway)\n\n## Genes involved in significant pathways\nexcheck <- unlist(unique(sapply(sigpway$geneID,\n                                function (x) strsplit(x,\"/\"))))\nlength(excheck)\n#> [1] 57\n\n## Not involved in significant pathways\nno_enr <- degs[!(degs %in% excheck)]\nlength(no_enr)\n#> [1] 159"},{"path":"app.html","id":"text-mining-the-gene-summaries","chapter":"9 Application examples","heading":"9.3.3 Text mining the gene summaries","text":"Next perform plain function producing correlation network, showing top-genes related high-frequency words text RefSeq summary. obtained list genes geneCount slot.","code":"\nnet1 <- refseq(excheck, colorText=TRUE, genePlot=TRUE, numWords=50, docsum=TRUE)\n#> Input genes: 57\n#>   Converted input genes: 32\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.3\nnet2 <- refseq(no_enr, colorText=TRUE, genePlot=TRUE, numWords=50, docsum=TRUE)\n#> Input genes: 159\n#>   Converted input genes: 142\n#> Filter based on GeneSummary\n#> Filtered 77 words (frequency and/or tfidf)\n#> Ignoring corThresh, automatically determine the value\n#> threshold = 0.1\n\nplotNet(net2, asis=TRUE)"},{"path":"app.html","id":"combine-and-inspect-merged-network","chapter":"9 Application examples","heading":"9.3.4 Combine and inspect merged network","text":"RefSeq summary articles related important genes, cluster functionality DNA damage response, also upregulated BKPyV infection. networks can combined find intersections differences. can see addition Reactome pathway names, plenty information obtained summarized querying databases, aid interpreting clusters genes hypothesis generation.","code":"\ncompareWordNet(list(net1, net2),\n               titles=c(\"Enrich\",\"No_Enrich\")) |>\nplotNet()\nsessionInfo()\n#> R version 4.3.0 (2023-04-21)\n#> Platform: x86_64-pc-linux-gnu (64-bit)\n#> Running under: CentOS Linux 7 (Core)\n#> \n#> Matrix products: default\n#> BLAS:   /usr/local/package/r/4.3.0/lib64/R/lib/libRblas.so \n#> LAPACK: /usr/local/package/r/4.3.0/lib64/R/lib/libRlapack.so;  LAPACK version 3.11.0\n#> \n#> locale:\n#>  [1] LC_CTYPE=ja_JP.UTF-8       LC_NUMERIC=C              \n#>  [3] LC_TIME=ja_JP.UTF-8        LC_COLLATE=ja_JP.UTF-8    \n#>  [5] LC_MONETARY=ja_JP.UTF-8    LC_MESSAGES=ja_JP.UTF-8   \n#>  [7] LC_PAPER=ja_JP.UTF-8       LC_NAME=C                 \n#>  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n#> [11] LC_MEASUREMENT=ja_JP.UTF-8 LC_IDENTIFICATION=C       \n#> \n#> time zone: Asia/Tokyo\n#> tzcode source: system (glibc)\n#> \n#> attached base packages:\n#> [1] stats4    stats     graphics  grDevices utils    \n#> [6] datasets  methods   base     \n#> \n#> other attached packages:\n#>  [1] ggforce_0.4.1         igraph_1.5.1         \n#>  [3] ggraph_2.1.0          clusterProfiler_4.8.3\n#>  [5] ReactomePA_1.44.0     org.Hs.eg.db_3.18.0  \n#>  [7] AnnotationDbi_1.64.1  IRanges_2.34.1       \n#>  [9] S4Vectors_0.38.1      Biobase_2.60.0       \n#> [11] BiocGenerics_0.46.0   biotextgraph_0.99.0  \n#> [13] ggplot2_3.4.2        \n#> \n#> loaded via a namespace (and not attached):\n#>   [1] RColorBrewer_1.1-3      ggdendro_0.1.23        \n#>   [3] rstudioapi_0.15.0       jsonlite_1.8.7         \n#>   [5] pvclust_2.2-0           magrittr_2.0.3         \n#>   [7] farver_2.1.1            rmarkdown_2.23         \n#>   [9] GlobalOptions_0.1.2     fs_1.6.3               \n#>  [11] zlibbioc_1.46.0         vctrs_0.6.3            \n#>  [13] memoise_2.0.1           cyjShiny_1.0.42        \n#>  [15] RCurl_1.98-1.13         ggtree_3.8.2           \n#>  [17] base64enc_0.1-3         htmltools_0.5.6        \n#>  [19] gridGraphics_0.5-1      sass_0.4.7             \n#>  [21] GeneSummary_0.99.6      bslib_0.5.1            \n#>  [23] htmlwidgets_1.6.2       plyr_1.8.9             \n#>  [25] cachem_1.0.8            mime_0.12              \n#>  [27] lifecycle_1.0.3         pkgconfig_2.0.3        \n#>  [29] gson_0.1.0              Matrix_1.6-3           \n#>  [31] R6_2.5.1                fastmap_1.1.1          \n#>  [33] GenomeInfoDbData_1.2.10 shiny_1.7.4.1          \n#>  [35] aplot_0.2.2             enrichplot_1.20.3      \n#>  [37] digest_0.6.33           colorspace_2.1-0       \n#>  [39] patchwork_1.1.3         RSQLite_2.3.3          \n#>  [41] labeling_0.4.2          fansi_1.0.4            \n#>  [43] httr_1.4.6              polyclip_1.10-6        \n#>  [45] compiler_4.3.0          downloader_0.4         \n#>  [47] bit64_4.0.5             withr_2.5.0            \n#>  [49] graphite_1.46.0         BiocParallel_1.34.2    \n#>  [51] viridis_0.6.4           DBI_1.1.3              \n#>  [53] highr_0.10              dendextend_1.17.1      \n#>  [55] MASS_7.3-58.4           ISOcodes_2022.09.29    \n#>  [57] rappdirs_0.3.3          rjson_0.2.21           \n#>  [59] HDO.db_0.99.1           tools_4.3.0            \n#>  [61] stopwords_2.3           scatterpie_0.2.1       \n#>  [63] ape_5.7-1               rentrez_1.2.3          \n#>  [65] httpuv_1.6.11           glue_1.6.2             \n#>  [67] nlme_3.1-162            GOSemSim_2.26.1        \n#>  [69] promises_1.2.1          grid_4.3.0             \n#>  [71] shadowtext_0.1.2        reshape2_1.4.4         \n#>  [73] fgsea_1.26.0            generics_0.1.3         \n#>  [75] gtable_0.3.3            tidyr_1.3.0            \n#>  [77] bugsigdbr_1.8.1         data.table_1.14.8      \n#>  [79] tidygraph_1.2.3         xml2_1.3.5             \n#>  [81] utf8_1.2.3              XVector_0.40.0         \n#>  [83] stringr_1.5.0           ggrepel_0.9.4          \n#>  [85] pillar_1.9.0            yulab.utils_0.1.0      \n#>  [87] later_1.3.1             splines_4.3.0          \n#>  [89] dplyr_1.1.2             tweenr_2.0.2           \n#>  [91] treeio_1.24.3           lattice_0.21-8         \n#>  [93] bit_4.0.5               tidyselect_1.2.0       \n#>  [95] GO.db_3.17.0            tm_0.7-11              \n#>  [97] Biostrings_2.68.1       reactome.db_1.84.0     \n#>  [99] downlit_0.4.3           knitr_1.43             \n#> [101] gridExtra_2.3           NLP_0.2-1              \n#> [103] bookdown_0.36           xfun_0.40              \n#> [105] graphlayouts_1.0.2      stringi_1.7.12         \n#> [107] lazyeval_0.2.2          ggfun_0.1.3            \n#> [109] yaml_2.3.7              evaluate_0.21          \n#> [111] codetools_0.2-19        wordcloud_2.6          \n#> [113] tibble_3.2.1            qvalue_2.32.0          \n#> [115] graph_1.80.0            ggplotify_0.1.2        \n#> [117] cli_3.6.1               xtable_1.8-4           \n#> [119] munsell_0.5.0           jquerylib_0.1.4        \n#> [121] Rcpp_1.0.11             GenomeInfoDb_1.36.4    \n#> [123] png_0.1-8               XML_3.99-0.15          \n#> [125] parallel_4.3.0          ellipsis_0.3.2         \n#> [127] blob_1.2.4              DOSE_3.26.2            \n#> [129] bitops_1.0-7            tidytree_0.4.5         \n#> [131] viridisLite_0.4.2       slam_0.1-50            \n#> [133] scales_1.2.1            purrr_1.0.2            \n#> [135] crayon_1.5.2            GetoptLong_1.0.5       \n#> [137] rlang_1.1.1             cowplot_1.1.1          \n#> [139] fastmatch_1.1-4         KEGGREST_1.40.1"},{"path":"parsing.html","id":"parsing","chapter":"10 Parsing","heading":"10 Parsing","text":"functions can used parsing purpose.","code":""},{"path":"parsing.html","id":"parsing-enzyme-comission-numbers-its-description-and-comment.","chapter":"10 Parsing","heading":"10.1 Parsing Enzyme Comission numbers, its description and comment.","text":"","code":"\nlibrary(biotextgraph)\nlibrary(data.table)\necdf <- enzyme(\"enzyme.dat\",ecnum=\"all\", onlyDf=TRUE)\n#> Processing EC file\ndata.table(ecdf) |> head()\n#>     number                                 desc\n#> 1: 1.1.1.1                alcohol dehydrogenase\n#> 2: 1.1.1.2      alcohol dehydrogenase (NADP(+))\n#> 3: 1.1.1.3             homoserine dehydrogenase\n#> 4: 1.1.1.4       (R,R)-butanediol dehydrogenase\n#> 5: 1.1.1.5 Transferred entry: 111303 and 111304\n#> 6: 1.1.1.6               glycerol dehydrogenase\n#>                                                                                                                                                                                                                                           comment\n#> 1: Acts on primary or secondary alcohols or hemi-acetals with very broad     specificity; however the enzyme oxidizes methanol much more poorly     than ethanol The animal, but not the yeast, enzyme acts also on cyclic secondary     alcohols\n#> 2:                                                    Some members of this group oxidize only primary alcohols; others act     also on secondary alcohols May be identical with EC 11119, EC 11133 and EC 11155 Re-specific with respect to NADPH\n#> 3:                 The enzyme from Saccharomyces cerevisiae acts most rapidly with     NAD(+); the Neurospora enzyme with NADP(+) The enzyme from Escherichia coli is a multifunctional protein, which     also catalyzes the reaction of EC 2724\n#> 4:                                                                                                                                                                                     Also converts diacetyl into acetoin with NADH as reductant\n#> 5:                                                                                                                                                                                                                                               \n#> 6:                                                                                                                                                                                                                   Also acts on 1,2-propanediol\ns\n#> 1: P07327,ADH1A_HUMAN;P28469,ADH1A_MACMU;Q5RBP7,ADH1A_PONAB;P25405,ADH1A_SAAHA;P25406,ADH1B_SAAHA;P00327,ADH1E_HORSE;P00326,ADH1G_HUMAN;O97959,ADH1G_PAPHA;P00328,ADH1S_HORSE;P80222,ADH1_ALLMI;P30350,ADH1_ANAPL;P49645,ADH1_APTAU;P06525,ADH1_ARATH;P41747,ADH1_ASPFN;Q17334,ADH1_CAEEL;P43067,ADH1_CANAX;P85440,ADH1_CATRO;P14219,ADH1_CENAM;P48814,ADH1_CERCA;Q70UN9,ADH1_CERCO;P23991,ADH1_CHICK;P86883,ADH1_COLLI;P19631,ADH1_COTJA;P23236,ADH1_OHY;P48586,ADH1_OMN;P09370,ADH1_OMO;P22246,ADH1_OMT;P07161,ADH1_OMU;P12854,ADH1_ONA;P08843,ADH1_EMENI;A0A165U5V5,ADH1_EUPLT;P26325,ADH1_GADMC;Q9Z2M2,ADH1_GEOAT;Q64413,ADH1_GEOBU;Q64415,ADH1_GEOKN;P12311,ADH1_GEOSE;P05336,ADH1_HORVU;P20369,ADH1_KLULA;Q07288,ADH1_KLUMA;P00333,ADH1_MAIZE;P86885,ADH1_MESAU;P00329,ADH1_MOUSE;P80512,ADH1_NAJNA;Q9P6C8,ADH1_NEUCR;Q75ZX4,ADH1_ORYSI;Q2R8Z5,ADH1_ORYSJ;P12886,ADH1_PEA;P22797,ADH1_PELPE;P41680,ADH1_PERMA;P25141,ADH1_PETHY;O00097,ADH1_PICST;Q03505,ADH1_RABIT;P06757,ADH1_RAT;P14673,ADH1_SOLTU;P80338,ADH1_STRCA;P13603,ADH1_TRIRP;P00330,ADH1_YEAST;Q07264,ADH1_ZEALU;P20368,ADH1_ZYMMO;O45687,ADH2_CAEEL;O94038,ADH2_CANAL;P48815,ADH2_CERCA;Q70UP5,ADH2_CERCO;Q70UP6,ADH2_CERRO;P27581,ADH2_OAR;P25720,ADH2_OBU;P23237,ADH2_OHY;P48587,ADH2_OMN;P09369,ADH2_OMO;P07160,ADH2_OMU;P24267,ADH2_OWH;P37686,ADH2_ECOLI;P54202,ADH2_EMENI;Q24803,ADH2_ENTHI;P42327,ADH2_GEOSE;P10847,ADH2_HORVU;P49383,ADH2_KLULA;Q9P4C2,ADH2_KLUMA;P04707,ADH2_MAIZE;Q4R1E8,ADH2_ORYSI;Q0ITW7,ADH2_ORYSJ;O13309,ADH2_PICST;P28032,ADH2_SOLLC;P14674,ADH2_SOLTU;F2Z678,ADH2_YARLI;P00331,ADH2_YEAST;F8DVL8,ADH2_ZYMMA;P0DJA2,ADH2_ZYMMO;P07754,ADH3_EMENI;P42328,ADH3_GEOSE;P10848,ADH3_HORVU;P49384,ADH3_KLULA;P14675,ADH3_SOLTU;P07246,ADH3_YEAST;P49385,ADH4_KLULA;Q09669,ADH4_SCHPO;A6ZTT5,ADH4_YEAS7;P10127,ADH4_YEAST;Q6XQ67,ADH5_SACPS;P38113,ADH5_YEAST;P28332,ADH6_HUMAN;P41681,ADH6_PERMA;Q5R7Z8,ADH6_PONAB;Q5XI95,ADH6_RAT;P40394,ADH7_HUMAN;Q64437,ADH7_MOUSE;P41682,ADH7_RAT;P9WQC0,ADHA_MYCTO;P9WQC1,ADHA_MYCTU;O31186,ADHA_RHIME;Q7U1B9,ADHB_MYCBO;P9WQC6,ADHB_MYCTO;P9WQC7,ADHB_MYCTU;P9WQB8,ADHD_MYCTO;P9WQB9,ADHD_MYCTU;P33744,ADHE_CLOAB;P0A9Q8,ADHE_ECO57;P0A9Q7,ADHE_ECOLI;P81600,ADHH_GADMO;P72324,ADHI_CERS4;Q9SK86,ADHL1_ARATH;Q9SK87,ADHL2_ARATH;A1L4Y2,ADHL3_ARATH;Q8VZ49,ADHL4_ARATH;Q0V7W6,ADHL5_ARATH;Q8LEB2,ADHL6_ARATH;Q9FH04,ADHL7_ARATH;P81601,ADHL_GADMO;P39451,ADHP_ECOLI;O46649,ADHP_RABIT;O46650,ADHQ_RABIT;Q96533,ADHX_ARATH;Q3ZC42,ADHX_BOVIN;Q17335,ADHX_CAEEL;Q54TC2,ADHX_DICDI;P46415,ADHX_OME;P19854,ADHX_HORSE;P11766,ADHX_HUMAN;P93629,ADHX_MAIZE;P28474,ADHX_MOUSE;P80360,ADHX_MYXGL;P81431,ADHX_OCTVU;A2XAZ3,ADHX_ORYSI;Q0DWH1,ADHX_ORYSJ;P80572,ADHX_PEA;O19053,ADHX_RABIT;P12711,ADHX_RAT;P80467,ADHX_SAAHA;P86884,ADHX_SCYCA;P79896,ADHX_SPAAU;Q9NAR7,ADH_BACOL;P14940,ADH_CUPNE;Q0KDL6,ADH_CUPNH;Q00669,ADH_OAD;P21518,ADH_OAF;P25139,ADH_OAM;Q50L96,ADH_OAN;P48584,ADH_OBO;P22245,ADH_ODI;Q9NG42,ADH_OEQ;P28483,ADH_OER;P48585,ADH_OFL;P51551,ADH_OGR;Q09009,ADH_OGU;P51549,ADH_OHA;P21898,ADH_OHE;Q07588,ADH_OIM;Q9NG40,ADH_OIN;Q27404,ADH_OLA;P10807,ADH_OLE;P07162,ADH_OMA;Q09010,ADH_OMD;P00334,ADH_OME;Q00671,ADH_OMM;P25721,ADH_OMY;Q00672,ADH_ONI;P07159,ADH_OOR;P84328,ADH_OPB;P37473,ADH_OPE;P23361,ADH_OPI;P23277,ADH_OPL;Q6LCE4,ADH_OPS;Q9U8S9,ADH_OPU;Q9GN94,ADH_OSE;Q24641,ADH_OSI;P23278,ADH_OSL;Q03384,ADH_OSU;P28484,ADH_OTE;P51550,ADH_OTS;B4M8Y0,ADH_OVI;Q05114,ADH_OWI;P26719,ADH_OYA;P17648,ADH_FRAAN;P48977,ADH_MALDO;Q8GIX7,ADH_MORSE;P9WQC2,ADH_MYCTO;P9WQC3,ADH_MYCTU;P39462,ADH_SACS2;P25988,ADH_SCAAL;Q00670,ADH_SCACA;P00332,ADH_SCHPO;Q2FJ31,ADH_STAA3;Q2G0G1,ADH_STAA8;Q2YSX0,ADH_STAAB;Q5HI63,ADH_STAAC;Q99W07,ADH_STAAM;Q7A742,ADH_STAAN;Q6GJ63,ADH_STAAR;Q6GBM4,ADH_STAAS;Q8NXU1,ADH_STAAW;Q5HRD6,ADH_STAEQ;Q8CQ56,ADH_STAES;Q4J781,ADH_SULAC;P50381,ADH_SULSR;Q96XE0,ADH_SULTO;A0A0S1X9S7,ADH_THEBA;P51552,ADH_ZAPTU;Q5AR48,ASQE_EMENI;A5JYX5,DHS3_CAEEL;P76553,EUTG_ECOLI;P41795,EUTG_SALTY;P32771,FADH_YEAST;A7ZIA4,FRMA_ECO24;Q8X5J4,FRMA_ECO57;A7ZX04,FRMA_ECOHS;A1A835,FRMA_ECOK1;Q0TKS7,FRMA_ECOL5;Q8FKG1,FRMA_ECOL6;B1J085,FRMA_ECOLC;P25437,FRMA_ECOLI;B1LIP1,FRMA_ECOSM;Q1RFI7,FRMA_ECOUT;P44557,FRMA_HAEIN;P39450,FRMA_PHODP;Q3Z550,FRMA_SHISS;P73138,FRMA_SYNY3;E1ACQ9,NOTN_ASPSM;N4WE73,OXI1_COCH4;N4WE43,RED2_COCH4;N4WW42,RED3_COCH4;P33010,TERPD_PSESP;O07737,Y1895_MYCTU\nnnnn},{"path":"parsing.html","id":"parsing-uniprot-organism-identifiers.","chapter":"10 Parsing","heading":"10.2 Parsing UniProt organism identifiers.","text":"","code":"\nupdf <- getUPtax(\"speclist.txt\",candUP=\"all\")\ndata.table(updf) |> head()\n#>     UPID                                           Taxonomy\n#> 1: AADNV Aedes albopictus densovirus (isolate Boublik/1994)\n#> 2:  AAV2                           Adeno-associated virus 2\n#> 3: AAV2S Adeno-associated virus 2 (isolate Srivastava/1982)\n#> 4: ABAMA                                     Abacion magnum\n#> 5: ABANI                                     Abaeis nicippe\n#> 6: ABAPA                              Abax parallelepipedus"},{"path":"parsing.html","id":"parsing-metacyc-pathway-text-information","chapter":"10 Parsing","heading":"10.3 Parsing MetaCyc pathway text information","text":"","code":"\ncandidateSpecies <- c(\"Escherichia coli\")\nfile <- \"metacyc/24.5/data/pathways.dat\"\nmetacyc <- parseMetaCycPathway(file, candidateSpecies, withTax=TRUE, clear=TRUE)\nmetacyc |> head()\n#>   pathwayID\n#> 1  PWY-7622\n#> 2  PWY-7591\n#> 3  PWY-7613\n#> 4  PWY-7529\n#> 5  PWY-7599\n#> 6  PWY-7536\ntext\ngalactofuransoe is the five-carbon ring form of D-galactopyranose. In solution both forms exist in equilibrium with D-galactopyranose formation favored. Although D-galactopyranose is ubiquitous in cellular organisms, D-galactofuransoe is found only in some non-mammalian eukaryotes and in some bacteria including mycobacteria and Escherichia coli (as indicated in the pathway links and E. coli enzyme EG11983-MONOMER).  UDP-D-GALACTO-14-FURANOSE is a nucleotide-activated form of D-galactofuransoe that is used by some organisms in the biosynthesis of polysaccharides and glycoconjugates. Although D-galactofuransoe residues are not found in mammals, higher plants and yeasts, they are found in the glycans of some bacteria and lower eukaryotes including trypanosomatids, nematodes, the free-living alga TAX-3055 and filamentous fungi. These groups include known pathogens. D-galactofuransoe residues are antigenic in humans and are therefore of interest as therapeutic targets ( and reviewed in ).  About This Pathway  In filamentous fungi UDP-D-GALACTO-14-FURANOSE is biosynthesized in the cytosol starting with CPD-12575 which is derived from GLC-6-P as indicated in the pathway link. Following the epimerization of CPD-12575 to CPD-14553, EC-5.4.99.9 converts CPD-14553 to its five-carbon ring form UDP-D-GALACTO-14-FURANOSE. The substrate of the mutase, CPD-14553, may also be formed by the Leloir pathway enzyme EC-2.7.7.12. In protozoan parasites such as TAX-5664 which appear to lack an ortholog encoding the Leloir pathway enzyme, CPD-14553 can be formed by EC-2.7.7.64 . The pathway product UDP-D-GALACTO-14-FURANOSE is then transported from the cytosol to the Golgi lumen for glycoconjugate biosynthesis (reviewed in ) (see pathway PWY-6317).   In filamentous fungi galactomannan metabolism has been studied in both the non-pathogenic model organism TAX-162425 and in the opportunistic pathogen TAX-746128, and relevant orthologs have been identified in these organisms. In TAX-162425 cytosolic UDP-glucose 4-epimerase (synonym UDP-galactose 4-epimerase) is encoded by ugeA . In TAX-746128 uge5 encodes the dominant cytosolic UDP-glucose 4-epimerase that is essential for growth on D-Galactose and the synthesis of D-galactofuransoe. In TAX-746128 a second gene uge3 with no identified ortholog in TAX-162425 has also been characterized. Both Uge5 and Uge3 are required for galactosaminogalactan synthesis in TAX-746128 . In TAX-162425 cytosolic UDP-galactose mutase is encoded by ugmA, and in TAX-746128 by ugm1 (glfA) .   UDP-D-GALACTO-14-FURANOSE is then transported from the cytosol to the Golgi lumen for galactomannoprotein biosynthesis (not shown). In TAX-162425 the UDP-galactofuranose transporter is encoded by ugtA , and in TAX-746128 by ugt1 (glfB) ( and reviewed in ). In both organisms a novel, G-55162-encoded, Golgi-localized, EC-2.4.1.M27, has been characterized that is involved in synthesis of the galactofurnaose antigen of O-linked glycans. The O-glycans are then transported in vesicles to the hyphal cell surface . \nkenone is a red carotenoid pigment. Structurally this ketocarotenoid has a &chi;-ring at one end and an open chain &psi;-end that is methoxylated at the C-1' position and contains a keto group at the C-4' position. It is found in some purple sulfur bacterial members of the family TAX-1046. These photosynthetic organisms reside in illuminated anoxic zones of aquatic habitats. Purple sulfur bacteria are anaerobic or microaerophilic, oxidizing HS to produce granules of Elemental-Sulfur (elemental sulfur) (see pathway PWY-5274). The light absorption properties of CPD-17304 allow these bacteria to exist in deeper water layers. In addition to its role in bacterial ecology, CPD-17304 also becomes an important geochemical biomarker via its diagenesis product CPD-17311, which is found in ancient rock formations (  and in .  TAX-572262 is a purple sulfur bacterium that synthesizes CPD-17304 as its only carotenoid when grown anoxically under chlorophototrophic conditions. A gene cluster encoding the enzymes for CPD-17304 biosynthesis (genes crtE, crtB,  crtI, crtC, crtU and crtY and an unlinked gene crtF) was identified and analyzed. The biosynthetic pathway for CPD-17304 was elucidated based on heterologous expression of recombinant enzymes in carotenoid-producing hosts, followed by carotenoid analysis .  About This Pathway  In this pathway CrtY was shown to catalyze the cyclization of one &psi;-end of CPD1F-114 producing the &beta;-ring of CPD1F-126. The CrtC hydratase hydrates the double bond of the &psi;-end group of CPD1F-126 producing CPD-11446. CruO is a unique C-44' ketolase required for CPD-17304 biosynthesis that introduces a keto group at the C-4' position of CPD-11446. CrtF is an O-methyltransferase that further modifies the &psi;-end group by transfer of a methyl group to the hydroxyl formed by CrtC, producing the methoxy group of CPD-17302. Finally, the &beta;-ring of CPD-17302 is converted to a &chi;-ring and the molecule is further desaturated by the carotene desaturasemethyltransferase CrtU to produce CPD-17304. The key enzymes of the pathway are CrtY and CrtU .  In addition, a putative OXYGEN-MOLECULE-dependent pathway for CPD-17307 biosynthesis involving genes crtC, cruS and crtF was also proposed (not shown), based on the demonstration of these enzymatic functions in Escherichia coli. However, no physiological evidence for the pathway could be found in either TAX-572262 or TAX-244573. The novel gene cruS was shown to encode a unique 2-ketolase3,4-desaturase that could participate in the hypothetical pathway . \neptose sugars, mostly glycero-manno-heptoses, are found in the cell surface polymers of many bacteria. Prior to their incorporation, the heptose residues are activated by attachment to a nucleotide (see pathways PWY0-1241 and PWY-6478). These activated heptoses can be uniquely modified by enzymes before incorporation into the polymers. In bacterial pathogens heptose derivatives such as 6-deoxyheptoses that are not found in mammals can play an important role in virulence, as demonstrated in TAX-633 . Heptose modifying enzymes are therefore of interest as potential drug targets .  The modified heptose CPD-17411 is found in the O-Antigens O-antigen of ORG-6272. The O-antigen along with core oligosaccharide and Lipid-A lipid A comprise Lipopolysaccharides lipopolysaccharide (LPS), a major component of the outer membrane in Gram-negative bacteria. LPS is one of several virulence factors in TAX-633. It has been shown that 6-deoxy-D-manno-heptose affects the barrier function of LPS and the overall virulence of ORG-6272 .  About This Pathway  DmhA along with its corresponding reductase DmhB catalyze the formation of 6-deoxyheptose, a modified heptose present in the O-antigen of ORG-6272. In this pathway both DmhA and DmhB utilize and release sugars that are in the D-manno configuration. Unlike PWY-7610 in TAX-197, no epimerization steps are involved .  Both dmhA and dmhB mutants were analyzed for the composition and structure of their LPS and the virulence-related properties of these mutants and their complemented counterparts were assessed in vitro . Recombinant proteins were expressed in Escherichia coli, purified and biochemically characterized . \n#> 4  Sialic acids are a family of polyhydroxylated &alpha;-keto acids that contain nine carbon atoms. Most sialic acids are derivatives of N-ACETYLNEURAMINATE, or CPD-10734 (KDN). N-ACETYLNEURAMINATE is the most common sialic acid in mammals (see pathway PWY-6138), while KDN is abundant in lower vertebrates (see pathway PWY-6140). Their core structures can be modified at the hydroxyl groups, lactonized, or hydroxylated at the acetamido group, generating many derivatives. CPD-262 is a derivative of CMP-N-ACETYL-NEURAMINATE (see pathway PWY-6144). Reviewed in    and .  Sialic acids are found mainly in vertebrates and a few higher invertebrates (ascidians and echinoderms). These acidic sugars are usually the terminal sugar residue in the glycan chains of vertebrate glycoconjugates (mostly glycoproteins and glycolipids, but also proteoglycans and glycosylphosphatidylinositol anchors). They function in mediating cellular recognition and adhesion events for many important processes such as development, the immune and inflammatory responses, and oncogenesis. Sialic acid occurs rarely in invertebrates. Endogenous sialylation has been shown to occur in TAX-7215, but details of sialic acid biosynthesis in this organism remain to be determined . However, it is possible the sialic acids might be biosynthesized by other eukaryotes in a species andor life cycle-dependent manner. In  and reviewed in    and .  Most bacteria do not biosynthesize sialic acids, but some pathogenic, or symbiotic bacteria biosynthesize sialic acids as a means of evading a host's immune system (this pathway). The sialic acid is displayed on the bacterial cell surface (in capsular polysaccharides) in order to mimic vertebrate cells. Pathogens that biosynthesize sialic acids include TAX-487, TAX-1392869 and TAX-197. In addition, the human gut symbiont TAX-818 has been shown to synthesize CPD-10734  (see pathway PWY-6140). Whether or not archaea contain sialic acids remains to be determined (reviewed in    and ). Other sialic acid-like sugars biosynthesized by bacteria include the nonulosonic acids CPD-10754  (see pathway PWY-6143) and legionaminic acid see pathway class CMP-Legionaminate-Biosynthesis .  Protists are thought to lack the ability to biosynthesize sialic acids although more genome data are needed to confirm this. Sialic acids have been thought to be absent in plants but some studies raise the possibility . Fungi appear to lack any known sialic acid biosynthetic pathway, although strain-specific, or novel pathways could exist. Reviewed in    and .  Also see PWY-6145.  About This Pathway  TAX-316275 is a Gram-negative, psychrophilic fish pathogen whose genome sequence has been determined . Little is known about its mechanism of virulence. This organism contains three copies of a gene cluster that is homologous to the Escherichia coli neu gene cluster for the synthesis of capsular sialic acids (see PWY-6139). In TAX-316275 the first copy of the gene cluster, neu1, is also likely involved in sialic acids biosynthesis. The second copy neu2, which is less homologous, is likely involved in the synthesis of alternative compounds such as legionaminate (see pathway class CMP-Legionaminate-Biosynthesis). The third copy is an exact duplicate of the neu2 gene cluster .  Data suggest that both N-ACETYLNEURAMINATE and CPD-1803 (7-O-acetyl-N-acetylneuraminate) are present in this organism and that their synthesis is catalyzed by the sialic acid synthase product of gene neuB1 which is present in the neu1 gene cluster. Based on genome analysis, enzyme kinetics, and structural analysis, the putative substrate for NeuB1 is  CPD-16880 and its product is CPD-1803. In addition to TAX-316275, this gene was also predicted to be present in other species including Escherichia coli and TAX-1311.   A pathway for the biosynthesis of CPD-1803 has been proposed and is shown here. In addition to the experimentally determined NeuB1, predicted enzymes of the pathway include the O-acetyl transferase NeuD1, the hydrolyzing 2-epimerase NeuC1, and NeuA1 which activates CPD-1803 to a CMP derivative .  \nnditomin is CPD-17353. These complex organo-oxygen natural products are produced by fungi from polyketide and terpenoid precursors. They have unique, highly oxygenated structures containing a complex bridged-ring system. The elucidation of the biosynthetic pathway for the meroterpenoid CPD-17343 in TAX-1549217 provides an opportunity for future construction of novel scaffolds for use in drug discovery .  About This Pathway  The CPD-17343 biosynthetic gene cluster of TAX-1549217 was identified by bioinformatic analysis and the and gene products were functionally characterized (note that NCBI Taxonomy merged the Emericella variecolor and Aspergillus stellifer entries). The early-stage and late-stage biosynthetic steps were determined by expression of recombinant enzymes in a strain of TAX-5062 followed by analysis of products by HPLC, 1H NMR, 13C NMR and mass spectrometry. The mid-stage biosynthetic steps were elucidated using feeding experiments to predict the sequence of tailoring enzymes. In the case of AndA and AndF, recombinant enzyme was expressed in Escherichia coli, purified and characterized .  The pathway begins with a polyketide synthase encoded by gene andM that produces CPD-17316 as its final product. AndK is a bifunctional P450 monooxygenase and hydrolase fusion protein that produces the phthalide compound CPD-17317. AndD is a prenyltransferase that incorporates the farnesyl moiety. AndE is an epoxidase that forms the (S)-epoxide CPD-17325. The terpene cyclase AndB then forms CPD-17333 .   The mid-stage biosynthetic steps include AndA, AndJ and AndI. The nonheme iron-dependent dioxygenase AndA was shown to catalyze two reactions, the dehydrogenation of CPD-17334 to produce the enone CPD-17335 that contains a &Delta;1,2-conjugated double bond, and an isomerization involving an unprecedented skeletal rearrangement that results in the bridged-ring of CPD-17336. This is in contrast to a previously proposed DielsAlder reaction. AndA thus generates the scaffold of the andilesins class of secondary metabolites. AndJ is a FAD-dependent Baeyer-Villiger monooxygenase that generates a seven-membered lactone ring from CPD-17336. AndI is a short-chain dehydrogenasereductase (SDR) that appears to reduce CPD-17337 to CPD-17339 .   In the late-stage biosynthetic steps acetyltransferase AndG attaches an acetyl group to the hydroxyl group of CPD-17339. This acetyl group is then lost in a spontaneous reaction. AndH is another SDR reductase that catalyzes reduction of the C-6 double bond of CPD-17341 to produce CPD-17342. Finally AndF, another nonheme iron-dependent dioxygenase like AndA, oxidizes CPD-17342 to CPD-17343. Based on the cofactor requirements for the production of both CPD-17336 by AndA and CPD-17343 by AndF, as well as the analogous FtmF reaction (see EC-1.14.11.38), detailed reaction mechanisms for AndA and AndF were proposed . \nhis pathway depicts the biosynthesis of the CPD-16935 moiety of the natural product CPD-16932. The reaction link shows its amide linkage to the synthetic partial polyenoate scaffold CPD-16939 which was derived from the structure of CPD-16932 .  The antifungal agent CPD-16932 is a linear polyketide antibiotic produced by ORG-6265. In the CPD-16932 biosynthetic gene cluster of this organism three tandem ORFs, ORF33, ORF34 and ORF35 catalyze the formation of the CPD-16935 moiety of CPD-16932. Other ORFs in the cluster encode a large type I polyketide synthetase 15844935. CPD-16935 2-Amino-3-hydroxycyclopent-2-enone (an enol tautomer of CPD-16936) is a C5N unit that is present in many members of the manumycin antibiotic family as well as in other bioactive metabolites. In CPD-16932 the amino group of CPD-16935 is amide-bonded to the polyketide-derived polyenoic acid component, whereas in MOENOMYCIN it is amide-bonded to Hexuronates group .  About This Pathway  In the first reaction GLY is condensed with SUC-COA which produces 5-AMINO-LEVULINATE, catalyzed by  MONOMER-18786 encoded by ORF34. 5-AMINO-LEVULINATE 5-Aminolevulinate is also an intermediate in tetrapyrrole biosynthesis in some species of TAX-1883  (see pathway PWY-5189). In the next reaction an ATP-dependent MONOMER-18787 encoded by ORF35 catalyzes the ligation of 5-AMINO-LEVULINATE to CO-A producing CPD-16937. The latter compound is unstable and can either undergo spontaneous intramolecular cyclization to produce the off-pathway shunt product CPD-16938, or be converted enzymatically to CPD-16935 by the cyclase activity of the ORF34 product .  The reaction link shows a condensation step catalyzed by the MONOMER-18788 product of ORF33 that is proposed to incorporate CPD-16935 into the polyketide chain of CPD-16932 which constitutes the final chain termination step. This reaction was experimentally demonstrated using the synthetic partial polyenoate scaffold CPD-16939 which was derived from the structure of CPD-16932 .  Recombinant proteins encoded by ORF33, ORF34 and ORF35 were overexpressed in Escherichia coli, purified and biochemically characterized. In addition, the entire CPD-16935 biosynthetic pathway was reconstituted in vitro. The three enzymes were incubated with MG+2, ATP, CO-A, GLY and SUC-COA (or 5-AMINO-LEVULINATE) and CPD-16939. The reaction product CPD-16941 was identified by LC-MS. Gel filtration chromatography demonstrated that none of the three enzymes formed complexes, indicating freely diffusible intermediates .    \n#>                                                      commonName\n#> 1                    UDP-&alpha;-D-galactofuranose biosynthesis\n#> 2                                          okenone biosynthesis\n#> 3               GDP-6-deoxy-D-<i>manno<\/i>-heptose biosynthesis\n#> 4 CMP-<i>N<\/i>-acetyl-7-<i>O<\/i>-acetylneuraminate biosynthesis\n#> 5                                        anditomin biosynthesis\n#> 6               2-amino-3-hydroxycyclopent-2-enone biosynthesis\n#>                            species\n#> 1 TAX-746128,TAX-330879,TAX-162425\n#> 2  TAX-572262,TAX-37487,TAX-244573\n#> 3                         ORG-6272\n#> 4                       TAX-316275\n#> 5                      TAX-1549217\n#> 6                         ORG-6265\n#>                                taxonomicRange\n#> 1 TAX-6231,TAX-3052,TAX-147538,TAX-5654,TAX-2\n#> 2                                    TAX-1046\n#> 3                                       TAX-2\n#> 4                                       TAX-2\n#> 5                                    TAX-4751\n#> 6                                  TAX-201174\n#>              query\n#> 1 Escherichia coli\n#> 2 Escherichia coli\n#> 3 Escherichia coli\n#> 4 Escherichia coli\n#> 5 Escherichia coli\n#> 6 Escherichia coli"},{"path":"tidy.html","id":"tidy","chapter":"11 Perform each process separately","heading":"11 Perform each process separately","text":"process functions like refseq can performed separately. useful piped processing individual customization process.","code":"\nlibrary(biotextgraph)\nbtg <- obtain_refseq(c(\"DDX41\",\"PNKP\",\"IRF3\")) |>\n  set_filter_words() |>\n  make_corpus() |>\n  make_TDM() |>\n  make_graph() |>\n  graph_cluster() |>\n  process_network_gene(gene_plot=TRUE, gene_path_plot=\"reactome\") |>\n  plot_biotextgraph(edge_link=FALSE) |>\n  plot_wordcloud()\n#> Input genes: 3\n#>   Converted input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 76 words (frequency and/or tfidf)\n#> Found 22 enriched term\nbtg\n#> Type: refseq\n#> Number of words: 30\n#> Query: DDX41/PNKP/IRF3\n#> Graph: V(33), E(471)\n#> Degree: response(32)/DNA(31)/immune(31)/innate(31)/phosphorylation(31)\n#> 313.1 Kb\n\n## Text of enrichment analysis results\nbtg2 <- obtain_enrich(c(\"DDX41\",\"PNKP\",\"IRF3\"), enrich=\"reactome\") |>\n  set_filter_words() |>\n  make_corpus() |>\n  make_TDM() |>\n  make_graph() |>\n  process_network_manual() |>\n  plot_biotextgraph(edge_link=FALSE)\n#> Input genes: 3\n#>   Converted input genes: 3\n#> Performing enrichment analysis\n#> Filter based on GeneSummary\n#> Filtered 76 words (frequency and/or tfidf)\nbtg2\n#> Type: enrich\n#> Number of words: 30\n#> Query: DDX41/PNKP/IRF3\n#> Graph: V(29), E(40)\n#> Degree: immune(7)/innate(7)/responses(7)/activatesmodulates(5)/adaptive(4)\n#> 303.5 Kb"},{"path":"tidy.html","id":"use-of-gene-descriptions-in-alliance-of-genome-resources","chapter":"11 Perform each process separately","heading":"11.1 Use of gene descriptions in Alliance of Genome Resources","text":"can use gene descriptions alliance genome resources, can obtained . Download file call obtain_alliance function. default path set working directory human gene description.","code":"\nbtg_agr <- obtain_alliance(c(\"DDX41\",\"PNKP\",\"IRF3\")) |>\n  make_corpus() |> ## No filter this time\n  make_TDM() |>\n  make_graph() |>\n  graph_cluster() |>\n  process_network_gene(gene_plot=TRUE, gene_path_plot=\"reactome\") |>\n  plot_biotextgraph(edge_link=FALSE)\n#> Input genes: 3\n#> Found 22 enriched term"}]
