[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"package aims visualize word text information contained gene omics identifiers microbiome, identify important words among clusters, compare clusters based information. contributes understanding gene clusters aid easy interpretation visualization. documentation using bookdown available , web server using shinyapps.io .","code":"\nlibrary(wcGeneSummary)\n#> \n#> Registered S3 method overwritten by 'pvclust':\n#>   method       from      \n#>   text.pvclust dendextend\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/wordcloud\")"},{"path":"basic-usage.html","id":"basic-usage","chapter":"2 Basic usage","heading":"2 Basic usage","text":"Load package database converting identifiers.\nexample, use mostly human-derived data, use org.Hs.eg.db.","code":"\nlibrary(wcGeneSummary)\nlibrary(org.Hs.eg.db)\nlibrary(ggplot2)\nlibrary(ggraph)\nlibrary(RColorBrewer)\nlibrary(ReactomePA)\nlibrary(clusterProfiler)\nlibrary(dendextend)\nlibrary(dplyr)"},{"path":"basic-usage.html","id":"producing-word-clouds","chapter":"2 Basic usage","heading":"2.1 Producing word clouds","text":"use ERCC genes input. basic usage package producing word cloud gene summaries querying gene IDs, default symbol. type can set keyType. many words commonly observed, limit word frequency excludeFreq, default 2000. TF-IDF summary precomputed, exclude=\"tfidf\" can specified .accepts values wordcloud() function. numWords specifies many words shown word cloud. words ordered frequency, subset 1:numWords used downstream visualization. values must passed argList arguments list.default, preserve=TRUE, indicates funciton tries preserve original cases characters. Note lower case words capitalized words present, words converted capitalized words, like damage Damage shown Damage preserve=TRUE.also returns data frame consisting frequency term slot name freqDf.Table 2.1: Term frequencies.N-gram supported library tm, specified ngram.\nDefault 1, example specifying 2 shown .Using clusterProfiler functions, one can use enriched pathway names visualization.\nenrich option can specified 'kegg' 'reactome', time specify 'reactome'.One main questions words can clustered together among words contained queried gene cluster. Word clustering (pvclust) identified significant clusters based occurrence text can visualized specifying tag=TRUE. significance threshold, pvclAlpha can specified. default parameters perform pvclust subset dataset words high frequency specified numWords. one want perform whole matrix (natural way), tagWhole=TRUE can specified, although computationally intensive. One can pass clusters perform parallel computing owning pvclust function, specifying cl .example showing ERCC genes, term DNA repair clustered expected.","code":"\n## Configure input genes\ninpSymbol <- c(\"ERCC1\",\"ERCC2\",\"ERCC3\",\"ERCC4\",\"ERCC5\",\"ERCC6\",\"ERCC8\")\ngwc <- wcGeneSummary(inpSymbol)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\ngwc@wc\n## Use palette from palettetown, palettetown::pokepal(150) (Mewtwo!)\ngwc <- wcGeneSummary(inpSymbol,\n                     numWords=100,\n                     excludeFreq=5000,\n                     argList=list(\n                      \"random.order\"=FALSE,\n                     \"colors\"=palette(),\n                     \"rot.per\"=0.4))\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 14 words (frequency and/or tfidf)\ngwc@wc\ngwc_p <- wcGeneSummary(inpSymbol, \n                     numWords=100,\n                     excludeFreq=5000,\n                     preserve=FALSE,\n                     argList=list(\n                       rot.per=0.4,\n                       colors=RColorBrewer::brewer.pal(8, \"Set2\"),\n                       random.order=FALSE\n                     ))\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 14 words (frequency and/or tfidf)\ngwc_p@wc\ngwc\n#> Type: refseq\n#> Number of words: 100\n#> ERCC1/ERCC2/ERCC3/ERCC4/ERCC5/ERCC6/ERCC8\n#> 163.2 Kb\nknitr::kable(\n  head(gwc@freqDf), caption = 'Term frequencies.',\n  row.names = FALSE\n)\ngwc2 <- wcGeneSummary(inpSymbol,\n                      ngram=2,\n                      numWords=50)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\ngwc2@wc\ngwc3 <- wcGeneSummary(inpSymbol,\n                      enrich=\"reactome\",\n                      tfidf=TRUE, numWords=50)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing enrichment analysis\ngwc3@wc\n\npal <- RColorBrewer::brewer.pal(4, \"PuOr\") \npal <- colorRampPalette(pal)(20)\n\n\n## Cluster on subset of words\ngwcl <- wcGeneSummary(inpSymbol,\n                     numWords=30,\n                     tag=TRUE,\n                     pal = pal,\n                     argList=list(rot.per=0.4))\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\ngwcl@wc\ngwcl@pvpick\n#> $clusters\n#> $clusters[[1]]\n#> [1] \"pigmentosum\" \"xeroderma\"  \n#> \n#> $clusters[[2]]\n#>  [1] \"activity\"                  \"atpdependent\"             \n#>  [3] \"basal\"                     \"cerebrooculofacioskeletal\"\n#>  [5] \"characterized\"             \"complementation\"          \n#>  [7] \"damage\"                    \"defects\"                  \n#>  [9] \"exon\"                      \"factor\"                   \n#> [11] \"forms\"                     \"functions\"                \n#> [13] \"helicase\"                  \"heterodimeric\"            \n#> [15] \"incision\"                  \"including\"                \n#> [17] \"interacts\"                 \"light\"                    \n#> [19] \"nucleotide\"                \"product\"                  \n#> [21] \"transcriptioncoupled\"     \n#> \n#> $clusters[[3]]\n#> [1] \"dna\"    \"repair\"\n#> \n#> \n#> $edges\n#> [1]  6 22 23\n\n## Cluster on whole matrix\n\ngwclWhole <- wcGeneSummary(inpSymbol,\n                     numWords=50,\n                     tag=TRUE, tagWhole=TRUE,\n                     pal = pal,\n                     cl=snow::makeCluster(8),\n                     argList=list(rot.per=0.4))\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Multiscale bootstrap... Done.\ngwclWhole@wc\ngwclWhole@pvpick\n#> $clusters\n#> $clusters[[1]]\n#>  [1] \"abnormally\"        \"active\"           \n#>  [3] \"csb\"               \"defective\"        \n#>  [5] \"disease\"           \"hereditary\"       \n#>  [7] \"identified\"        \"iih\"              \n#>  [9] \"p44\"               \"radiation\"        \n#> [11] \"repeat\"            \"sensitive\"        \n#> [13] \"transcriptionally\" \"ultraviolet\"      \n#> \n#> $clusters[[2]]\n#>  [1] \"activates\"       \"adjacent\"        \"atpase\"         \n#>  [4] \"atpstimulated\"   \"dnabinding\"      \"downstream\"     \n#>  [7] \"encode\"          \"formation\"       \"frame\"          \n#> [10] \"fusion\"          \"individual\"      \"occurs\"         \n#> [13] \"polyadenylation\" \"promote\"         \"reading\"        \n#> [16] \"sequence\"        \"shares\"          \"sites\"          \n#> \n#> $clusters[[3]]\n#> [1] \"class\" \"tfiih\"\n#> \n#> $clusters[[4]]\n#> [1] \"eme1\"      \"ercc1\"     \"structure\" \"xp6\"      \n#> \n#> $clusters[[5]]\n#> [1] \"orf\"               \"piggybackderived3\"\n#> [3] \"splice\"           \n#> \n#> $clusters[[6]]\n#> [1] \"pigmentosum\" \"xeroderma\"  \n#> \n#> $clusters[[7]]\n#> [1] \"interacts\" \"type\"     \n#> \n#> $clusters[[8]]\n#> [1] \"incision\"  \"including\" \"light\"    \n#> \n#> $clusters[[9]]\n#> [1] \"complementation\" \"damage\"          \"defects\"        \n#> \n#> $clusters[[10]]\n#> [1] \"transcriptioncoupled\" \"upstream\"            \n#> \n#> $clusters[[11]]\n#>  [1] \"basic\"            \"bivm\"            \n#>  [3] \"cachexia\"         \"cancer\"          \n#>  [5] \"cellular\"         \"characterized\"   \n#>  [7] \"cognitive\"        \"develop\"         \n#>  [9] \"development\"      \"disability\"      \n#> [11] \"disorder\"         \"exists\"          \n#> [13] \"exposure\"         \"function\"        \n#> [15] \"growth\"           \"hypersensitivity\"\n#> [17] \"immunoglobulin\"   \"increased\"       \n#> [19] \"motif\"            \"neighboring\"     \n#> [21] \"patients\"         \"processes\"       \n#> [23] \"read\"             \"referred\"        \n#> [25] \"severe\"           \"singlestrand\"    \n#> [27] \"skin\"             \"specific\"        \n#> [29] \"susceptibility\"   \"uvinduced\"       \n#> [31] \"variable\"         \"vii\"             \n#> [33] \"xp7\"             \n#> \n#> $clusters[[12]]\n#>  [1] \"atpdependent\"        \"basal\"              \n#>  [3] \"belongs\"             \"btf2tfiih\"          \n#>  [5] \"cancerprone\"         \"disorders\"          \n#>  [7] \"factor\"              \"helicase\"           \n#>  [9] \"helicases\"           \"integral\"           \n#> [11] \"mechanism\"           \"rad3xpd\"            \n#> [13] \"subfamily\"           \"trichothiodystrophy\"\n#> \n#> $clusters[[13]]\n#>  [1] \"alter\"                     \"carcinogenesis\"           \n#>  [3] \"catalyzes\"                 \"cd3e\"                     \n#>  [5] \"cerebrooculofacioskeletal\" \"cisplatin\"                \n#>  [7] \"compounds\"                 \"crosslinks\"               \n#>  [9] \"electrophilic\"             \"epsilon\"                  \n#> [11] \"ercc4\"                     \"excising\"                 \n#> [13] \"exon\"                      \"formed\"                   \n#> [15] \"forms\"                     \"heterodimer\"              \n#> [17] \"heterodimeric\"             \"induced\"                  \n#> [19] \"interstrand\"               \"lesion\"                   \n#> [21] \"lesions\"                   \"molecule\"                 \n#> [23] \"overlaps\"                  \"pathway\"                  \n#> [25] \"play\"                      \"polymorphisms\"            \n#> [27] \"process\"                   \"product\"                  \n#> [29] \"recombinational\"           \"required\"                 \n#> [31] \"result\"                    \"strand\"                   \n#> [33] \"xpf\"                      \n#> \n#> $clusters[[14]]\n#> [1] \"dna\"    \"repair\"\n#> \n#> \n#> $edges\n#>  [1]  13  30  97 101 104 106 107 110 114 117 118 119 124 130"},{"path":"basic-usage.html","id":"producing-correlation-networks","chapter":"2 Basic usage","heading":"2.2 Producing correlation networks","text":"next main function producing correlation networks words based co-occurrence words text.Chaning layout.edge label corresponding correlation values can shown edgeLabel=TRUE. number words shown plot can specified numWords. threshold correlation can specified corThresh. text color can changed colorText=TRUE. type edge can specified edgeLink, default TRUE (link used).clustering results based pvclust can shown also correlation network, node color (tag=TRUE). can plot igraph object well, using basic plot function implemented.genes associated corresponding words can shown specifying genePlot=TRUE, useful assessing words associated interesting genes. edges connecting words corresponding genes shown.\nAdditionally, one can specify genePlotNum limiting genes shown, can useful identifying important genes associated high-frequent words.associated enriched pathways (present) can shown specifying genePathPlot, using ggforce.\noption, function first performs -representation analysis whole gene set, plot enriched terms included genes plot. Enrichment analysis performed library clusterProfiler ReactomePA, one can control pathways plot genePathPlotSig value.","code":"\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\")\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nnet@net\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\", layout=\"kk\")\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nnet@net\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\",\n                     edgeLabel=TRUE, corThresh=0.5,\n                     numWords=20, colorText=TRUE)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nnet@net\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\", corThresh=0.2,\n                     numWords=20, tag=TRUE)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nnet@net\nnet@pvpick\n#> $clusters\n#> $clusters[[1]]\n#> [1] \"pigmentosum\" \"xeroderma\"  \n#> \n#> $clusters[[2]]\n#>  [1] \"activity\"             \"atpdependent\"        \n#>  [3] \"complementation\"      \"defects\"             \n#>  [5] \"factor\"               \"functions\"           \n#>  [7] \"incision\"             \"interacts\"           \n#>  [9] \"nucleotide\"           \"product\"             \n#> [11] \"transcriptioncoupled\"\n#> \n#> $clusters[[3]]\n#> [1] \"dna\"    \"repair\"\n#> \n#> \n#> $edges\n#> [1]  2 12 13\nplot(net)\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\",\n                     genePlot=TRUE, corThresh=0.5,\n                     tag=TRUE, edgeLink=FALSE,\n                     numWords=20)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nnet@net\nlibrary(concaveman)\nlibrary(ggforce)\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\",\n                     genePathPlot=\"reactome\", corThresh=0.5,\n                     tag=TRUE, edgeLink=FALSE,\n                     genePathPlotSig=0.05, numWords=20)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Found 47 enriched term\n\nnet@net"},{"path":"basic-usage.html","id":"visualization-of-pubmed-information.","chapter":"2 Basic usage","heading":"2.3 Visualization of PubMed information.","text":"Using rentrez, one can perform analysis PubMed text like article title abstract. function queries input gene symbols (microbes) visualize. typical use cases, genes identified showing genePlot, hub genes identified gene network analysis can queried. basic parameters searching PubMed, like max number articles retrieved sort articles can specified retMax sortOrder. sure obtain api key querying heavily, specify apiKey argument.returned PubMed IDs stored pmids slot.fetching information desirable time consuming, object can passed redo option re-perform analysis like tagging, changing visualization options.gene symbols plotted, specify onlyGene=TRUE.","code":"\nab <- wcAbst(inpSymbol[1:3], retMax=20)\n#> Proceeding without API key\nab@wc\nab@pmids\n#>  [1] \"20301571\" \"27051024\" \"27838878\" \"31077069\" \"33746966\"\n#>  [6] \"32749109\" \"21278243\" \"23593158\" \"34284736\" \"28088319\"\n#> [11] \"25867436\" \"16835333\" \"24023723\" \"27051038\" \"36472749\"\n#> [16] \"28803404\" \"25674148\" \"33125943\" \"8053936\"  \"28474168\"\nab@pmids |> length()\n#> [1] 20\npal <- brewer.pal(5, \"PuOr\") \nabtag <- wcAbst(redo=ab, tag=TRUE,\n                cl=snow::makeCluster(10), pal=pal)\n#> Resuming from the previous results\n#> Multiscale bootstrap... Done.\nabtag2 <- wcAbst(redo=abtag, tag=TRUE, genePlot=TRUE,\n                 plotType=\"network\", corThresh=0.2, preset=TRUE)\n#> Resuming from the previous results\n#> Using previous pvclust results\nabtag@wc\nabtag2@net\n#> Warning: Removed 3 rows containing missing values\n#> (`geom_point()`).\nnet <- wcAbst(inpSymbol[1:5], plotType=\"network\", onlyGene=TRUE)\n#> Proceeding without API key\n#> Subsetting to the gene symbol in orgDb\nnet@net"},{"path":"basic-usage.html","id":"comparing-two-or-more-networks","chapter":"2 Basic usage","heading":"2.4 Comparing two or more networks","text":"One can compare two networks providing list objects produced wc* functions, like wcGeneSummary wcAbst. can useful assessing similarity dissimilarity various text sources, like PubMed, RefSeq, Reactome pathway names.tag information available gene clusters, combined tags can visualized tag=TRUE.","code":"\ncxcls <- c()\nfor (i in c(1,2,3,5,6,8,9,10,11,12,13,14,16)){\n    cxcls <- c(cxcls, paste0(\"CXCL\",i))\n}\n\nnet1 <- wcGeneSummary(inpSymbol, plotType=\"network\",\n                      corThresh=0.5, numWords=20)\n#> Input genes: 7\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nnet2 <- wcGeneSummary(cxcls, plotType=\"network\",\n                      corThresh=0.5, numWords=20)\n#> Input genes: 13\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nnet3 <- wcAbst(redo=ab, plotType=\"network\",\n               corThresh=0.2, numWords=20)\n#> Resuming from the previous results\n\n## Not having meaningful overlaps\ncompareWordNet(list(net1, net2),\n               titles=c(\"ercc\",\"cxcl\"))\n#> Scale for colour is already present.\n#> Adding another scale for colour, which will replace the\n#> existing scale.\n#> Warning in grid.Call(C_stringMetric,\n#> as.graphicsAnnot(x$label)): font family not found in Windows\n#> font database\n\n#> Warning in grid.Call(C_stringMetric,\n#> as.graphicsAnnot(x$label)): font family not found in Windows\n#> font database\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\ncompareWordNet(list(net1, net3),\n               titles=c(\"ercc\",\"ercc-PubMed\"))\n#> Scale for colour is already present.\n#> Adding another scale for colour, which will replace the\n#> existing scale.\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\ncompareWordNet(list(net1, net2, net3),\n               titles=c(\"ercc\",\"cxcl\", \"ercc-PubMed\"))\n#> Scale for colour is already present.\n#> Adding another scale for colour, which will replace the\n#> existing scale.\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\nkeggPathways <- org.Hs.egPATH2EG\nmappedKeys <- mappedkeys(keggPathways)\nkeggList <- as.list(keggPathways[mappedKeys])\n\nnet1 <- wcGeneSummary(keggList$`04110`,\n                      keyType=\"ENTREZID\",\n                      plotType=\"network\",\n                      corThresh=0.3,\n                      numWords=30,\n                      tag=TRUE,\n                      tfidf=TRUE)\n#> Input genes: 124\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n\nnet2 <- wcGeneSummary(keggList$`04210`,\n                      keyType=\"ENTREZID\",\n                      plotType=\"network\",\n                      corThresh=0.3,\n                      numWords=30,\n                      tfidf=TRUE,\n                      tag=TRUE)\n#> Input genes: 87\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n\ncompareWordNet(list(net1, net2), tag=TRUE)\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database"},{"path":"basic-usage.html","id":"text-over-represenatation-analysis-experimental","chapter":"2 Basic usage","heading":"2.5 Text over represenatation analysis (experimental)","text":"thresholding can used RefSeq visualization.\nFilter words using ORA threshold frequency threshold setting ora=TRUE.obtaining ORA results, one can plot volcano-plot like plot results using plotORA function.","code":"\ngeneList <- keggList$`00785` # Lipoic acid metabolism\npvs <- textORA(geneList)\nhist(pvs)\npvs[order(pvs)] |> head()\n#>            lipoic              step              acid \n#>      1.600963e-14      8.016934e-08      5.300425e-07 \n#> lipoateactivating  lipoatedependent            lipoyl \n#>      1.484931e-04      1.484931e-04      1.484931e-04\n\ngeneList <- keggList$`05150` # Staphylococcus aureus infection\npvs <- textORA(geneList)\nhist(pvs)\npvs[order(pvs)] |> head()\n#>          drb        chain   complement        class \n#> 0.000000e+00 3.669590e-82 3.266180e-74 5.496543e-46 \n#>         exon         beta \n#> 6.851722e-39 1.318324e-34\nnet <- wcGeneSummary(inpSymbol, plotType=\"network\",\n                     ora=TRUE, edgeLink=FALSE)\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 148 words (ORA)\nnet@net\nlibrary(ggrepel)\nplotORA(net)"},{"path":"basic-usage.html","id":"dependency-analyis-using-udpipe","chapter":"2 Basic usage","heading":"2.6 Dependency analyis using udpipe","text":"Using udpipe package (Straka Straková. 2017), one can performe dependency analysis texts various databases. Set useUdpipe TRUE, specify downloaded model used udpipeModel.","code":"\np <- wcGeneSummary::wcGeneSummary(c(\"DDX41\",\"PNKP\",\"ERCC2\"),\n                                  plotType=\"network\",\n                                  useUdpipe=TRUE,\n                                  udpipeModel=\"~/english-ewt-ud-2.5-191206.udpipe\")\n#> Using udpipe mode\n#> Input genes: 3\n#>   Converted input genes: 3\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\np@net\nsessionInfo()\n#> R version 4.2.2 (2022-10-31 ucrt)\n#> Platform: x86_64-w64-mingw32/x64 (64-bit)\n#> Running under: Windows 10 x64 (build 19044)\n#> \n#> Matrix products: default\n#> \n#> locale:\n#> [1] LC_COLLATE=Japanese_Japan.utf8 \n#> [2] LC_CTYPE=Japanese_Japan.utf8   \n#> [3] LC_MONETARY=Japanese_Japan.utf8\n#> [4] LC_NUMERIC=C                   \n#> [5] LC_TIME=Japanese_Japan.utf8    \n#> \n#> attached base packages:\n#> [1] stats4    stats     graphics  grDevices utils    \n#> [6] datasets  methods   base     \n#> \n#> other attached packages:\n#>  [1] dplyr_1.0.99.9000     dendextend_1.16.0    \n#>  [3] clusterProfiler_4.6.0 ReactomePA_1.42.0    \n#>  [5] RColorBrewer_1.1-3    ggraph_2.1.0         \n#>  [7] ggplot2_3.4.0         org.Hs.eg.db_3.16.0  \n#>  [9] AnnotationDbi_1.60.0  IRanges_2.32.0       \n#> [11] S4Vectors_0.36.1      Biobase_2.58.0       \n#> [13] BiocGenerics_0.44.0   wcGeneSummary_0.99.0 \n#> \n#> loaded via a namespace (and not attached):\n#>   [1] shadowtext_0.1.2       fastmatch_1.1-3       \n#>   [3] plyr_1.8.8             igraph_1.3.5          \n#>   [5] lazyeval_0.2.2         splines_4.2.2         \n#>   [7] BiocParallel_1.32.5    GenomeInfoDb_1.34.6   \n#>   [9] digest_0.6.31          yulab.utils_0.0.6     \n#>  [11] htmltools_0.5.4        bugsigdbr_1.4.1       \n#>  [13] GOSemSim_2.24.0        viridis_0.6.2         \n#>  [15] GO.db_3.16.0           fansi_1.0.3           \n#>  [17] GeneSummary_0.99.4     magrittr_2.0.3        \n#>  [19] memoise_2.0.1          tm_0.7-10             \n#>  [21] Biostrings_2.66.0      graphlayouts_0.8.4    \n#>  [23] pvclust_2.2-0          wordcloud_2.6         \n#>  [25] enrichplot_1.18.3      colorspace_2.0-3      \n#>  [27] rappdirs_0.3.3         blob_1.2.3            \n#>  [29] ggrepel_0.9.2          xfun_0.36             \n#>  [31] crayon_1.5.2           RCurl_1.98-1.9        \n#>  [33] jsonlite_1.8.4         scatterpie_0.1.8      \n#>  [35] graph_1.76.0           ape_5.6-2             \n#>  [37] glue_1.6.2             polyclip_1.10-4       \n#>  [39] stopwords_2.3          gtable_0.3.1          \n#>  [41] zlibbioc_1.44.0        XVector_0.38.0        \n#>  [43] GetoptLong_1.0.5       graphite_1.44.0       \n#>  [45] rentrez_1.2.3          scales_1.2.1          \n#>  [47] DOSE_3.24.2            DBI_1.1.3             \n#>  [49] Rcpp_1.0.9             viridisLite_0.4.1     \n#>  [51] xtable_1.8-4           tidytree_0.4.2        \n#>  [53] gridGraphics_0.5-1     reactome.db_1.82.0    \n#>  [55] bit_4.0.5              htmlwidgets_1.6.1     \n#>  [57] httr_1.4.4             fgsea_1.24.0          \n#>  [59] ellipsis_0.3.2         pkgconfig_2.0.3       \n#>  [61] XML_3.99-0.13          farver_2.1.1          \n#>  [63] sass_0.4.4             utf8_1.2.2            \n#>  [65] ggplotify_0.1.0        tidyselect_1.2.0      \n#>  [67] rlang_1.0.6            reshape2_1.4.4        \n#>  [69] later_1.3.0            munsell_0.5.0         \n#>  [71] tools_4.2.2            cachem_1.0.6          \n#>  [73] downloader_0.4         cli_3.6.0             \n#>  [75] generics_0.1.3         RSQLite_2.2.20        \n#>  [77] gson_0.0.9             evaluate_0.19         \n#>  [79] stringr_1.5.0          fastmap_1.1.0         \n#>  [81] ggdendro_0.1.23        yaml_2.3.6            \n#>  [83] ggtree_3.6.2           knitr_1.41            \n#>  [85] bit64_4.0.5            fs_1.5.2              \n#>  [87] tidygraph_1.2.2        purrr_1.0.1           \n#>  [89] KEGGREST_1.38.0        nlme_3.1-161          \n#>  [91] mime_0.12              slam_0.1-50           \n#>  [93] aplot_0.1.9            xml2_1.3.3            \n#>  [95] compiler_4.2.2         rstudioapi_0.14       \n#>  [97] png_0.1-8              treeio_1.22.0         \n#>  [99] tibble_3.1.8           tweenr_2.0.2          \n#> [101] bslib_0.4.2            stringi_1.7.12        \n#> [103] cyjShiny_1.0.34        highr_0.10            \n#> [105] lattice_0.20-45        Matrix_1.5-3          \n#> [107] vctrs_0.5.1            pillar_1.8.1          \n#> [109] lifecycle_1.0.3        jquerylib_0.1.4       \n#> [111] GlobalOptions_0.1.2    data.table_1.14.6     \n#> [113] cowplot_1.1.1          bitops_1.0-7          \n#> [115] httpuv_1.6.8           patchwork_1.1.2       \n#> [117] qvalue_2.30.0          R6_2.5.1              \n#> [119] bookdown_0.31          promises_1.2.0.1      \n#> [121] gridExtra_2.3          codetools_0.2-18      \n#> [123] MASS_7.3-58.1          rjson_0.2.21          \n#> [125] withr_2.5.0            GenomeInfoDbData_1.2.9\n#> [127] parallel_4.2.2         ISOcodes_2022.09.29   \n#> [129] grid_4.2.2             ggfun_0.0.9           \n#> [131] tidyr_1.2.1            HDO.db_0.99.1         \n#> [133] rmarkdown_2.19         downlit_0.4.2         \n#> [135] ggforce_0.4.1          NLP_0.2-1             \n#> [137] shiny_1.7.4            base64enc_0.1-3"},{"path":"the-basic-usage-for-microbiome-related-data.html","id":"the-basic-usage-for-microbiome-related-data","chapter":"3 The basic usage for microbiome-related data","heading":"3 The basic usage for microbiome-related data","text":"general usage mining information related microbiome-related signatures.use BugSigDB, R port bugsigdbr obtain curated dataset relationship bacterial taxonomy human diseases (Geistlinger et al. 2022). Users can query microbiome names, searched MetaPhlAn taxonomic annotation. target=\"title\", title corresponding articles summarized.target=\"abstract\", corresponding abstract fetched summarized.successful visualization, pre-caculated TF-IDF frequency data frame available one can use filter highly occurring words, prefiltering option used wcGeneSummary.network visualization possible enabling plotType=\"network\".\nparameters can passed wcGeneSummary can used.words--species relationship can plotted mbPlot=TRUE.BugSigDB contains relationship bacterial taxonomy disease, disease name can also plotted. disPlot=TRUE, mbPlot\nset TRUE default.curated databases, PubMed query can also performed setting curate=FALSE. way, text information latest literature microbes diseases can plotted. options use function obtaining PubMed information can specified abstArg list format, like sortOrder=\"pubdate\".microbiome analysis, often case investigating coded enzymes important. Using wcEC function getUPtax function, queried species genus can linked possible interaction enzymes using following databases. downloaded file path specified function like link queried taxonomy enzymes. Specifically, enzymes listed enzyme.dat searched, corresponding UniProt identifiers obtained, followed mapping using speclist.txt. way, links microbe - textual information - enzyme can plotted.enzyme.dat - Expasyspeclist.txt - UniProt Controlled vocabulary speciesFurther, relationship metabolites microbiome interest. Recent studies revealed various associations gut microbiome composition human plasma metabolites, well environments.Wishart DS, Oler E, Peters H, et al. MiMeDB: Human Microbial Metabolome Database. Nucleic Acids Res. 2023;51(D1):D611-D620. doi:10.1093/nar/gkac868Muller E, Algavi YM, Borenstein E. gut microbiome-metabolome dataset collection: curated resource integrative meta-analysis. npj Biofilms Microbiomes. 2022;8(1):1-7. doi:10.1038/s41522-022-00345-5Dekkers KF, Sayols-Baixeras S, Baldanzi G, et al. online atlas human plasma metabolite signatures gut microbiome composition. Nat Commun. 2022;13(1):5370. doi:10.1038/s41467-022-33050-0We now use data obtained Dekkers et al..\nFirst, read downloaded file using readxl.Pass tibble, well columns represent taxonomy, metabolites, quantitative values threshold metCol. case, metCol <- c(\"Metagenomic species\", \"Metabolite\", \"Spearman's ρ\").way, can plot links microbes - metabolites - textual information. information combined, one can plot textual information - metabolites - coded enzymes - diseases - microbes link one query.complex network, resulting image might unreadable.\nexportCyjsWithoutImage function can used export graph readily interactive interface using Cytoscape.js.","code":"\nlibrary(wcGeneSummary)\nlibrary(ggplot2)\nlibrary(ggraph)\nlibrary(RColorBrewer)\nbasic <- wcBSDB(c(\"Veillonella dispar\",\"Neisseria flava\"),tag=FALSE,\n    curate=TRUE,target=\"title\",pre=TRUE,cl=snow::makeCluster(12),\n    pal=RColorBrewer::brewer.pal(10, \"Set2\"),numWords=80,argList=list(min.freq=1))\n#> Input microbes: 2\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#> Including 28 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nbasic@freqDf |> head(n=20)\n#>                    word freq\n#> gut                 Gut    8\n#> oral               Oral    5\n#> patients       patients    5\n#> study             study    3\n#> arthritis     arthritis    2\n#> association association    2\n#> bacterial     bacterial    2\n#> covid19         COVID19    2\n#> diabetes       diabetes    2\n#> dysbiosis     Dysbiosis    2\n#> infant           infant    2\n#> infection     Infection    2\n#> obese             obese    2\n#> respiratory respiratory    2\n#> sequencing   sequencing    2\n#> surgery         surgery    2\n#> tract             tract    2\n#>  features      features    1\n#> 16s                 16S    1\n#> aerosol         Aerosol    1\nbasic@wc\nbasic2 <- wcBSDB(c(\"Veillonella dispar\",\"Neisseria flava\"),tag=TRUE,\n    curate=TRUE,target=\"abstract\",pre=TRUE,cl=snow::makeCluster(12),\n    pal=RColorBrewer::brewer.pal(10, \"Set2\"),numWords=80)\n#> Input microbes: 2\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#> Including 28 entries\n#> Target is abstract\n#>   Querying PubMed for 17 pmids\n#>   Querying without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\n#> Multiscale bootstrap... Done.\nbasic2@freqDf |> head()\n#>                word freq\n#> patients   patients   37\n#> gut             Gut   30\n#> oral           Oral   27\n#> bacterial Bacterial   25\n#> species     species   24\n#> microbial Microbial   23\nbasic2@wc\nrmwords <- wcGeneSummary:::allFreqBSDB\nfilter <- rmwords[rmwords$freq>quantile(rmwords$freq, 0.95),]\nfilter |> head(n=20)\n#>             freq        word\n#> microbiota   275  microbiota\n#> gut          242         gut\n#> microbiome   175  microbiome\n#> patients     146    patients\n#> study         69       study\n#> cancer        64      cancer\n#> composition   62 composition\n#> oral          55        oral\n#> human         49       human\n#> intestinal    48  intestinal\n#> children      45    children\n#> microbial     45   microbial\n#> disease       43     disease\n#> fecal         41       fecal\n#> alterations   36 alterations\n#> analysis      34    analysis\n#> association   34 association\n#> dysbiosis     34   dysbiosis\n#> infection     34   infection\n#> risk          33        risk\nnet <- wcBSDB(c(\"Neisseria\",\"Veillonella\"),\n    curate=TRUE,target=\"title\",pre=TRUE,plotType=\"network\",\n    additionalRemove=filter$word, corThresh=0.2, edgeLink=FALSE,\n    numWords=60)\n#> Input microbes: 2\n#>   Found 76 entries for Neisseria\n#>   Found 221 entries for Veillonella\n#> Including 502 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nnet@net\nnet2 <- wcBSDB(c(\"Veillonella dispar\",\"Neisseria flava\",\n    \"Veillonella parvula\",\"Akkermansia muciniphila\"), mbPlot=TRUE,\n    curate=TRUE,target=\"title\",pre=TRUE,plotType=\"network\",\n    additionalRemove=filter$word,\n    numWords=40, corThresh=0.2, colorText=TRUE)\n#> Input microbes: 4\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#>   Found 20 entries for Veillonella parvula\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 90 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nnet2@net\nnet3 <- wcBSDB(c(\"Veillonella dispar\",\"Neisseria flava\",\n    \"Veillonella parvula\",\"Akkermansia muciniphila\"), mbPlot=TRUE,\n    curate=TRUE,target=\"title\",pre=TRUE,plotType=\"network\",\n    additionalRemove=filter$word, disPlot=TRUE,\n    numWords=40, corThresh=0.2, colorText=TRUE)\n#> Input microbes: 4\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#>   Found 20 entries for Veillonella parvula\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 90 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nnet3@net\nnet4 <- wcBSDB(c(\"Veillonella dispar\",\"Neisseria flava\",\n    \"Veillonella parvula\",\"Akkermansia muciniphila\"), mbPlot=TRUE,\n    curate=FALSE,target=\"title\",pre=TRUE,plotType=\"network\",\n    additionalRemove=filter$word, disPlot=TRUE,\n    numWords=40, corThresh=0.2, colorText=TRUE,\n    abstArg = list(retMax=80, sortOrder=\"pubdate\"))\n#> Input microbes: 4\n#>   Found 17 entries for Veillonella dispar\n#>   Found 1 entries for Neisseria flava\n#>   Found 20 entries for Veillonella parvula\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 90 entries\n#> Proceeding without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\nnet4@net\n# Not run\nvp <- wcBSDB(c(\"Veillonella parvula\"),\n                 plotType=\"network\",\n                curate=TRUE, target=\"title\", edgeLink=FALSE,\n                mbPlot = TRUE, ecPlot=TRUE, disPlot=TRUE, tag=TRUE,\n                cl=snow::makeCluster(10),colorText=TRUE, pre=TRUE, numWords=30,\n                nodePal=RColorBrewer::brewer.pal(10, \"Set2\"),\n                ecFile=\"../enzyme.dat\",\n                upTaxFile = \"../speclist.txt\")\n#> Input microbes: 1\n#>   Found 20 entries for Veillonella parvula\n#> Including 31 entries\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\n#> Processing EC file\n#>   Linking taxonomy to EC\n#> Multiscale bootstrap... Done.\nvp@net\nmetab <- readxl::read_excel(\n  \"../41467_2022_33050_MOESM8_ESM.xlsx\",skip = 7)\n\nmetabEx <- wcBSDB(c(\"Akkermansia muciniphila\"),\n                edgeLink=FALSE,\n                curate=TRUE,\n                corThresh=0.3,\n                nodePal=RColorBrewer::brewer.pal(10, \"Dark2\"),\n                pre=TRUE, tag=TRUE,\n                additionalRemove = filter$word,\n                target=\"abstract\", colorText=TRUE,\n                plotType=\"network\", numWords=50,\n                mbPlot=TRUE,\n                metCol=c(\"Metagenomic species\", \"Metabolite\", \"Spearman's ρ\"),\n                metab =metab, metThresh=0.15,\n                preserve = TRUE,\n                cl=snow::makeCluster(10),\n                abstArg = list(retMax=80,\n                               sortOrder=\"relevance\"))\n#> Input microbes: 1\n#>   Found 21 entries for Akkermansia muciniphila\n#> Including 31 entries\n#> Target is abstract\n#>   Querying PubMed for 20 pmids\n#>   Querying without API key\n#> Filter based on BugSigDB\n#> Filtering 0 words (frequency and/or tfidf)\n#> Checking metabolites\n#> Multiscale bootstrap... Done.\nmetabEx@net\n## exportCyjsWithoutImage(metabEx@igraph, rootDir=\".\", netDir=\"\",nodeColorDiscretePal = \"Pastel1\")\nknitr::include_url(\"https://noriakis.github.io/cyjs_test/complex\")\nsessionInfo()\n#> R version 4.2.2 (2022-10-31 ucrt)\n#> Platform: x86_64-w64-mingw32/x64 (64-bit)\n#> Running under: Windows 10 x64 (build 19044)\n#> \n#> Matrix products: default\n#> \n#> locale:\n#> [1] LC_COLLATE=Japanese_Japan.utf8 \n#> [2] LC_CTYPE=Japanese_Japan.utf8   \n#> [3] LC_MONETARY=Japanese_Japan.utf8\n#> [4] LC_NUMERIC=C                   \n#> [5] LC_TIME=Japanese_Japan.utf8    \n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets \n#> [6] methods   base     \n#> \n#> other attached packages:\n#> [1] RColorBrewer_1.1-3   ggraph_2.1.0        \n#> [3] ggplot2_3.4.0        wcGeneSummary_0.99.0\n#> \n#> loaded via a namespace (and not attached):\n#>   [1] GeneSummary_0.99.4     colorspace_2.0-3      \n#>   [3] rjson_0.2.21           ellipsis_0.3.2        \n#>   [5] XVector_0.38.0         GlobalOptions_0.1.2   \n#>   [7] base64enc_0.1-3        ggdendro_0.1.23       \n#>   [9] fs_1.5.2               rstudioapi_0.14       \n#>  [11] farver_2.1.1           graphlayouts_0.8.4    \n#>  [13] ggrepel_0.9.2          bit64_4.0.5           \n#>  [15] AnnotationDbi_1.60.0   fansi_1.0.3           \n#>  [17] xml2_1.3.3             downlit_0.4.2         \n#>  [19] cachem_1.0.6           knitr_1.41            \n#>  [21] polyclip_1.10-4        jsonlite_1.8.4        \n#>  [23] png_0.1-8              graph_1.76.0          \n#>  [25] ggforce_0.4.1          shiny_1.7.4           \n#>  [27] bugsigdbr_1.4.1        rentrez_1.2.3         \n#>  [29] compiler_4.2.2         httr_1.4.4            \n#>  [31] fastmap_1.1.0          cli_3.6.0             \n#>  [33] later_1.3.0            tweenr_2.0.2          \n#>  [35] htmltools_0.5.4        tools_4.2.2           \n#>  [37] igraph_1.3.5           NLP_0.2-1             \n#>  [39] gtable_0.3.1           glue_1.6.2            \n#>  [41] GenomeInfoDbData_1.2.9 dplyr_1.0.99.9000     \n#>  [43] Rcpp_1.0.9             slam_0.1-50           \n#>  [45] Biobase_2.58.0         jquerylib_0.1.4       \n#>  [47] vctrs_0.5.1            Biostrings_2.66.0     \n#>  [49] xfun_0.36              stringr_1.5.0         \n#>  [51] mime_0.12              lifecycle_1.0.3       \n#>  [53] pvclust_2.2-0          XML_3.99-0.13         \n#>  [55] dendextend_1.16.0      org.Hs.eg.db_3.16.0   \n#>  [57] zlibbioc_1.44.0        MASS_7.3-58.1         \n#>  [59] scales_1.2.1           tidygraph_1.2.2       \n#>  [61] promises_1.2.0.1       parallel_4.2.2        \n#>  [63] cyjShiny_1.0.34        yaml_2.3.6            \n#>  [65] memoise_2.0.1          gridExtra_2.3         \n#>  [67] yulab.utils_0.0.6      sass_0.4.4            \n#>  [69] stringi_1.7.12         RSQLite_2.2.20        \n#>  [71] highr_0.10             S4Vectors_0.36.1      \n#>  [73] BiocGenerics_0.44.0    GenomeInfoDb_1.34.6   \n#>  [75] rlang_1.0.6            pkgconfig_2.0.3       \n#>  [77] bitops_1.0-7           evaluate_0.19         \n#>  [79] purrr_1.0.1            patchwork_1.1.2       \n#>  [81] htmlwidgets_1.6.1      cowplot_1.1.1         \n#>  [83] bit_4.0.5              tidyselect_1.2.0      \n#>  [85] magrittr_2.0.3         bookdown_0.31         \n#>  [87] R6_2.5.1               IRanges_2.32.0        \n#>  [89] generics_0.1.3         DBI_1.1.3             \n#>  [91] pillar_1.8.1           withr_2.5.0           \n#>  [93] KEGGREST_1.38.0        RCurl_1.98-1.9        \n#>  [95] tibble_3.1.8           crayon_1.5.2          \n#>  [97] wordcloud_2.6          utf8_1.2.2            \n#>  [99] rmarkdown_2.19         viridis_0.6.2         \n#> [101] GetoptLong_1.0.5       grid_4.2.2            \n#> [103] blob_1.2.3             digest_0.6.31         \n#> [105] xtable_1.8-4           tm_0.7-10             \n#> [107] tidyr_1.2.1            httpuv_1.6.8          \n#> [109] gridGraphics_0.5-1     stats4_4.2.2          \n#> [111] munsell_0.5.0          viridisLite_0.4.1     \n#> [113] ggplotify_0.1.0        bslib_0.4.2"},{"path":"interactive-inspection-of-bayesian-network-annotated-by-words.html","id":"interactive-inspection-of-bayesian-network-annotated-by-words","chapter":"4 Interactive inspection of Bayesian network annotated by words","heading":"4 Interactive inspection of Bayesian network annotated by words","text":"example, Bayesian network showing module eigengenes relationship inferred using boot.strength function bnlearn weighted gene correlation network analysis (WGCNA) results. modules annotated word clouds produced wcGeneSummary(), can exported format Cytoscape.js vis.js. way, module relationship can interactively inspected functional implications. functions like wcAbst() can used, however, shold specify API keys function makes multiple queries.Use like http-server directory containing exported JavaScript, interactively inspect module relationship word information.example visualization shown (code ).Example visualization Bayesian network","code":"\nlibrary(wcGeneSummary)\nlibrary(ggplot2)\nlibrary(ggraph)\nlibrary(org.Hs.eg.db)\nlibrary(clusterProfiler)\nlibrary(RColorBrewer)\n## In this example, we simulate WGCNA results.\n## you can just use results from WGCNA.\n## Assuming WGCNA results are stored in `mod`\nmod <- wcGeneSummary::returnExample()\nMEs <- mod$MEs\nmodColors <- mod$colors\nensg <- names(modColors)\n\n# library(bnlearn)\nlibrary(igraph)\n\n## Replace like boot.strength(mod$MEs, R=500, algorithm = \"hc\")\n# dag <- model2network(\"[ME1][ME2|ME1]\") # If using bnlearn\ndag <- graph_from_literal( ME1-+ME2, ME1-+ME3 )\n\n## Convert to igraph\n# g <- as.igraph(dag)\ng <- dag\n\n## Assign edge attributes\n## Skip, if you perform boot.strength, the edge attributes can be added from the result\n# el <- data.frame(as_edgelist(g))\n# colnames(el) <- c(\"from\",\"to\")\n# el <- left_join(el, bs)\n# E(g)$strength <- el$strength\n# E(g)$direction <- el$direction\n\n## Node attributes\nV(g)$stripName <- gsub(\"ME\",\"\",V(g)$name)\nsizes <- table(modColors)\nV(g)$size <- as.numeric(sizes[V(g)$stripName])\n\n## Directory to save images and a script\nrootDir <- \"./\"\nnetDir <- \"visCyjs\"\nimageDir <- \"images\"\n\ndir.create(paste0(rootDir, netDir))\ndir.create(paste0(rootDir, netDir, \"/\", imageDir))\n\nimages <- c()\nplotType <- \"bar\"\nnumLim <- 200 # limit for gene number\nfor (i in V(g)$name){\n    print(i)\n    i <- as.numeric(gsub(\"ME\",\"\",i)) # strip ME\n\n    queries <- ensg[modColors==i]\n    if (length(queries)>numLim) {\n        warning(\"Sampling random genes\")\n        queries <- queries[sample(1:length(queries), numLim)] ## Temporary restrict to randomly chosen genes, should be replaced to like kME values\n    }\n    \n    ## Convert to ENTREZ\n    entre <- AnnotationDbi::select(org.Hs.eg.db, keytype=\"ENSEMBL\",\n        keys = queries, columns = \"ENTREZID\")$ENTREZID\n    \n    if (plotType==\"bar\"){\n        plt <- makeBar(entre, keyType=\"ENTREZID\") # get barplot\n    } else { ## If wordcloud\n        # A <- wcGeneSummary(entre, keyType=\"ENTREZID\",\n        #                    argList=list(rot.per=0.4,\n        #                                 colors=brewer.pal(10,\n        #                                                   sample(row.names(RColorBrewer::brewer.pal.info), 1)),\n        #                                 random.order=FALSE),\n        #                    numWords=80)\n        # # plt <- A@wc\n        # # \n        # # ## This time use ggwordcloud()\n        # plt <- ggwordcloud::ggwordcloud(A@freqDf$word, A@freqDf$freq,\n        #                      shape=\"circle\", min.freq = 1,max.words = Inf,\n        #                      rot.per = 0.5, random.order = FALSE,\n        #                      colors = brewer.pal(10,\n        #                                          sample(row.names(RColorBrewer::brewer.pal.info), 1)))+\n        #          scale_size_area(max_size = 40)\n    }\n    ## Save images\n    ggsave(paste0(rootDir, netDir, \"/\", imageDir, \"/\", i ,\".png\"),\n           plt, dpi=300, width=10, height=10)\n    ## Store image dir\n    images <- c(images, paste0(imageDir, \"/\", i ,\".png\"))\n}\n#> [1] \"ME1\"\n#> Input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> [1] \"ME2\"\n#> Input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> [1] \"ME3\"\n#> Input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nV(g)$image <- images\n\n## Node shape\nif (plotType==\"bar\"){\n    V(g)$shape <- rep(\"rectangle\", length(V(g))) \n} else {\n    V(g)$shape <- rep(\"circle\", length(V(g)))\n}\n\n## Scale the node size\nsizeMin <- 50\nsizeMax <- 200\nrawMin <- min(V(g)$size)\nrawMax <- max(V(g)$size)\nscf <- (sizeMax-sizeMin)/(rawMax-rawMin)\nV(g)$size <- scf * V(g)$size + sizeMin - scf * rawMin\n\n## Export\nexportCyjs(g, rootDir, netDir)\n# or, exportVisjs(g, rootDir, netDir)"},{"path":"annotating-gene-cluster-dendrogram.html","id":"annotating-gene-cluster-dendrogram","chapter":"5 Annotating gene cluster dendrogram","heading":"5 Annotating gene cluster dendrogram","text":"relationship gene clusters often investigated clustering analysis like WGCNA. workflows involving gene clustering analysis typically plot dendrogram heatmap module eigengenes using plotEigengeneNetworks, useful combine wcGeneSummary, plot additional word information dendrogram one line.calculates dendrogram using pvclust internally default. like plot segments involving specified gene cluster, use candidateNodes specify nodes.plot word cloud instead pyramid plots, use useWC option. scaling word size, use wcScale optionThis uses ggwordcloud list specified wcArg passed function.horizontal plot can specified horiz=TRUE.examining enriched pathway names dendrograms, specify argList wcGeneSummary, like list(enrich=\"kegg\").textual information, can simply annotate dendrogram using enrichment analysis.\nUseful inspecting branches dendrogram contains pathway information.column names clusterProfiler results can specified showType.specifically interested pathway, use highlight highlight names dendrogram.","code":"\n# WGCNA::plotEigengeneNetworks(mod$MEs, mod$colors, plotHeatmaps = FALSE)\nplotEigengeneNetworksWithWords(MEs, modColors)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs, modColors, candidateNodes=c(\"ME2\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nscale4 <- plotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=4)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nscale15 <- plotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=15)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nscale4 + scale15\nplotEigengeneNetworksWithWords(MEs, modColors, useWC=TRUE, candidateNodes=c(\"ME2\"), wcScale=15, wcArg=list(rot.per=0))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs,\n                               modColors,\n                               useWC=TRUE,\n                               candidateNodes=c(\"ME2\"),\n                               wcScale=15,\n                               wcArg=list(rot.per=0),\n                               horiz=TRUE)\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 25\n#>   Converted input genes: 25\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"words\", argList=list(enrich=\"kegg\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Input genes: 12\n#>   Converted input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing enrichment analysisInput genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing enrichment analysis\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"enrich\")\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotEigengeneNetworksWithWords(MEs, modColors, type=\"enrich\", showType=\"Description\")\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\nplotEigengeneNetworksWithWords(mod$MEs, mod$colors,\n                               type=\"enrich\", highlight=c(\"hsa04060\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#> 'select()' returned 1:1 mapping between keys and\n#> columns"},{"path":"assess-the-occurrence-of-the-speicific-words-across-gene-clusters.html","id":"assess-the-occurrence-of-the-speicific-words-across-gene-clusters","chapter":"6 Assess the occurrence of the speicific words across gene clusters","heading":"6 Assess the occurrence of the speicific words across gene clusters","text":"clustering analysis like WGCNA, making list query.","code":"\nlibrary(limma)\n#> \n#> Attaching package: 'limma'\n#> The following object is masked from 'package:BiocGenerics':\n#> \n#>     plotMA\nlibrary(ggrepel)\nquery <- \"DNA repair\"\ntab <- getGeneKEGGLinks(species=\"hsa\")\nlistOfGenes <- list()\nfor (path in unique(tab$PathwayID)){\n    listOfGenes[[path]] <- subset(tab, PathwayID==path)$GeneID\n}\n## Random subset! The results would be different.\nfrq <- findTerm(query, listOfGenes[sample(length(listOfGenes), 20)],\n                split=TRUE, calc=\"mean\",\n                keyType=\"ENTREZID\")\n#> Finding query in 20 clusters ...\n#> Input genes: 31\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 69\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 162\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 212\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 194\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 86\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 247\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 223\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 29\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 197\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 159\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 19\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 96\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 58\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 30\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 80\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 86\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 15\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 147\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 476\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nplt <- data.frame(t(data.frame(frq, check.names=FALSE)),\n                  check.names=FALSE)\n\nplt$name <- gsub(\"path:\", \"\", rownames(plt))\np <- ggplot(plt, aes(dna, repair, label = plt[,3])) +\n    geom_point(color = \"red\")+ \n    geom_text_repel(bg.color=\"white\")+theme_minimal()+\n    xlab(\"dna\")+ylab(\"repair\")\np\n#> Warning: ggrepel: 1 unlabeled data points (too many\n#> overlaps). Consider increasing max.overlaps\nquery <- \"antiviral response\"\nload(\"./blockwiseModule.rda\")\nmecolors <- bwmod$color\ninputList <- names(mecolors)\nnames(inputList) <- paste0(\"ME\",bwmod$color)\n\nlistOfGenes <- split(inputList, names(inputList))\n\nfrq <- findTerm(query, listOfGenes,\n                split=TRUE,calc=\"highest\",\n                keyType=\"ENSEMBL\")\n#> Finding query in 17 clusters ...\n#> Input genes: 12943\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 9943\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 5534\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 4649\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 43\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 42\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 43\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 42\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 41\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 40\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 40\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 34\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 39\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 37\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 38\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 38\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 2192\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 2019\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 740\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 578\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 653\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 536\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 621\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 534\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 591\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#>   Converted input genes: 475\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 139\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 55\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 112\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 65\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Input genes: 89\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 87\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nplt <- data.frame(t(data.frame(frq, check.names=FALSE)),\n                  check.names=FALSE)\nplt$name <- row.names(plt)\n\np <- ggplot(plt, aes(antiviral, response, label = plt[,3])) +\n  geom_point(color = \"blue\")+ \n  geom_text_repel(bg.color=\"white\")+theme_minimal()+\n  xlab(\"antiviral\")+ylab(\"response\")\np"},{"path":"recluster-the-cluster-using-word-information.html","id":"recluster-the-cluster-using-word-information","chapter":"7 Recluster the cluster using word information","heading":"7 Recluster the cluster using word information","text":"","code":"\nsimExample <- returnSim(returnExample()$color,\n                        keyType=\"ENSEMBL\", argList=list(ora=TRUE))\n#> Number of clusters: 3\n#> 1\n#> Input genes: 12\n#>   Converted input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 109 words (ORA)\n#> 2\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 238 words (ORA)\n#> 3\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing ORA\n#> Filtered 148 words (ORA)\nheatmap(simExample)\nsimExample <- returnSim(returnExample()$color,\n                        keyType=\"ENSEMBL\",\n                        argList=list(tfidf=TRUE, takeMax=TRUE))\n#> Number of clusters: 3\n#> 1\n#> Input genes: 12\n#>   Converted input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> 2\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> 3\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nheatmap(simExample)\nsimExample <- returnSim(returnExample()$color,\n                        keyType=\"ENSEMBL\",\n                        argList=list(tfidf=FALSE,\n                            normalize=TRUE,\n                            takeMean=TRUE))\n#> Number of clusters: 3\n#> 1\n#> Input genes: 12\n#>   Converted input genes: 12\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> 2\n#> Input genes: 13\n#>   Converted input genes: 13\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> 3\n#> Input genes: 7\n#>   Converted input genes: 7\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\nheatmap(simExample)"},{"path":"including-the-other-databases-an-example-in-metacyc.html","id":"including-the-other-databases-an-example-in-metacyc","chapter":"8 Including the other databases (an example in MetaCyc)","heading":"8 Including the other databases (an example in MetaCyc)","text":"mining pathway information curated database MetaCyc (Caspi et al. 2020), users can prepare pathways.dat MetaCyc flat files. Note must valid license using MetaCyc. See User guides MetaCyc, BioCyc.\nSuppose like know pathway related information “Bifidobacterium longum” “Escherichia coli”. function parseMetaCycPathway can used parse summarized comment pathways using queries. Note function search TAXONOMIC-RANGE SPECIES information pathways.dat withTax=TRUE. resulting data.frame looks like .can strip tags symbols clear=TRUE.data frames can passed wcMan function, performs analysis RefSeq PubMed information. input data frame \"text\" column make word cloud correlation network.plotting network, query column must specified plotting query word information.column query text, example commonName pathwayID, relationship query columns plotted.taxonomy parsing available, query NCBI Taxonomy ID.Also, want search NCBI tax identifiers want use species names queries,\nFirst convert IDs using convertMetaCyc function using taxonomizr.\nNext search converted names interested species, input data frame wcMan.Includes BioCycTM pathway/genome databases license SRI International.","code":"\nlibrary(wcGeneSummary)\nlibrary(ggraph)\n\ncandidateSpecies <- c(\"Bifidobacterium longum\",\"Escherichia coli\")\nfile <- \"../../metacyc/24.5/data/pathways.dat\"\ninput <- parseMetaCycPathway(file, candidateSpecies)\n\nhead(input)\n#>   pathwayID\n#> 1  PWY-7622\n#> 2  PWY-7591\n#> 3  PWY-7613\n#> 4  PWY-7529\n#> 5  PWY-7599\n#> 6  PWY-7536\ntext\n#> 1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |FRAME: D-galactofuransoe| is the five-carbon ring form of |FRAME: D-galactopyranose|. In solution both forms exist in equilibrium with |FRAME: D-galactopyranose| formation favored. Although |FRAME: D-galactopyranose| is ubiquitous in cellular organisms, |FRAME: D-galactofuransoe| is found only in some non-mammalian eukaryotes and in some bacteria including mycobacteria and <i>Escherichia coli<i> (as indicated in the pathway links and <i>E. coli<i> enzyme |FRAME: EG11983-MONOMER|).  |FRAME: UDP-D-GALACTO-14-FURANOSE| is a nucleotide-activated form of |FRAME: D-galactofuransoe| that is used by some organisms in the biosynthesis of polysaccharides and glycoconjugates. Although |FRAME: D-galactofuransoe| residues are not found in mammals, higher plants and yeasts, they are found in the glycans of some bacteria and lower eukaryotes including trypanosomatids, nematodes, the free-living alga |FRAME: TAX-3055| and filamentous fungi. These groups include known pathogens. |FRAME: D-galactofuransoe| residues are antigenic in humans and are therefore of interest as therapeutic targets (|CITS: [24118544]| and reviewed in |CITS: [21940757]|).  <b>About This Pathway<b>  In filamentous fungi |FRAME: UDP-D-GALACTO-14-FURANOSE| is biosynthesized in the cytosol starting with |FRAME: CPD-12575| which is derived from |FRAME: GLC-6-P| as indicated in the pathway link. Following the epimerization of |FRAME: CPD-12575| to |FRAME: CPD-14553|, |FRAME: EC-5.4.99.9| converts |FRAME: CPD-14553| to its five-carbon ring form |FRAME: UDP-D-GALACTO-14-FURANOSE|. The substrate of the mutase, |FRAME: CPD-14553|, may also be formed by the Leloir pathway enzyme |FRAME: EC-2.7.7.12|. In protozoan parasites such as |FRAME: TAX-5664| which appear to lack an ortholog encoding the Leloir pathway enzyme, |FRAME: CPD-14553| can be formed by |FRAME: EC-2.7.7.64| |CITS: [20335578][19906649][21073876]|. The pathway product |FRAME: UDP-D-GALACTO-14-FURANOSE| is then transported from the cytosol to the Golgi lumen for glycoconjugate biosynthesis (reviewed in |CITS: [21940757]|) (see pathway |FRAME: PWY-6317|).   In filamentous fungi galactomannan metabolism has been studied in both the non-pathogenic model organism |FRAME: TAX-162425| and in the opportunistic pathogen |FRAME: TAX-746128|, and relevant orthologs have been identified in these organisms. In |FRAME: TAX-162425| cytosolic UDP-glucose 4-epimerase (synonym UDP-galactose 4-epimerase) is encoded by <i>ugeA<i> |CITS: [20211750]|. In |FRAME: TAX-746128| <i>uge5<i> encodes the dominant cytosolic UDP-glucose 4-epimerase that is essential for growth on |FRAME: D-Galactose| and the synthesis of |FRAME: D-galactofuransoe|. In |FRAME: TAX-746128| a second gene <i>uge3<i> with no identified ortholog in |FRAME: TAX-162425| has also been characterized. Both Uge5 and Uge3 are required for galactosaminogalactan synthesis in |FRAME: TAX-746128| |CITS: [24257745]|. In |FRAME: TAX-162425| cytosolic UDP-galactose mutase is encoded by <i>ugmA<i>, and in |FRAME: TAX-746128| by <i>ugm1<i> (<i>glfA<i>) |CITS: [24257745]|.   |FRAME: UDP-D-GALACTO-14-FURANOSE| is then transported from the cytosol to the Golgi lumen for galactomannoprotein biosynthesis (not shown). In |FRAME: TAX-162425| the UDP-galactofuranose transporter is encoded by <i>ugtA<i> |CITS: [21693196]|, and in |FRAME: TAX-746128| by <i>ugt1<i> (<i>glfB<i>) (|CITS: [24257745]| and reviewed in |CITS: [21940757]|). In both organisms a novel, |FRAME: G-55162|-encoded, Golgi-localized, |FRAME: EC-2.4.1.M27|, has been characterized that is involved in synthesis of the galactofurnaose antigen of <i>O<i>-linked glycans. The <i>O<i>-glycans are then transported in vesicles to the hyphal cell surface |CITS: [24118544]|. \n|FRAME: CPD-17304 \"Okenone\"| is a red carotenoid pigment. Structurally this ketocarotenoid has a &chi;-ring at one end and an open chain &psi;-end that is methoxylated at the C-1' position and contains a keto group at the C-4' position. It is found in some purple sulfur bacterial members of the family |FRAME: TAX-1046|. These photosynthetic organisms reside in illuminated anoxic zones of aquatic habitats. Purple sulfur bacteria are anaerobic or microaerophilic, oxidizing |FRAME: HS| to produce granules of |FRAME: Elemental-Sulfur| (elemental sulfur) (see pathway |FRAME: PWY-5274|). The light absorption properties of |FRAME: CPD-17304| allow these bacteria to exist in deeper water layers. In addition to its role in bacterial ecology, |FRAME: CPD-17304| also becomes an important geochemical biomarker via its diagenesis product |FRAME: CPD-17311|, which is found in ancient rock formations ( |CITS: [BROCKSJJ05]| and in |CITS: [21921032][22070388]|.  |FRAME: TAX-572262| is a purple sulfur bacterium that synthesizes |FRAME: CPD-17304| as its only carotenoid when grown anoxically under chlorophototrophic conditions. A gene cluster encoding the enzymes for |FRAME: CPD-17304| biosynthesis (genes <i>crtE<i>, <i>crtB<i>,  <i>crtI<i>, <i>crtC<i>, <i>crtU<i> and <i>crtY<i> and an unlinked gene <i>crtF<i>) was identified and analyzed. The biosynthetic pathway for |FRAME: CPD-17304| was elucidated based on heterologous expression of recombinant enzymes in carotenoid-producing hosts, followed by carotenoid analysis |CITS: [21921032][22070388]|.  <b>About This Pathway<b>  In this pathway CrtY was shown to catalyze the cyclization of one &psi;-end of |FRAME: CPD1F-114| producing the &beta;-ring of |FRAME: CPD1F-126|. The CrtC hydratase hydrates the double bond of the &psi;-end group of |FRAME: CPD1F-126| producing |FRAME: CPD-11446|. CruO is a unique C-44' ketolase required for |FRAME: CPD-17304| biosynthesis that introduces a keto group at the C-4' position of |FRAME: CPD-11446|. CrtF is an <i>O<i>-methyltransferase that further modifies the &psi;-end group by transfer of a methyl group to the hydroxyl formed by CrtC, producing the methoxy group of |FRAME: CPD-17302|. Finally, the &beta;-ring of |FRAME: CPD-17302| is converted to a &chi;-ring and the molecule is further desaturated by the carotene desaturasemethyltransferase CrtU to produce |FRAME: CPD-17304|. The key enzymes of the pathway are CrtY and CrtU |CITS: [21921032][22070388]|.  In addition, a putative |FRAME: OXYGEN-MOLECULE|-dependent pathway for |FRAME: CPD-17307| biosynthesis involving genes <i>crtC<i>, <i>cruS<i> and <i>crtF<i> was also proposed (not shown), based on the demonstration of these enzymatic functions in <i>Escherichia coli<i>. However, no physiological evidence for the pathway could be found in either |FRAME: TAX-572262| or |FRAME: TAX-244573|. The novel gene <i>cruS<i> was shown to encode a unique 2-ketolase3,4-desaturase that could participate in the hypothetical pathway |CITS: [21921032]|. \neptose sugars, mostly <i>glycero-manno<i>-heptoses, are found in the cell surface polymers of many bacteria. Prior to their incorporation, the heptose residues are activated by attachment to a nucleotide (see pathways |FRAME: PWY0-1241| and |FRAME: PWY-6478|). These activated heptoses can be uniquely modified by enzymes before incorporation into the polymers. In bacterial pathogens heptose derivatives such as 6-deoxyheptoses that are not found in mammals can play an important role in virulence, as demonstrated in |FRAME: TAX-633| |CITS: [18284593]|. Heptose modifying enzymes are therefore of interest as potential drug targets |CITS: [19610666][18284593]|.  The modified heptose |FRAME: CPD-17411| is found in the |FRAME: O-Antigens \"O-antigen\"| of |FRAME: ORG-6272|. The O-antigen along with core oligosaccharide and |FRAME: Lipid-A \"lipid A\"| comprise |FRAME: Lipopolysaccharides \"lipopolysaccharide\"| (LPS), a major component of the outer membrane in Gram-negative bacteria. LPS is one of several virulence factors in |FRAME: TAX-633|. It has been shown that 6-deoxy-D-<i>manno<i>-heptose affects the barrier function of LPS and the overall virulence of |FRAME: ORG-6272| |CITS: [18284593]|.  <b>About This Pathway<b>  DmhA along with its corresponding reductase DmhB catalyze the formation of 6-deoxyheptose, a modified heptose present in the O-antigen of |FRAME: ORG-6272|. In this pathway both DmhA and DmhB utilize and release sugars that are in the D-<i>manno<i> configuration. Unlike |FRAME: PWY-7610| in |FRAME: TAX-197|, no epimerization steps are involved |CITS: [19610666][23689373]|.  Both <i>dmhA<i> and <i>dmhB<i> mutants were analyzed for the composition and structure of their LPS and the virulence-related properties of these mutants and their complemented counterparts were assessed <i>in vitro<i> |CITS: [18284593]|. Recombinant proteins were expressed in <i>Escherichia coli<i>, purified and biochemically characterized |CITS: [19610666]|. \n#> 4  Sialic acids are a family of polyhydroxylated &alpha;-keto acids that contain nine carbon atoms. Most sialic acids are derivatives of |FRAME: N-ACETYLNEURAMINATE|, or |FRAME: CPD-10734| (KDN). |FRAME: N-ACETYLNEURAMINATE| is the most common sialic acid in mammals (see pathway |FRAME: PWY-6138|), while KDN is abundant in lower vertebrates (see pathway |FRAME: PWY-6140|). Their core structures can be modified at the hydroxyl groups, lactonized, or hydroxylated at the acetamido group, generating many derivatives. |FRAME: CPD-262| is a derivative of |FRAME: CMP-N-ACETYL-NEURAMINATE| (see pathway |FRAME: PWY-6144|). Reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|.  Sialic acids are found mainly in vertebrates and a few higher invertebrates (ascidians and echinoderms). These acidic sugars are usually the terminal sugar residue in the glycan chains of vertebrate glycoconjugates (mostly glycoproteins and glycolipids, but also proteoglycans and glycosylphosphatidylinositol anchors). They function in mediating cellular recognition and adhesion events for many important processes such as development, the immune and inflammatory responses, and oncogenesis. Sialic acid occurs rarely in invertebrates. Endogenous sialylation has been shown to occur in |FRAME: TAX-7215|, but details of sialic acid biosynthesis in this organism remain to be determined |CITS: [18568399]|. However, it is possible the sialic acids might be biosynthesized by other eukaryotes in a species andor life cycle-dependent manner. In |CITS: [7841794]| and reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|.  Most bacteria do not biosynthesize sialic acids, but some pathogenic, or symbiotic bacteria biosynthesize sialic acids as a means of evading a host's immune system (this pathway). The sialic acid is displayed on the bacterial cell surface (in capsular polysaccharides) in order to mimic vertebrate cells. Pathogens that biosynthesize sialic acids include |FRAME: TAX-487|, |FRAME: TAX-1392869| and |FRAME: TAX-197|. In addition, the human gut symbiont |FRAME: TAX-818| has been shown to synthesize |FRAME: CPD-10734| |CITS: [18804026]| (see pathway |FRAME: PWY-6140|). Whether or not archaea contain sialic acids remains to be determined (reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|). Other sialic acid-like sugars biosynthesized by bacteria include the nonulosonic acids |FRAME: CPD-10754| |CITS: [16751642]| (see pathway |FRAME: PWY-6143|) and legionaminic acid see pathway class |FRAME: CMP-Legionaminate-Biosynthesis| |CITS: [18275154]|.  Protists are thought to lack the ability to biosynthesize sialic acids although more genome data are needed to confirm this. Sialic acids have been thought to be absent in plants but some studies raise the possibility |CITS: [18258224]|. Fungi appear to lack any known sialic acid biosynthetic pathway, although strain-specific, or novel pathways could exist. Reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|.  Also see |FRAME: PWY-6145|.  <b>About This Pathway<b>  |FRAME: TAX-316275| is a Gram-negative, psychrophilic fish pathogen whose genome sequence has been determined |CITS: [19099551]|. Little is known about its mechanism of virulence. This organism contains three copies of a gene cluster that is homologous to the <i>Escherichia coli<i> <i>neu<i> gene cluster for the synthesis of capsular sialic acids (see |FRAME: PWY-6139|). In |FRAME: TAX-316275| the first copy of the gene cluster, <i>neu1<i>, is also likely involved in sialic acids biosynthesis. The second copy <i>neu2<i>, which is less homologous, is likely involved in the synthesis of alternative compounds such as legionaminate (see pathway class |FRAME: CMP-Legionaminate-Biosynthesis|). The third copy is an exact duplicate of the <i>neu2<i> gene cluster |CITS: [23481098]|.  Data suggest that both |FRAME: N-ACETYLNEURAMINATE| and |FRAME: CPD-1803| (7-<i>O<i>-acetyl-<i>N<i>-acetylneuraminate) are present in this organism and that their synthesis is catalyzed by the sialic acid synthase product of gene <i>neuB1<i> which is present in the <i>neu1<i> gene cluster. Based on genome analysis, enzyme kinetics, and structural analysis, the putative substrate for NeuB1 is  |FRAME: CPD-16880| and its product is |FRAME: CPD-1803|. In addition to |FRAME: TAX-316275|, this gene was also predicted to be present in other species including <i>Escherichia coli<i> and |FRAME: TAX-1311|.   A pathway for the biosynthesis of |FRAME: CPD-1803| has been proposed and is shown here. In addition to the experimentally determined NeuB1, predicted enzymes of the pathway include the <i>O<i>-acetyl transferase NeuD1, the hydrolyzing 2-epimerase NeuC1, and NeuA1 which activates |FRAME: CPD-1803| to a |FRAME: CMP| derivative |CITS: [23481098]|.  \n|FRAME: CPD-17343 \"Anditomin\"| is |FRAME: CPD-17353|. These complex organo-oxygen natural products are produced by fungi from polyketide and terpenoid precursors. They have unique, highly oxygenated structures containing a complex bridged-ring system. The elucidation of the biosynthetic pathway for the meroterpenoid |FRAME: CPD-17343| in |FRAME: TAX-1549217| provides an opportunity for future construction of novel scaffolds for use in drug discovery |CITS: [25216349]|.  <b>About This Pathway<b>  The |FRAME: CPD-17343| biosynthetic gene cluster of |FRAME: TAX-1549217| was identified by bioinformatic analysis and the <i>and<i> gene products were functionally characterized (note that NCBI Taxonomy merged the <i>Emericella variecolor<i> and <i>Aspergillus stellifer<i> entries). The early-stage and late-stage biosynthetic steps were determined by expression of recombinant enzymes in a strain of |FRAME: TAX-5062| followed by analysis of products by HPLC, <sup>1<sup>H NMR, <sup>13<sup>C NMR and mass spectrometry. The mid-stage biosynthetic steps were elucidated using feeding experiments to predict the sequence of tailoring enzymes. In the case of AndA and AndF, recombinant enzyme was expressed in <i>Escherichia coli<i>, purified and characterized |CITS: [25216349]|.  The pathway begins with a polyketide synthase encoded by gene <i>andM<i> that produces |FRAME: CPD-17316| as its final product. AndK is a bifunctional P450 monooxygenase and hydrolase fusion protein that produces the phthalide compound |FRAME: CPD-17317|. AndD is a prenyltransferase that incorporates the farnesyl moiety. AndE is an epoxidase that forms the (<i>S<i>)-epoxide |FRAME: CPD-17325|. The terpene cyclase AndB then forms |FRAME: CPD-17333| |CITS: [25216349]|.   The mid-stage biosynthetic steps include AndA, AndJ and AndI. The nonheme iron-dependent dioxygenase AndA was shown to catalyze two reactions, the dehydrogenation of |FRAME: CPD-17334| to produce the enone |FRAME: CPD-17335| that contains a &Delta;<sup>1,2<sup>-conjugated double bond, and an isomerization involving an unprecedented skeletal rearrangement that results in the bridged-ring of |FRAME: CPD-17336|. This is in contrast to a previously proposed DielsAlder reaction. AndA thus generates the scaffold of the andilesins class of secondary metabolites. AndJ is a |FRAME: FAD|-dependent Baeyer-Villiger monooxygenase that generates a seven-membered lactone ring from |FRAME: CPD-17336|. AndI is a short-chain dehydrogenasereductase (SDR) that appears to reduce |FRAME: CPD-17337| to |FRAME: CPD-17339| |CITS: [25216349]|.   In the late-stage biosynthetic steps acetyltransferase AndG attaches an acetyl group to the hydroxyl group of |FRAME: CPD-17339|. This acetyl group is then lost in a spontaneous reaction. AndH is another SDR reductase that catalyzes reduction of the C-6 double bond of |FRAME: CPD-17341| to produce |FRAME: CPD-17342|. Finally AndF, another nonheme iron-dependent dioxygenase like AndA, oxidizes |FRAME: CPD-17342| to |FRAME: CPD-17343|. Based on the cofactor requirements for the production of both |FRAME: CPD-17336| by AndA and |FRAME: CPD-17343| by AndF, as well as the analogous FtmF reaction (see |FRAME: EC-1.14.11.38|), detailed reaction mechanisms for AndA and AndF were proposed |CITS: [25216349]|. \nhis pathway depicts the biosynthesis of the |FRAME: CPD-16935| moiety of the natural product |FRAME: CPD-16932|. The reaction link shows its amide linkage to the synthetic partial polyenoate scaffold |FRAME: CPD-16939| which was derived from the structure of |FRAME: CPD-16932| |CITS: [20394362]|.  The antifungal agent |FRAME: CPD-16932| is a linear polyketide antibiotic produced by |FRAME: ORG-6265|. In the |FRAME: CPD-16932| biosynthetic gene cluster of this organism three tandem ORFs, ORF33, ORF34 and ORF35 catalyze the formation of the |FRAME: CPD-16935| moiety of |FRAME: CPD-16932|. Other ORFs in the cluster encode a large type I polyketide synthetase |CITS: 15844935|. |FRAME: CPD-16935 \"2-Amino-3-hydroxycyclopent-2-enone\"| (an enol tautomer of |FRAME: CPD-16936|) is a C<sub>5<sub>N unit that is present in many members of the manumycin antibiotic family as well as in other bioactive metabolites. In |FRAME: CPD-16932| the amino group of |FRAME: CPD-16935| is amide-bonded to the polyketide-derived polyenoic acid component, whereas in |FRAME: MOENOMYCIN| it is amide-bonded to |FRAME: Hexuronates| group |CITS: [20394362][15844935][NAKAGAWAA85]|.  <b>About This Pathway<b>  In the first reaction |FRAME: GLY| is condensed with |FRAME: SUC-COA| which produces |FRAME: 5-AMINO-LEVULINATE|, catalyzed by  |FRAME: MONOMER-18786| encoded by ORF34. |FRAME: 5-AMINO-LEVULINATE \"5-Aminolevulinate\"| is also an intermediate in tetrapyrrole biosynthesis in some species of |FRAME: TAX-1883| |CITS: [16816183]| (see pathway |FRAME: PWY-5189|). In the next reaction an |FRAME: ATP|-dependent |FRAME: MONOMER-18787| encoded by ORF35 catalyzes the ligation of |FRAME: 5-AMINO-LEVULINATE| to |FRAME: CO-A| producing |FRAME: CPD-16937|. The latter compound is unstable and can either undergo spontaneous intramolecular cyclization to produce the off-pathway shunt product |FRAME: CPD-16938|, or be converted enzymatically to |FRAME: CPD-16935| by the cyclase activity of the ORF34 product |CITS: [20394362]|.  The reaction link shows a condensation step catalyzed by the |FRAME: MONOMER-18788| product of ORF33 that is proposed to incorporate |FRAME: CPD-16935| into the polyketide chain of |FRAME: CPD-16932| which constitutes the final chain termination step. This reaction was experimentally demonstrated using the synthetic partial polyenoate scaffold |FRAME: CPD-16939| which was derived from the structure of |FRAME: CPD-16932| |CITS: [20394362]|.  Recombinant proteins encoded by ORF33, ORF34 and ORF35 were overexpressed in <i>Escherichia coli<i>, purified and biochemically characterized. In addition, the entire |FRAME: CPD-16935| biosynthetic pathway was reconstituted <i>in vitro<i>. The three enzymes were incubated with |FRAME: MG+2|, |FRAME: ATP|, |FRAME: CO-A|, |FRAME: GLY| and |FRAME: SUC-COA| (or |FRAME: 5-AMINO-LEVULINATE|) and |FRAME: CPD-16939|. The reaction product |FRAME: CPD-16941| was identified by LC-MS. Gel filtration chromatography demonstrated that none of the three enzymes formed complexes, indicating freely diffusible intermediates |CITS: [20394362]|.    \n#>                                                      commonName\n#> 1                    UDP-&alpha;-D-galactofuranose biosynthesis\n#> 2                                          okenone biosynthesis\n#> 3               GDP-6-deoxy-D-<i>manno<\/i>-heptose biosynthesis\n#> 4 CMP-<i>N<\/i>-acetyl-7-<i>O<\/i>-acetylneuraminate biosynthesis\n#> 5                                        anditomin biosynthesis\n#> 6               2-amino-3-hydroxycyclopent-2-enone biosynthesis\n#>              query\n#> 1 Escherichia coli\n#> 2 Escherichia coli\n#> 3 Escherichia coli\n#> 4 Escherichia coli\n#> 5 Escherichia coli\n#> 6 Escherichia coli\n\ninput2 <- parseMetaCycPathway(file, candidateSpecies, withTax=TRUE)\n\nhead(input2)\n#>   pathwayID\n#> 1  PWY-7622\n#> 2  PWY-7591\n#> 3  PWY-7613\n#> 4  PWY-7529\n#> 5  PWY-7599\n#> 6  PWY-7536\ntext\n|FRAME: D-galactofuransoe| is the five-carbon ring form of |FRAME: D-galactopyranose|. In solution both forms exist in equilibrium with |FRAME: D-galactopyranose| formation favored. Although |FRAME: D-galactopyranose| is ubiquitous in cellular organisms, |FRAME: D-galactofuransoe| is found only in some non-mammalian eukaryotes and in some bacteria including mycobacteria and <i>Escherichia coli<i> (as indicated in the pathway links and <i>E. coli<i> enzyme |FRAME: EG11983-MONOMER|).  |FRAME: UDP-D-GALACTO-14-FURANOSE| is a nucleotide-activated form of |FRAME: D-galactofuransoe| that is used by some organisms in the biosynthesis of polysaccharides and glycoconjugates. Although |FRAME: D-galactofuransoe| residues are not found in mammals, higher plants and yeasts, they are found in the glycans of some bacteria and lower eukaryotes including trypanosomatids, nematodes, the free-living alga |FRAME: TAX-3055| and filamentous fungi. These groups include known pathogens. |FRAME: D-galactofuransoe| residues are antigenic in humans and are therefore of interest as therapeutic targets (|CITS: [24118544]| and reviewed in |CITS: [21940757]|).  <b>About This Pathway<b>  In filamentous fungi |FRAME: UDP-D-GALACTO-14-FURANOSE| is biosynthesized in the cytosol starting with |FRAME: CPD-12575| which is derived from |FRAME: GLC-6-P| as indicated in the pathway link. Following the epimerization of |FRAME: CPD-12575| to |FRAME: CPD-14553|, |FRAME: EC-5.4.99.9| converts |FRAME: CPD-14553| to its five-carbon ring form |FRAME: UDP-D-GALACTO-14-FURANOSE|. The substrate of the mutase, |FRAME: CPD-14553|, may also be formed by the Leloir pathway enzyme |FRAME: EC-2.7.7.12|. In protozoan parasites such as |FRAME: TAX-5664| which appear to lack an ortholog encoding the Leloir pathway enzyme, |FRAME: CPD-14553| can be formed by |FRAME: EC-2.7.7.64| |CITS: [20335578][19906649][21073876]|. The pathway product |FRAME: UDP-D-GALACTO-14-FURANOSE| is then transported from the cytosol to the Golgi lumen for glycoconjugate biosynthesis (reviewed in |CITS: [21940757]|) (see pathway |FRAME: PWY-6317|).   In filamentous fungi galactomannan metabolism has been studied in both the non-pathogenic model organism |FRAME: TAX-162425| and in the opportunistic pathogen |FRAME: TAX-746128|, and relevant orthologs have been identified in these organisms. In |FRAME: TAX-162425| cytosolic UDP-glucose 4-epimerase (synonym UDP-galactose 4-epimerase) is encoded by <i>ugeA<i> |CITS: [20211750]|. In |FRAME: TAX-746128| <i>uge5<i> encodes the dominant cytosolic UDP-glucose 4-epimerase that is essential for growth on |FRAME: D-Galactose| and the synthesis of |FRAME: D-galactofuransoe|. In |FRAME: TAX-746128| a second gene <i>uge3<i> with no identified ortholog in |FRAME: TAX-162425| has also been characterized. Both Uge5 and Uge3 are required for galactosaminogalactan synthesis in |FRAME: TAX-746128| |CITS: [24257745]|. In |FRAME: TAX-162425| cytosolic UDP-galactose mutase is encoded by <i>ugmA<i>, and in |FRAME: TAX-746128| by <i>ugm1<i> (<i>glfA<i>) |CITS: [24257745]|.   |FRAME: UDP-D-GALACTO-14-FURANOSE| is then transported from the cytosol to the Golgi lumen for galactomannoprotein biosynthesis (not shown). In |FRAME: TAX-162425| the UDP-galactofuranose transporter is encoded by <i>ugtA<i> |CITS: [21693196]|, and in |FRAME: TAX-746128| by <i>ugt1<i> (<i>glfB<i>) (|CITS: [24257745]| and reviewed in |CITS: [21940757]|). In both organisms a novel, |FRAME: G-55162|-encoded, Golgi-localized, |FRAME: EC-2.4.1.M27|, has been characterized that is involved in synthesis of the galactofurnaose antigen of <i>O<i>-linked glycans. The <i>O<i>-glycans are then transported in vesicles to the hyphal cell surface |CITS: [24118544]|. \n|FRAME: CPD-17304 \"Okenone\"| is a red carotenoid pigment. Structurally this ketocarotenoid has a &chi;-ring at one end and an open chain &psi;-end that is methoxylated at the C-1' position and contains a keto group at the C-4' position. It is found in some purple sulfur bacterial members of the family |FRAME: TAX-1046|. These photosynthetic organisms reside in illuminated anoxic zones of aquatic habitats. Purple sulfur bacteria are anaerobic or microaerophilic, oxidizing |FRAME: HS| to produce granules of |FRAME: Elemental-Sulfur| (elemental sulfur) (see pathway |FRAME: PWY-5274|). The light absorption properties of |FRAME: CPD-17304| allow these bacteria to exist in deeper water layers. In addition to its role in bacterial ecology, |FRAME: CPD-17304| also becomes an important geochemical biomarker via its diagenesis product |FRAME: CPD-17311|, which is found in ancient rock formations ( |CITS: [BROCKSJJ05]| and in |CITS: [21921032][22070388]|.  |FRAME: TAX-572262| is a purple sulfur bacterium that synthesizes |FRAME: CPD-17304| as its only carotenoid when grown anoxically under chlorophototrophic conditions. A gene cluster encoding the enzymes for |FRAME: CPD-17304| biosynthesis (genes <i>crtE<i>, <i>crtB<i>,  <i>crtI<i>, <i>crtC<i>, <i>crtU<i> and <i>crtY<i> and an unlinked gene <i>crtF<i>) was identified and analyzed. The biosynthetic pathway for |FRAME: CPD-17304| was elucidated based on heterologous expression of recombinant enzymes in carotenoid-producing hosts, followed by carotenoid analysis |CITS: [21921032][22070388]|.  <b>About This Pathway<b>  In this pathway CrtY was shown to catalyze the cyclization of one &psi;-end of |FRAME: CPD1F-114| producing the &beta;-ring of |FRAME: CPD1F-126|. The CrtC hydratase hydrates the double bond of the &psi;-end group of |FRAME: CPD1F-126| producing |FRAME: CPD-11446|. CruO is a unique C-44' ketolase required for |FRAME: CPD-17304| biosynthesis that introduces a keto group at the C-4' position of |FRAME: CPD-11446|. CrtF is an <i>O<i>-methyltransferase that further modifies the &psi;-end group by transfer of a methyl group to the hydroxyl formed by CrtC, producing the methoxy group of |FRAME: CPD-17302|. Finally, the &beta;-ring of |FRAME: CPD-17302| is converted to a &chi;-ring and the molecule is further desaturated by the carotene desaturasemethyltransferase CrtU to produce |FRAME: CPD-17304|. The key enzymes of the pathway are CrtY and CrtU |CITS: [21921032][22070388]|.  In addition, a putative |FRAME: OXYGEN-MOLECULE|-dependent pathway for |FRAME: CPD-17307| biosynthesis involving genes <i>crtC<i>, <i>cruS<i> and <i>crtF<i> was also proposed (not shown), based on the demonstration of these enzymatic functions in <i>Escherichia coli<i>. However, no physiological evidence for the pathway could be found in either |FRAME: TAX-572262| or |FRAME: TAX-244573|. The novel gene <i>cruS<i> was shown to encode a unique 2-ketolase3,4-desaturase that could participate in the hypothetical pathway |CITS: [21921032]|. \n#> 3                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   Heptose sugars, mostly <i>glycero-manno<i>-heptoses, are found in the cell surface polymers of many bacteria. Prior to their incorporation, the heptose residues are activated by attachment to a nucleotide (see pathways |FRAME: PWY0-1241| and |FRAME: PWY-6478|). These activated heptoses can be uniquely modified by enzymes before incorporation into the polymers. In bacterial pathogens heptose derivatives such as 6-deoxyheptoses that are not found in mammals can play an important role in virulence, as demonstrated in |FRAME: TAX-633| |CITS: [18284593]|. Heptose modifying enzymes are therefore of interest as potential drug targets |CITS: [19610666][18284593]|.  The modified heptose |FRAME: CPD-17411| is found in the |FRAME: O-Antigens \"O-antigen\"| of |FRAME: ORG-6272|. The O-antigen along with core oligosaccharide and |FRAME: Lipid-A \"lipid A\"| comprise |FRAME: Lipopolysaccharides \"lipopolysaccharide\"| (LPS), a major component of the outer membrane in Gram-negative bacteria. LPS is one of several virulence factors in |FRAME: TAX-633|. It has been shown that 6-deoxy-D-<i>manno<i>-heptose affects the barrier function of LPS and the overall virulence of |FRAME: ORG-6272| |CITS: [18284593]|.  <b>About This Pathway<b>  DmhA along with its corresponding reductase DmhB catalyze the formation of 6-deoxyheptose, a modified heptose present in the O-antigen of |FRAME: ORG-6272|. In this pathway both DmhA and DmhB utilize and release sugars that are in the D-<i>manno<i> configuration. Unlike |FRAME: PWY-7610| in |FRAME: TAX-197|, no epimerization steps are involved |CITS: [19610666][23689373]|.  Both <i>dmhA<i> and <i>dmhB<i> mutants were analyzed for the composition and structure of their LPS and the virulence-related properties of these mutants and their complemented counterparts were assessed <i>in vitro<i> |CITS: [18284593]|. Recombinant proteins were expressed in <i>Escherichia coli<i>, purified and biochemically characterized |CITS: [19610666]|. \n#> 4  Sialic acids are a family of polyhydroxylated &alpha;-keto acids that contain nine carbon atoms. Most sialic acids are derivatives of |FRAME: N-ACETYLNEURAMINATE|, or |FRAME: CPD-10734| (KDN). |FRAME: N-ACETYLNEURAMINATE| is the most common sialic acid in mammals (see pathway |FRAME: PWY-6138|), while KDN is abundant in lower vertebrates (see pathway |FRAME: PWY-6140|). Their core structures can be modified at the hydroxyl groups, lactonized, or hydroxylated at the acetamido group, generating many derivatives. |FRAME: CPD-262| is a derivative of |FRAME: CMP-N-ACETYL-NEURAMINATE| (see pathway |FRAME: PWY-6144|). Reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|.  Sialic acids are found mainly in vertebrates and a few higher invertebrates (ascidians and echinoderms). These acidic sugars are usually the terminal sugar residue in the glycan chains of vertebrate glycoconjugates (mostly glycoproteins and glycolipids, but also proteoglycans and glycosylphosphatidylinositol anchors). They function in mediating cellular recognition and adhesion events for many important processes such as development, the immune and inflammatory responses, and oncogenesis. Sialic acid occurs rarely in invertebrates. Endogenous sialylation has been shown to occur in |FRAME: TAX-7215|, but details of sialic acid biosynthesis in this organism remain to be determined |CITS: [18568399]|. However, it is possible the sialic acids might be biosynthesized by other eukaryotes in a species andor life cycle-dependent manner. In |CITS: [7841794]| and reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|.  Most bacteria do not biosynthesize sialic acids, but some pathogenic, or symbiotic bacteria biosynthesize sialic acids as a means of evading a host's immune system (this pathway). The sialic acid is displayed on the bacterial cell surface (in capsular polysaccharides) in order to mimic vertebrate cells. Pathogens that biosynthesize sialic acids include |FRAME: TAX-487|, |FRAME: TAX-1392869| and |FRAME: TAX-197|. In addition, the human gut symbiont |FRAME: TAX-818| has been shown to synthesize |FRAME: CPD-10734| |CITS: [18804026]| (see pathway |FRAME: PWY-6140|). Whether or not archaea contain sialic acids remains to be determined (reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|). Other sialic acid-like sugars biosynthesized by bacteria include the nonulosonic acids |FRAME: CPD-10754| |CITS: [16751642]| (see pathway |FRAME: PWY-6143|) and legionaminic acid see pathway class |FRAME: CMP-Legionaminate-Biosynthesis| |CITS: [18275154]|.  Protists are thought to lack the ability to biosynthesize sialic acids although more genome data are needed to confirm this. Sialic acids have been thought to be absent in plants but some studies raise the possibility |CITS: [18258224]|. Fungi appear to lack any known sialic acid biosynthetic pathway, although strain-specific, or novel pathways could exist. Reviewed in |CITS: [15888312] [16897172] [18568399]| and |CITS: [11841250]|.  Also see |FRAME: PWY-6145|.  <b>About This Pathway<b>  |FRAME: TAX-316275| is a Gram-negative, psychrophilic fish pathogen whose genome sequence has been determined |CITS: [19099551]|. Little is known about its mechanism of virulence. This organism contains three copies of a gene cluster that is homologous to the <i>Escherichia coli<i> <i>neu<i> gene cluster for the synthesis of capsular sialic acids (see |FRAME: PWY-6139|). In |FRAME: TAX-316275| the first copy of the gene cluster, <i>neu1<i>, is also likely involved in sialic acids biosynthesis. The second copy <i>neu2<i>, which is less homologous, is likely involved in the synthesis of alternative compounds such as legionaminate (see pathway class |FRAME: CMP-Legionaminate-Biosynthesis|). The third copy is an exact duplicate of the <i>neu2<i> gene cluster |CITS: [23481098]|.  Data suggest that both |FRAME: N-ACETYLNEURAMINATE| and |FRAME: CPD-1803| (7-<i>O<i>-acetyl-<i>N<i>-acetylneuraminate) are present in this organism and that their synthesis is catalyzed by the sialic acid synthase product of gene <i>neuB1<i> which is present in the <i>neu1<i> gene cluster. Based on genome analysis, enzyme kinetics, and structural analysis, the putative substrate for NeuB1 is  |FRAME: CPD-16880| and its product is |FRAME: CPD-1803|. In addition to |FRAME: TAX-316275|, this gene was also predicted to be present in other species including <i>Escherichia coli<i> and |FRAME: TAX-1311|.   A pathway for the biosynthesis of |FRAME: CPD-1803| has been proposed and is shown here. In addition to the experimentally determined NeuB1, predicted enzymes of the pathway include the <i>O<i>-acetyl transferase NeuD1, the hydrolyzing 2-epimerase NeuC1, and NeuA1 which activates |FRAME: CPD-1803| to a |FRAME: CMP| derivative |CITS: [23481098]|.  \n|FRAME: CPD-17343 \"Anditomin\"| is |FRAME: CPD-17353|. These complex organo-oxygen natural products are produced by fungi from polyketide and terpenoid precursors. They have unique, highly oxygenated structures containing a complex bridged-ring system. The elucidation of the biosynthetic pathway for the meroterpenoid |FRAME: CPD-17343| in |FRAME: TAX-1549217| provides an opportunity for future construction of novel scaffolds for use in drug discovery |CITS: [25216349]|.  <b>About This Pathway<b>  The |FRAME: CPD-17343| biosynthetic gene cluster of |FRAME: TAX-1549217| was identified by bioinformatic analysis and the <i>and<i> gene products were functionally characterized (note that NCBI Taxonomy merged the <i>Emericella variecolor<i> and <i>Aspergillus stellifer<i> entries). The early-stage and late-stage biosynthetic steps were determined by expression of recombinant enzymes in a strain of |FRAME: TAX-5062| followed by analysis of products by HPLC, <sup>1<sup>H NMR, <sup>13<sup>C NMR and mass spectrometry. The mid-stage biosynthetic steps were elucidated using feeding experiments to predict the sequence of tailoring enzymes. In the case of AndA and AndF, recombinant enzyme was expressed in <i>Escherichia coli<i>, purified and characterized |CITS: [25216349]|.  The pathway begins with a polyketide synthase encoded by gene <i>andM<i> that produces |FRAME: CPD-17316| as its final product. AndK is a bifunctional P450 monooxygenase and hydrolase fusion protein that produces the phthalide compound |FRAME: CPD-17317|. AndD is a prenyltransferase that incorporates the farnesyl moiety. AndE is an epoxidase that forms the (<i>S<i>)-epoxide |FRAME: CPD-17325|. The terpene cyclase AndB then forms |FRAME: CPD-17333| |CITS: [25216349]|.   The mid-stage biosynthetic steps include AndA, AndJ and AndI. The nonheme iron-dependent dioxygenase AndA was shown to catalyze two reactions, the dehydrogenation of |FRAME: CPD-17334| to produce the enone |FRAME: CPD-17335| that contains a &Delta;<sup>1,2<sup>-conjugated double bond, and an isomerization involving an unprecedented skeletal rearrangement that results in the bridged-ring of |FRAME: CPD-17336|. This is in contrast to a previously proposed DielsAlder reaction. AndA thus generates the scaffold of the andilesins class of secondary metabolites. AndJ is a |FRAME: FAD|-dependent Baeyer-Villiger monooxygenase that generates a seven-membered lactone ring from |FRAME: CPD-17336|. AndI is a short-chain dehydrogenasereductase (SDR) that appears to reduce |FRAME: CPD-17337| to |FRAME: CPD-17339| |CITS: [25216349]|.   In the late-stage biosynthetic steps acetyltransferase AndG attaches an acetyl group to the hydroxyl group of |FRAME: CPD-17339|. This acetyl group is then lost in a spontaneous reaction. AndH is another SDR reductase that catalyzes reduction of the C-6 double bond of |FRAME: CPD-17341| to produce |FRAME: CPD-17342|. Finally AndF, another nonheme iron-dependent dioxygenase like AndA, oxidizes |FRAME: CPD-17342| to |FRAME: CPD-17343|. Based on the cofactor requirements for the production of both |FRAME: CPD-17336| by AndA and |FRAME: CPD-17343| by AndF, as well as the analogous FtmF reaction (see |FRAME: EC-1.14.11.38|), detailed reaction mechanisms for AndA and AndF were proposed |CITS: [25216349]|. \nhis pathway depicts the biosynthesis of the |FRAME: CPD-16935| moiety of the natural product |FRAME: CPD-16932|. The reaction link shows its amide linkage to the synthetic partial polyenoate scaffold |FRAME: CPD-16939| which was derived from the structure of |FRAME: CPD-16932| |CITS: [20394362]|.  The antifungal agent |FRAME: CPD-16932| is a linear polyketide antibiotic produced by |FRAME: ORG-6265|. In the |FRAME: CPD-16932| biosynthetic gene cluster of this organism three tandem ORFs, ORF33, ORF34 and ORF35 catalyze the formation of the |FRAME: CPD-16935| moiety of |FRAME: CPD-16932|. Other ORFs in the cluster encode a large type I polyketide synthetase |CITS: 15844935|. |FRAME: CPD-16935 \"2-Amino-3-hydroxycyclopent-2-enone\"| (an enol tautomer of |FRAME: CPD-16936|) is a C<sub>5<sub>N unit that is present in many members of the manumycin antibiotic family as well as in other bioactive metabolites. In |FRAME: CPD-16932| the amino group of |FRAME: CPD-16935| is amide-bonded to the polyketide-derived polyenoic acid component, whereas in |FRAME: MOENOMYCIN| it is amide-bonded to |FRAME: Hexuronates| group |CITS: [20394362][15844935][NAKAGAWAA85]|.  <b>About This Pathway<b>  In the first reaction |FRAME: GLY| is condensed with |FRAME: SUC-COA| which produces |FRAME: 5-AMINO-LEVULINATE|, catalyzed by  |FRAME: MONOMER-18786| encoded by ORF34. |FRAME: 5-AMINO-LEVULINATE \"5-Aminolevulinate\"| is also an intermediate in tetrapyrrole biosynthesis in some species of |FRAME: TAX-1883| |CITS: [16816183]| (see pathway |FRAME: PWY-5189|). In the next reaction an |FRAME: ATP|-dependent |FRAME: MONOMER-18787| encoded by ORF35 catalyzes the ligation of |FRAME: 5-AMINO-LEVULINATE| to |FRAME: CO-A| producing |FRAME: CPD-16937|. The latter compound is unstable and can either undergo spontaneous intramolecular cyclization to produce the off-pathway shunt product |FRAME: CPD-16938|, or be converted enzymatically to |FRAME: CPD-16935| by the cyclase activity of the ORF34 product |CITS: [20394362]|.  The reaction link shows a condensation step catalyzed by the |FRAME: MONOMER-18788| product of ORF33 that is proposed to incorporate |FRAME: CPD-16935| into the polyketide chain of |FRAME: CPD-16932| which constitutes the final chain termination step. This reaction was experimentally demonstrated using the synthetic partial polyenoate scaffold |FRAME: CPD-16939| which was derived from the structure of |FRAME: CPD-16932| |CITS: [20394362]|.  Recombinant proteins encoded by ORF33, ORF34 and ORF35 were overexpressed in <i>Escherichia coli<i>, purified and biochemically characterized. In addition, the entire |FRAME: CPD-16935| biosynthetic pathway was reconstituted <i>in vitro<i>. The three enzymes were incubated with |FRAME: MG+2|, |FRAME: ATP|, |FRAME: CO-A|, |FRAME: GLY| and |FRAME: SUC-COA| (or |FRAME: 5-AMINO-LEVULINATE|) and |FRAME: CPD-16939|. The reaction product |FRAME: CPD-16941| was identified by LC-MS. Gel filtration chromatography demonstrated that none of the three enzymes formed complexes, indicating freely diffusible intermediates |CITS: [20394362]|.    \n#>                                                      commonName\n#> 1                    UDP-&alpha;-D-galactofuranose biosynthesis\n#> 2                                          okenone biosynthesis\n#> 3               GDP-6-deoxy-D-<i>manno<\/i>-heptose biosynthesis\n#> 4 CMP-<i>N<\/i>-acetyl-7-<i>O<\/i>-acetylneuraminate biosynthesis\n#> 5                                        anditomin biosynthesis\n#> 6               2-amino-3-hydroxycyclopent-2-enone biosynthesis\n#>                            species\n#> 1 TAX-746128,TAX-330879,TAX-162425\n#> 2  TAX-572262,TAX-37487,TAX-244573\n#> 3                         ORG-6272\n#> 4                       TAX-316275\n#> 5                      TAX-1549217\n#> 6                         ORG-6265\n#>                                taxonomicRange\n#> 1 TAX-6231,TAX-3052,TAX-147538,TAX-5654,TAX-2\n#> 2                                    TAX-1046\n#> 3                                       TAX-2\n#> 4                                       TAX-2\n#> 5                                    TAX-4751\n#> 6                                  TAX-201174\n#>              query\n#> 1 Escherichia coli\n#> 2 Escherichia coli\n#> 3 Escherichia coli\n#> 4 Escherichia coli\n#> 5 Escherichia coli\n#> 6 Escherichia coli\ninput3 <- parseMetaCycPathway(file, candidateSpecies, withTax=TRUE, clear=TRUE)\nhead(input3)\n#>   pathwayID\n#> 1  PWY-7622\n#> 2  PWY-7591\n#> 3  PWY-7613\n#> 4  PWY-7529\n#> 5  PWY-7599\n#> 6  PWY-7536\ntext\ngalactofuransoe is the five-carbon ring form of D-galactopyranose. In solution both forms exist in equilibrium with D-galactopyranose formation favored. Although D-galactopyranose is ubiquitous in cellular organisms, D-galactofuransoe is found only in some non-mammalian eukaryotes and in some bacteria including mycobacteria and Escherichia coli (as indicated in the pathway links and E. coli enzyme EG11983-MONOMER).  UDP-D-GALACTO-14-FURANOSE is a nucleotide-activated form of D-galactofuransoe that is used by some organisms in the biosynthesis of polysaccharides and glycoconjugates. Although D-galactofuransoe residues are not found in mammals, higher plants and yeasts, they are found in the glycans of some bacteria and lower eukaryotes including trypanosomatids, nematodes, the free-living alga TAX-3055 and filamentous fungi. These groups include known pathogens. D-galactofuransoe residues are antigenic in humans and are therefore of interest as therapeutic targets ( and reviewed in ).  About This Pathway  In filamentous fungi UDP-D-GALACTO-14-FURANOSE is biosynthesized in the cytosol starting with CPD-12575 which is derived from GLC-6-P as indicated in the pathway link. Following the epimerization of CPD-12575 to CPD-14553, EC-5.4.99.9 converts CPD-14553 to its five-carbon ring form UDP-D-GALACTO-14-FURANOSE. The substrate of the mutase, CPD-14553, may also be formed by the Leloir pathway enzyme EC-2.7.7.12. In protozoan parasites such as TAX-5664 which appear to lack an ortholog encoding the Leloir pathway enzyme, CPD-14553 can be formed by EC-2.7.7.64 . The pathway product UDP-D-GALACTO-14-FURANOSE is then transported from the cytosol to the Golgi lumen for glycoconjugate biosynthesis (reviewed in ) (see pathway PWY-6317).   In filamentous fungi galactomannan metabolism has been studied in both the non-pathogenic model organism TAX-162425 and in the opportunistic pathogen TAX-746128, and relevant orthologs have been identified in these organisms. In TAX-162425 cytosolic UDP-glucose 4-epimerase (synonym UDP-galactose 4-epimerase) is encoded by ugeA . In TAX-746128 uge5 encodes the dominant cytosolic UDP-glucose 4-epimerase that is essential for growth on D-Galactose and the synthesis of D-galactofuransoe. In TAX-746128 a second gene uge3 with no identified ortholog in TAX-162425 has also been characterized. Both Uge5 and Uge3 are required for galactosaminogalactan synthesis in TAX-746128 . In TAX-162425 cytosolic UDP-galactose mutase is encoded by ugmA, and in TAX-746128 by ugm1 (glfA) .   UDP-D-GALACTO-14-FURANOSE is then transported from the cytosol to the Golgi lumen for galactomannoprotein biosynthesis (not shown). In TAX-162425 the UDP-galactofuranose transporter is encoded by ugtA , and in TAX-746128 by ugt1 (glfB) ( and reviewed in ). In both organisms a novel, G-55162-encoded, Golgi-localized, EC-2.4.1.M27, has been characterized that is involved in synthesis of the galactofurnaose antigen of O-linked glycans. The O-glycans are then transported in vesicles to the hyphal cell surface . \nkenone is a red carotenoid pigment. Structurally this ketocarotenoid has a &chi;-ring at one end and an open chain &psi;-end that is methoxylated at the C-1' position and contains a keto group at the C-4' position. It is found in some purple sulfur bacterial members of the family TAX-1046. These photosynthetic organisms reside in illuminated anoxic zones of aquatic habitats. Purple sulfur bacteria are anaerobic or microaerophilic, oxidizing HS to produce granules of Elemental-Sulfur (elemental sulfur) (see pathway PWY-5274). The light absorption properties of CPD-17304 allow these bacteria to exist in deeper water layers. In addition to its role in bacterial ecology, CPD-17304 also becomes an important geochemical biomarker via its diagenesis product CPD-17311, which is found in ancient rock formations (  and in .  TAX-572262 is a purple sulfur bacterium that synthesizes CPD-17304 as its only carotenoid when grown anoxically under chlorophototrophic conditions. A gene cluster encoding the enzymes for CPD-17304 biosynthesis (genes crtE, crtB,  crtI, crtC, crtU and crtY and an unlinked gene crtF) was identified and analyzed. The biosynthetic pathway for CPD-17304 was elucidated based on heterologous expression of recombinant enzymes in carotenoid-producing hosts, followed by carotenoid analysis .  About This Pathway  In this pathway CrtY was shown to catalyze the cyclization of one &psi;-end of CPD1F-114 producing the &beta;-ring of CPD1F-126. The CrtC hydratase hydrates the double bond of the &psi;-end group of CPD1F-126 producing CPD-11446. CruO is a unique C-44' ketolase required for CPD-17304 biosynthesis that introduces a keto group at the C-4' position of CPD-11446. CrtF is an O-methyltransferase that further modifies the &psi;-end group by transfer of a methyl group to the hydroxyl formed by CrtC, producing the methoxy group of CPD-17302. Finally, the &beta;-ring of CPD-17302 is converted to a &chi;-ring and the molecule is further desaturated by the carotene desaturasemethyltransferase CrtU to produce CPD-17304. The key enzymes of the pathway are CrtY and CrtU .  In addition, a putative OXYGEN-MOLECULE-dependent pathway for CPD-17307 biosynthesis involving genes crtC, cruS and crtF was also proposed (not shown), based on the demonstration of these enzymatic functions in Escherichia coli. However, no physiological evidence for the pathway could be found in either TAX-572262 or TAX-244573. The novel gene cruS was shown to encode a unique 2-ketolase3,4-desaturase that could participate in the hypothetical pathway . \neptose sugars, mostly glycero-manno-heptoses, are found in the cell surface polymers of many bacteria. Prior to their incorporation, the heptose residues are activated by attachment to a nucleotide (see pathways PWY0-1241 and PWY-6478). These activated heptoses can be uniquely modified by enzymes before incorporation into the polymers. In bacterial pathogens heptose derivatives such as 6-deoxyheptoses that are not found in mammals can play an important role in virulence, as demonstrated in TAX-633 . Heptose modifying enzymes are therefore of interest as potential drug targets .  The modified heptose CPD-17411 is found in the O-Antigens O-antigen of ORG-6272. The O-antigen along with core oligosaccharide and Lipid-A lipid A comprise Lipopolysaccharides lipopolysaccharide (LPS), a major component of the outer membrane in Gram-negative bacteria. LPS is one of several virulence factors in TAX-633. It has been shown that 6-deoxy-D-manno-heptose affects the barrier function of LPS and the overall virulence of ORG-6272 .  About This Pathway  DmhA along with its corresponding reductase DmhB catalyze the formation of 6-deoxyheptose, a modified heptose present in the O-antigen of ORG-6272. In this pathway both DmhA and DmhB utilize and release sugars that are in the D-manno configuration. Unlike PWY-7610 in TAX-197, no epimerization steps are involved .  Both dmhA and dmhB mutants were analyzed for the composition and structure of their LPS and the virulence-related properties of these mutants and their complemented counterparts were assessed in vitro . Recombinant proteins were expressed in Escherichia coli, purified and biochemically characterized . \n#> 4  Sialic acids are a family of polyhydroxylated &alpha;-keto acids that contain nine carbon atoms. Most sialic acids are derivatives of N-ACETYLNEURAMINATE, or CPD-10734 (KDN). N-ACETYLNEURAMINATE is the most common sialic acid in mammals (see pathway PWY-6138), while KDN is abundant in lower vertebrates (see pathway PWY-6140). Their core structures can be modified at the hydroxyl groups, lactonized, or hydroxylated at the acetamido group, generating many derivatives. CPD-262 is a derivative of CMP-N-ACETYL-NEURAMINATE (see pathway PWY-6144). Reviewed in    and .  Sialic acids are found mainly in vertebrates and a few higher invertebrates (ascidians and echinoderms). These acidic sugars are usually the terminal sugar residue in the glycan chains of vertebrate glycoconjugates (mostly glycoproteins and glycolipids, but also proteoglycans and glycosylphosphatidylinositol anchors). They function in mediating cellular recognition and adhesion events for many important processes such as development, the immune and inflammatory responses, and oncogenesis. Sialic acid occurs rarely in invertebrates. Endogenous sialylation has been shown to occur in TAX-7215, but details of sialic acid biosynthesis in this organism remain to be determined . However, it is possible the sialic acids might be biosynthesized by other eukaryotes in a species andor life cycle-dependent manner. In  and reviewed in    and .  Most bacteria do not biosynthesize sialic acids, but some pathogenic, or symbiotic bacteria biosynthesize sialic acids as a means of evading a host's immune system (this pathway). The sialic acid is displayed on the bacterial cell surface (in capsular polysaccharides) in order to mimic vertebrate cells. Pathogens that biosynthesize sialic acids include TAX-487, TAX-1392869 and TAX-197. In addition, the human gut symbiont TAX-818 has been shown to synthesize CPD-10734  (see pathway PWY-6140). Whether or not archaea contain sialic acids remains to be determined (reviewed in    and ). Other sialic acid-like sugars biosynthesized by bacteria include the nonulosonic acids CPD-10754  (see pathway PWY-6143) and legionaminic acid see pathway class CMP-Legionaminate-Biosynthesis .  Protists are thought to lack the ability to biosynthesize sialic acids although more genome data are needed to confirm this. Sialic acids have been thought to be absent in plants but some studies raise the possibility . Fungi appear to lack any known sialic acid biosynthetic pathway, although strain-specific, or novel pathways could exist. Reviewed in    and .  Also see PWY-6145.  About This Pathway  TAX-316275 is a Gram-negative, psychrophilic fish pathogen whose genome sequence has been determined . Little is known about its mechanism of virulence. This organism contains three copies of a gene cluster that is homologous to the Escherichia coli neu gene cluster for the synthesis of capsular sialic acids (see PWY-6139). In TAX-316275 the first copy of the gene cluster, neu1, is also likely involved in sialic acids biosynthesis. The second copy neu2, which is less homologous, is likely involved in the synthesis of alternative compounds such as legionaminate (see pathway class CMP-Legionaminate-Biosynthesis). The third copy is an exact duplicate of the neu2 gene cluster .  Data suggest that both N-ACETYLNEURAMINATE and CPD-1803 (7-O-acetyl-N-acetylneuraminate) are present in this organism and that their synthesis is catalyzed by the sialic acid synthase product of gene neuB1 which is present in the neu1 gene cluster. Based on genome analysis, enzyme kinetics, and structural analysis, the putative substrate for NeuB1 is  CPD-16880 and its product is CPD-1803. In addition to TAX-316275, this gene was also predicted to be present in other species including Escherichia coli and TAX-1311.   A pathway for the biosynthesis of CPD-1803 has been proposed and is shown here. In addition to the experimentally determined NeuB1, predicted enzymes of the pathway include the O-acetyl transferase NeuD1, the hydrolyzing 2-epimerase NeuC1, and NeuA1 which activates CPD-1803 to a CMP derivative .  \nnditomin is CPD-17353. These complex organo-oxygen natural products are produced by fungi from polyketide and terpenoid precursors. They have unique, highly oxygenated structures containing a complex bridged-ring system. The elucidation of the biosynthetic pathway for the meroterpenoid CPD-17343 in TAX-1549217 provides an opportunity for future construction of novel scaffolds for use in drug discovery .  About This Pathway  The CPD-17343 biosynthetic gene cluster of TAX-1549217 was identified by bioinformatic analysis and the and gene products were functionally characterized (note that NCBI Taxonomy merged the Emericella variecolor and Aspergillus stellifer entries). The early-stage and late-stage biosynthetic steps were determined by expression of recombinant enzymes in a strain of TAX-5062 followed by analysis of products by HPLC, 1H NMR, 13C NMR and mass spectrometry. The mid-stage biosynthetic steps were elucidated using feeding experiments to predict the sequence of tailoring enzymes. In the case of AndA and AndF, recombinant enzyme was expressed in Escherichia coli, purified and characterized .  The pathway begins with a polyketide synthase encoded by gene andM that produces CPD-17316 as its final product. AndK is a bifunctional P450 monooxygenase and hydrolase fusion protein that produces the phthalide compound CPD-17317. AndD is a prenyltransferase that incorporates the farnesyl moiety. AndE is an epoxidase that forms the (S)-epoxide CPD-17325. The terpene cyclase AndB then forms CPD-17333 .   The mid-stage biosynthetic steps include AndA, AndJ and AndI. The nonheme iron-dependent dioxygenase AndA was shown to catalyze two reactions, the dehydrogenation of CPD-17334 to produce the enone CPD-17335 that contains a &Delta;1,2-conjugated double bond, and an isomerization involving an unprecedented skeletal rearrangement that results in the bridged-ring of CPD-17336. This is in contrast to a previously proposed DielsAlder reaction. AndA thus generates the scaffold of the andilesins class of secondary metabolites. AndJ is a FAD-dependent Baeyer-Villiger monooxygenase that generates a seven-membered lactone ring from CPD-17336. AndI is a short-chain dehydrogenasereductase (SDR) that appears to reduce CPD-17337 to CPD-17339 .   In the late-stage biosynthetic steps acetyltransferase AndG attaches an acetyl group to the hydroxyl group of CPD-17339. This acetyl group is then lost in a spontaneous reaction. AndH is another SDR reductase that catalyzes reduction of the C-6 double bond of CPD-17341 to produce CPD-17342. Finally AndF, another nonheme iron-dependent dioxygenase like AndA, oxidizes CPD-17342 to CPD-17343. Based on the cofactor requirements for the production of both CPD-17336 by AndA and CPD-17343 by AndF, as well as the analogous FtmF reaction (see EC-1.14.11.38), detailed reaction mechanisms for AndA and AndF were proposed . \nhis pathway depicts the biosynthesis of the CPD-16935 moiety of the natural product CPD-16932. The reaction link shows its amide linkage to the synthetic partial polyenoate scaffold CPD-16939 which was derived from the structure of CPD-16932 .  The antifungal agent CPD-16932 is a linear polyketide antibiotic produced by ORG-6265. In the CPD-16932 biosynthetic gene cluster of this organism three tandem ORFs, ORF33, ORF34 and ORF35 catalyze the formation of the CPD-16935 moiety of CPD-16932. Other ORFs in the cluster encode a large type I polyketide synthetase 15844935. CPD-16935 2-Amino-3-hydroxycyclopent-2-enone (an enol tautomer of CPD-16936) is a C5N unit that is present in many members of the manumycin antibiotic family as well as in other bioactive metabolites. In CPD-16932 the amino group of CPD-16935 is amide-bonded to the polyketide-derived polyenoic acid component, whereas in MOENOMYCIN it is amide-bonded to Hexuronates group .  About This Pathway  In the first reaction GLY is condensed with SUC-COA which produces 5-AMINO-LEVULINATE, catalyzed by  MONOMER-18786 encoded by ORF34. 5-AMINO-LEVULINATE 5-Aminolevulinate is also an intermediate in tetrapyrrole biosynthesis in some species of TAX-1883  (see pathway PWY-5189). In the next reaction an ATP-dependent MONOMER-18787 encoded by ORF35 catalyzes the ligation of 5-AMINO-LEVULINATE to CO-A producing CPD-16937. The latter compound is unstable and can either undergo spontaneous intramolecular cyclization to produce the off-pathway shunt product CPD-16938, or be converted enzymatically to CPD-16935 by the cyclase activity of the ORF34 product .  The reaction link shows a condensation step catalyzed by the MONOMER-18788 product of ORF33 that is proposed to incorporate CPD-16935 into the polyketide chain of CPD-16932 which constitutes the final chain termination step. This reaction was experimentally demonstrated using the synthetic partial polyenoate scaffold CPD-16939 which was derived from the structure of CPD-16932 .  Recombinant proteins encoded by ORF33, ORF34 and ORF35 were overexpressed in Escherichia coli, purified and biochemically characterized. In addition, the entire CPD-16935 biosynthetic pathway was reconstituted in vitro. The three enzymes were incubated with MG+2, ATP, CO-A, GLY and SUC-COA (or 5-AMINO-LEVULINATE) and CPD-16939. The reaction product CPD-16941 was identified by LC-MS. Gel filtration chromatography demonstrated that none of the three enzymes formed complexes, indicating freely diffusible intermediates .    \n#>                                                      commonName\n#> 1                    UDP-&alpha;-D-galactofuranose biosynthesis\n#> 2                                          okenone biosynthesis\n#> 3               GDP-6-deoxy-D-<i>manno<\/i>-heptose biosynthesis\n#> 4 CMP-<i>N<\/i>-acetyl-7-<i>O<\/i>-acetylneuraminate biosynthesis\n#> 5                                        anditomin biosynthesis\n#> 6               2-amino-3-hydroxycyclopent-2-enone biosynthesis\n#>                            species\n#> 1 TAX-746128,TAX-330879,TAX-162425\n#> 2  TAX-572262,TAX-37487,TAX-244573\n#> 3                         ORG-6272\n#> 4                       TAX-316275\n#> 5                      TAX-1549217\n#> 6                         ORG-6265\n#>                                taxonomicRange\n#> 1 TAX-6231,TAX-3052,TAX-147538,TAX-5654,TAX-2\n#> 2                                    TAX-1046\n#> 3                                       TAX-2\n#> 4                                       TAX-2\n#> 5                                    TAX-4751\n#> 6                                  TAX-201174\n#>              query\n#> 1 Escherichia coli\n#> 2 Escherichia coli\n#> 3 Escherichia coli\n#> 4 Escherichia coli\n#> 5 Escherichia coli\n#> 6 Escherichia coli\n\n\nmetawc <- wcMan(input, \n                additionalRemove=c(\"cits\",\"frame\",\"pathway\"),\n                numWords=100,\n                 argList=list(\n                   rot.per=0.4,\n                   colors=RColorBrewer::brewer.pal(8, \"Set2\"),\n                   random.order=FALSE\n                 ))\nmetawc\n#> Type: manual\n#> Number of words: 100\n#> \n#> 537.2 Kb\nmetawc@wc\n\n\nmetanet <- wcMan(input[,c(\"query\",\"text\")], \n                additionalRemove=c(\"cits\",\"frame\",\"pathway\"),\n                numWords=20, plotType=\"network\", colorText=TRUE)\nmetanet\n#> Type: manual\n#> Number of words: 20\n#> \n#> 583.7 Kb\nmetanet@net\n\nmetanet2 <- wcMan(input, \n                additionalRemove=c(\"cits\",\"frame\",\"pathway\"),\n                numWords=20, plotType=\"network\", colorText=TRUE,\n                tag=TRUE, nodePal=RColorBrewer::brewer.pal(8, \"Set2\"))\n#> Bootstrap (r = 0.5)... Done.\n#> Bootstrap (r = 0.6)... Done.\n#> Bootstrap (r = 0.7)... Done.\n#> Bootstrap (r = 0.8)... Done.\n#> Bootstrap (r = 0.9)... Done.\n#> Bootstrap (r = 1.0)... Done.\n#> Bootstrap (r = 1.1)... Done.\n#> Bootstrap (r = 1.2)... Done.\n#> Bootstrap (r = 1.3)... Done.\n#> Bootstrap (r = 1.4)... Done.\n#> Including columns pathwayID and commonName to link with query\nmetanet2\n#> Type: manual\n#> Number of words: 20\n#> \n#> 666.3 Kb\nmetanet2@net\n# Set candSp to all and noComma to TRUE\ninput <- parseMetaCycPathway(file, candSp=\"all\", withTax = TRUE,noComma=TRUE)\n\n\ninput2 <- input[grepl(\"TAX-2157\",input$taxonomicRange),]\ninput2 <- input2[!duplicated(input2$pathwayID),]\nonlyText <- data.frame(input2[,c(\"text\")]) |> `colnames<-`(c(\"text\"))\ninput2Net <- wcMan(onlyText, plotType=\"network\", additionalRemove=c(\"cits\",\"frame\",\n                                               \"gene\",\"genes\",\"proteins\",\n                                               \"pathway\",\"pathways\",\"enzyme\",\"enzymes\",\n                                               \"bacteria\",\"reaction\",\"protein\",\"biosynthesis\",\n                                               \"organism\",\"organisms\"))\ninput2Net@net\ninput$converted <- convertMetaCyc(input$species)\ninput3 <- input[grepl(\"Bifidobacterium\",input$converted),]\ninput3 <- input3[!duplicated(input3$pathwayID),]\ninput3$query <- rep(\"Bifidobacterium\",nrow(input3))\ninput3 <- input3[,c(\"text\",\"pathwayID\",\"query\")]\ninput3Net <- wcMan(input3, plotType=\"network\", queryPlot=TRUE,\n                   additionalRemove=c(\"cits\",\"frame\",\n                    \"gene\",\"genes\",\"proteins\",\n                    \"pathway\",\"pathways\",\"enzyme\",\"enzymes\",\n                    \"bacteria\",\"reaction\",\"protein\",\"biosynthesis\",\n                    \"organism\",\"organisms\"))\n#> Including columns pathwayID to link with query\ninput3Net@net\nsessionInfo()\n#> R version 4.2.2 (2022-10-31 ucrt)\n#> Platform: x86_64-w64-mingw32/x64 (64-bit)\n#> Running under: Windows 10 x64 (build 19044)\n#> \n#> Matrix products: default\n#> \n#> locale:\n#> [1] LC_COLLATE=Japanese_Japan.utf8 \n#> [2] LC_CTYPE=Japanese_Japan.utf8   \n#> [3] LC_MONETARY=Japanese_Japan.utf8\n#> [4] LC_NUMERIC=C                   \n#> [5] LC_TIME=Japanese_Japan.utf8    \n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets \n#> [6] methods   base     \n#> \n#> loaded via a namespace (and not attached):\n#>  [1] rstudioapi_0.14 magrittr_2.0.3  knitr_1.41     \n#>  [4] xml2_1.3.3      downlit_0.4.2   R6_2.5.1       \n#>  [7] rlang_1.0.6     fastmap_1.1.0   stringr_1.5.0  \n#> [10] tools_4.2.2     xfun_0.36       cli_3.6.0      \n#> [13] jquerylib_0.1.4 withr_2.5.0     htmltools_0.5.4\n#> [16] yaml_2.3.6      digest_0.6.31   lifecycle_1.0.3\n#> [19] bookdown_0.31   vctrs_0.5.1     sass_0.4.4     \n#> [22] fs_1.5.2        memoise_2.0.1   glue_1.6.2     \n#> [25] cachem_1.0.6    evaluate_0.19   rmarkdown_2.19 \n#> [28] stringi_1.7.12  compiler_4.2.2  bslib_0.4.2    \n#> [31] jsonlite_1.8.4"},{"path":"pathview-text.html","id":"pathview-text","chapter":"9 Pathview text","heading":"9 Pathview text","text":"","code":""},{"path":"pathview-text.html","id":"ko-queries","chapter":"9 Pathview text","heading":"9.1 KO queries","text":"KEGG mapping plots produced pathview can populated text information (Luo Brouwer. 2013).Suppose example KEGG Orthology obtained microbiome-related experiments.\nusing MicrobiomeProfiler, enriched pathway using -representation analysis can obtained follows.raw pathview plotTo use pathviewText() one specify database retrieve text, \"refseq\" \"abstract\".\ndefault “refseq”, fetches information RefSeq database. case, KO number included RefSeq, thus abstract chosen. However, querying KO number useful. conver KO number EC number using KEGG REST API, fetches description using wcEC() function, query enzyme name PubMed. way, one must provide searchTerm obtained onlyTerm=TRUE, termMap, map KO EC. Note termMap must query description columns. Also, node.types=\"ortholog\" must passed pathview.","code":"\nlibrary(wcGeneSummary)\nlibrary(dplyr)\nlibrary(pathview);library(png)\nkos <- c(\"K00640\",\"K23304\",\"K01760\",\"K01697\",\"K00549\",\"K00899\")\nenriched <- MicrobiomeProfiler::enrichKO(kos)\nclusterProfiler::cnetplot(enriched)\n## As the output is PNG, this script is omitted.\npvInput <- rep(1,length(kos))\nnames(pvInput) <- kos\npathview(kos, pathway.id = \"00270\", species = \"ko\")\ngrid::rasterGrob(readPNG(\"ko00270.pathview.png\"), interpolate=FALSE)\n#> rastergrob[GRID.rastergrob.93]\n\necko <- data.table::fread(\"https://rest.kegg.jp/link/ko/ec\",\n                            header=FALSE)\necko$EC <- sapply(strsplit(ecko$V1, \":\"),\"[\",2)\necko$KO <- sapply(strsplit(ecko$V2, \":\"), \"[\", 2)\nfilt <- ecko[ ecko$KO %in% kos, ]\necnum <- filt$EC\ntermMap <- filt[,c(\"KO\",\"EC\")] |> `colnames<-`(c(\"query\",\"number\"))\necQuery <- wcEC(\"../enzyme.dat\", ecnum = ecnum, onlyTerm =TRUE)\n#> Processing EC file\necMap <- wcEC(\"../enzyme.dat\", ecnum = ecnum, onlyDf =TRUE)\n#> Processing EC file\ntermMap <- merge(termMap, ecMap[,c(\"number\",\"desc\")], by=\"number\") |>\n  `colnames<-`(c(\"number\",\"query\",\"description\"))\n\n## Main function\n\nhor <- pathviewText(kos, keyType = \"KO\",\n     target=\"abstract\",\n     pid = \"00270\",\n     org = \"ko\", \n     searchTerms = ecQuery,\n     termMap = termMap,\n     node.types=\"ortholog\")\n#> Proceeding without API key\n\nhor$concat\n\n## We can transpose the barplot by trans=TRUE\n\nver <- pathviewText(kos, keyType = \"KO\",\n     target=\"abstract\",\n     pid = \"00270\",\n     org = \"ko\", \n       trans = TRUE,\n     searchTerms = ecQuery,\n     termMap = termMap,\n     node.types=\"ortholog\")\n#> Proceeding without API key\n\nver$concat"},{"path":"pathview-text.html","id":"gene-queries","chapter":"9 Pathview text","heading":"9.2 Gene queries","text":"gene queries, can obtain plot using relatively simple query.returned osplot object can accessed name text list. Note nodes (words) within final network plotted. words included, path arguments argList include .","code":"\nquery <- c(\"TP53\",\"CDC45\",\"CDC6\")\n\nver <- pathviewText(query,\n     keyType = \"SYMBOL\",\n     target=\"abstract\",\n     pid = \"04110\",\n     org = \"hsa\")\n#> Converting to ENTREZID\n#>   Converted input genes: 3\n#> Proceeding without API key\n\nver$concat\nver$text\n#> Type: pubmed_abstract\n#> Number of words: 20\n#> TP53 OR CDC45 OR CDC6\n#> 377.3 Kb\n\nver <- pathviewText(query,\n     keyType = \"SYMBOL\",\n     target=\"abstract\",\n     pid = \"04110\",\n     org = \"hsa\", argList=list(numWords=Inf, corThresh=0))\n#> Converting to ENTREZID\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 3\n#> Info: Downloading xml files for hsa04110, 1/1 pathways..\n#> Info: Downloading png files for hsa04110, 1/1 pathways..\n#> Info: Working in directory C:/Users/nsato/Dropbox/build_wgcs/book\n#> Info: Writing image file hsa04110.custom.cols.png\n#> Proceeding without API key\n\nver$concat"},{"path":"application-examples.html","id":"application-examples","chapter":"10 Application examples","heading":"10 Application examples","text":"demonstrate use case package, investigates transcriptomic changes induced BK polyomavirus (BKPyV) infection renal proximal tubular epithelial cells (Assetta et al. 2016). Differentially expressed mRNAs 3 days post-infection obtained, -regulated mRNAs BKPyV infected cells examined.","code":""},{"path":"application-examples.html","id":"load-the-necessary-packages-and-genes","chapter":"10 Application examples","heading":"10.1 Load the necessary packages and genes","text":"","code":"\nlibrary(wcGeneSummary)\nlibrary(org.Hs.eg.db)\nlibrary(ggplot2)\nlibrary(ReactomePA);library(clusterProfiler)\nlibrary(ggraph);library(igraph)\nlibrary(ggforce) ## For genePathPlot\nload(system.file(\"extdata\", \"sysdata.rda\", package = \"wcGeneSummary\"))\ndegs <- d3degDownAssetta2016\nlength(degs)\n#> [1] 191\ndegs\n#>   [1] \"ABCB4\"           \"ABCB7\"           \"AKTIP\"          \n#>   [4] \"ALS2\"            \"ANKRA2\"          \"ANTXR1\"         \n#>   [7] \"APH1B\"           \"ARHGEF28\"        \"ARNTL\"          \n#>  [10] \"ATMIN\"           \"BDH2\"            \"BIRC2\"          \n#>  [13] \"BTG1\"            \"BTG2\"            \"C4A\"            \n#>  [16] \"C7orf60\"         \"C8orf4\"          \"CALCOCO1\"       \n#>  [19] \"CAPRIN2\"         \"CARS\"            \"CBLB\"           \n#>  [22] \"CCNDBP1\"         \"CCNG2\"           \"CCZ1B\"          \n#>  [25] \"CDC42EP3\"        \"CDH6\"            \"CFLAR\"          \n#>  [28] \"CHMP1B\"          \"CHMP4C\"          \"CLUAP1\"         \n#>  [31] \"COG2\"            \"COG3\"            \"CPQ\"            \n#>  [34] \"CROT\"            \"CTTNBP2NL\"       \"CYP4V2\"         \n#>  [37] \"DAB2\"            \"DDB2\"            \"DDX17\"          \n#>  [40] \"DDX5\"            \"DGKA\"            \"DHX32\"          \n#>  [43] \"DLG1\"            \"DYNC2LI1\"        \"DYRK2\"          \n#>  [46] \"EFHC1\"           \"EIF4A2\"          \"ERMAP\"          \n#>  [49] \"ERMARD\"          \"EXOC1\"           \"FAM134B\"        \n#>  [52] \"FAM160B1\"        \"FAM21C\"          \"FAM84B\"         \n#>  [55] \"FANK1\"           \"FAS\"             \"FBXO38\"         \n#>  [58] \"FCHO2\"           \"FGD6\"            \"FLJ22447\"       \n#>  [61] \"FMNL2\"           \"GADD45A\"         \"GJA1\"           \n#>  [64] \"GLIDR\"           \"GLT8D1\"          \"GOPC\"           \n#>  [67] \"GPBP1L1\"         \"GPR155\"          \"GPR75-ASB3\"     \n#>  [70] \"GRAMD3\"          \"HADHB\"           \"HCG11\"          \n#>  [73] \"HDAC9\"           \"HDHD2\"           \"HERPUD1\"        \n#>  [76] \"HSDL2\"           \"ICA1\"            \"ICK\"            \n#>  [79] \"IFNGR1\"          \"IFT46\"           \"IFT74\"          \n#>  [82] \"IRF6\"            \"ITGA2\"           \"ITGA6\"          \n#>  [85] \"ITGAV\"           \"ITGB6\"           \"KDM5B\"          \n#>  [88] \"KIF3A\"           \"KIF5B\"           \"KLHL20\"         \n#>  [91] \"KLHL24\"          \"KLHL9\"           \"KPNA5\"          \n#>  [94] \"KRCC1\"           \"L3MBTL3\"         \"LINC00657\"      \n#>  [97] \"LOC100131564\"    \"LZTFL1\"          \"MAMDC2\"         \n#> [100] \"MAP4K5\"          \"MAT2B\"           \"MBNL2\"          \n#> [103] \"MDM2\"            \"MECOM\"           \"MFSD1\"          \n#> [106] \"MGEA5\"           \"MICU3\"           \"MSANTD4\"        \n#> [109] \"NBPF11\"          \"NCBP2\"           \"NEAT1\"          \n#> [112] \"NTM\"             \"OGT\"             \"PAFAH1B2\"       \n#> [115] \"PAFAH2\"          \"PCMTD2\"          \"PDE4D\"          \n#> [118] \"PDP1\"            \"PELI1\"           \"PEX1\"           \n#> [121] \"PHF14\"           \"PHOSPHO2-KLHL23\" \"PIK3IP1\"        \n#> [124] \"PLA2R1\"          \"PLCB4\"           \"PLK2\"           \n#> [127] \"POLI\"            \"POSTN\"           \"PPAN-P2RY11\"    \n#> [130] \"PPFIBP1\"         \"PPP2CB\"          \"PRICKLE1\"       \n#> [133] \"PROS1\"           \"PSMD5-AS1\"       \"RAD17\"          \n#> [136] \"RHOQ\"            \"RIMKLB\"          \"RNA18S5\"        \n#> [139] \"RNF170\"          \"RNF20\"           \"RNU1-28P\"       \n#> [142] \"RPL23AP53\"       \"RRM2B\"           \"RRN3\"           \n#> [145] \"RRN3P1\"          \"SEMA3C\"          \"SERINC1\"        \n#> [148] \"SESN1\"           \"SESN3\"           \"SGK1\"           \n#> [151] \"SLC22A5\"         \"SLC37A3\"         \"SVIL\"           \n#> [154] \"SYT11\"           \"TARSL2\"          \"TBC1D19\"        \n#> [157] \"TBCK\"            \"TBRG1\"           \"TGFA\"           \n#> [160] \"TGFB2\"           \"TIPARP\"          \"TMEM136\"        \n#> [163] \"TNFRSF10B\"       \"TNFRSF10D\"       \"TOM1L1\"         \n#> [166] \"TP53INP1\"        \"TRIM13\"          \"TRIM32\"         \n#> [169] \"TRIM4\"           \"TSC1\"            \"TSPYL5\"         \n#> [172] \"UGT2B7\"          \"UNC13B\"          \"UPRT\"           \n#> [175] \"VPS41\"           \"VPS8\"            \"WDR11\"          \n#> [178] \"WDR19\"           \"XPC\"             \"YPEL2\"          \n#> [181] \"ZC2HC1A\"         \"ZFAND5\"          \"ZFP90\"          \n#> [184] \"ZFR\"             \"ZMAT3\"           \"ZNF12\"          \n#> [187] \"ZNF248\"          \"ZNF322\"          \"ZNF561\"         \n#> [190] \"ZNF626\"          \"ZSCAN30\""},{"path":"application-examples.html","id":"enrichment-analysis","chapter":"10 Application examples","heading":"10.2 Enrichment analysis","text":"First, perform enrichment analysis using ReactomePA.\nenrichment analysis results, cluster related transcriptional regulation TP53.store name enriched pathways network downstream analysis.","code":"\n## Convert to ENTREZID\nentre <- AnnotationDbi::select(org.Hs.eg.db, keytype=\"SYMBOL\",\n                               keys = degs, columns = \"ENTREZID\")$ENTREZID\npway <- setReadable(enrichPathway(entre), org.Hs.eg.db)\nsigpway <- subset(pway@result, p.adjust<0.05)\nsigpway$Description\n#>  [1] \"Transcriptional Regulation by TP53\"                              \n#>  [2] \"RIPK1-mediated regulated necrosis\"                               \n#>  [3] \"Regulation of necroptotic cell death\"                            \n#>  [4] \"Regulated Necrosis\"                                              \n#>  [5] \"Intraflagellar transport\"                                        \n#>  [6] \"Regulation by c-FLIP\"                                            \n#>  [7] \"CASP8 activity is inhibited\"                                     \n#>  [8] \"Dimerization of procaspase-8\"                                    \n#>  [9] \"TP53 Regulates Transcription of Death Receptors and Ligands\"     \n#> [10] \"Caspase activation via Death Receptors in the presence of ligand\"\n#> [11] \"FOXO-mediated transcription of cell cycle genes\"                 \n#> [12] \"TP53 Regulates Transcription of Cell Death Genes\"                \n#> [13] \"Cilium Assembly\"\ncnetplot(pway)\n\n## Genes involved in significant pathways\nexcheck <- unlist(unique(sapply(sigpway$geneID,\n                                function (x) strsplit(x,\"/\"))))\nexcheck\n#>  [1] \"BTG2\"      \"DDB2\"      \"DYRK2\"     \"FAS\"      \n#>  [5] \"GADD45A\"   \"MDM2\"      \"PLK2\"      \"PPP2CB\"   \n#>  [9] \"RAD17\"     \"RRM2B\"     \"SESN1\"     \"SESN3\"    \n#> [13] \"SGK1\"      \"TNFRSF10B\" \"TNFRSF10D\" \"TP53INP1\" \n#> [17] \"TSC1\"      \"BIRC2\"     \"CFLAR\"     \"FAS\"      \n#> [21] \"OGT\"       \"PELI1\"     \"TNFRSF10B\" \"BIRC2\"    \n#> [25] \"CFLAR\"     \"CHMP4C\"    \"FAS\"       \"OGT\"      \n#> [29] \"PELI1\"     \"TNFRSF10B\" \"CLUAP1\"    \"DYNC2LI1\" \n#> [33] \"IFT46\"     \"IFT74\"     \"KIF3A\"     \"WDR19\"    \n#> [37] \"CFLAR\"     \"FAS\"       \"TNFRSF10B\" \"FAS\"      \n#> [41] \"TNFRSF10B\" \"TNFRSF10D\" \"BTG1\"      \"CCNG2\"    \n#> [45] \"GADD45A\"   \"FAS\"       \"TNFRSF10B\" \"TNFRSF10D\"\n#> [49] \"TP53INP1\"  \"CLUAP1\"    \"DYNC2LI1\"  \"EXOC1\"    \n#> [53] \"IFT46\"     \"IFT74\"     \"KIF3A\"     \"LZTFL1\"   \n#> [57] \"WDR19\"\nnetreac <- wcGeneSummary(degs,\n                         enrich=\"reactome\",\n                         plotType=\"network\",\n                         numWords=50,\n                         colorText=TRUE)\n#> Input genes: 191\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n#>   Converted input genes: 175\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Performing enrichment analysis"},{"path":"application-examples.html","id":"text-mining-the-gene-summaries","chapter":"10 Application examples","heading":"10.3 Text mining the gene summaries","text":"Next perform plain function producing correlation network, showing top-genes related high-frequency words text RefSeq summary. obtained list genes geneCount slot.","code":"\nnet1 <- wcGeneSummary(excheck,\n                      plotType=\"network\",\n                      colorText=TRUE,\n                      numWords=30,\n                      corThresh=0.5,\n                      genePlot=TRUE,\n                      genePlotNum=5,\n                      edgeLink=FALSE,\n                      genePathPlot=\"reactome\")\n#> Input genes: 57\n#>   Converted input genes: 57\n#> Filter based on GeneSummary\n#> Filtered 65 words (frequency and/or tfidf)\n#> Found 27 enriched term\nnet1@net\nnet1@geneCount\n#> \n#>     RAD17     SESN1      TSC1      DDB2 TNFRSF10B      BTG1 \n#>         9         9         6         5         5         4 \n#>     DYRK2     BIRC2     CCNG2       FAS   GADD45A    LZTFL1 \n#>         4         3         3         3         3         3 \n#>      MDM2     SESN3      SGK1     CFLAR    CHMP4C       OGT \n#>         3         3         3         2         2         2 \n#> TNFRSF10D     WDR19      BTG2  DYNC2LI1     EXOC1     IFT74 \n#>         2         2         1         1         1         1 \n#>    PPP2CB     RRM2B \n#>         1         1\ntop <- names(net1@geneCount[net1@geneCount>=5])\ntop\n#> [1] \"RAD17\"     \"SESN1\"     \"TSC1\"      \"DDB2\"     \n#> [5] \"TNFRSF10B\""},{"path":"application-examples.html","id":"text-mining-the-available-literature","chapter":"10 Application examples","heading":"10.4 Text mining the available literature","text":"genes queried PubMed information.\nFirst, show network article titles.Obtain show network article abstract.","code":"\ntitlenet <- wcAbst(top,\n                   sortOrder=\"relevance\",\n                   target=\"title\",\n                   plotType=\"network\",\n                   colorText=TRUE,\n                   madeUpperGenes=FALSE,\n                   corThresh=0.2,\n                   preset=TRUE,\n                   retMax=40,\n                   numWords=40,\n                   edgeLink=FALSE)\n#> Proceeding without API key\ntitlenet@net\nabstnet <- wcAbst(top,\n                   target=\"abstract\",\n                   plotType=\"network\",\n                   colorText=TRUE,\n                   madeUpperGenes=FALSE,\n                   corThresh=0.2,\n                   preset=TRUE,\n                   retMax=40,\n                   numWords=40,\n                   edgeLink=FALSE)\n#> Proceeding without API key\nabstnet@net"},{"path":"application-examples.html","id":"combine-and-compare-networks","chapter":"10 Application examples","heading":"10.5 Combine and compare networks","text":"RefSeq summary articles related important genes, cluster functionality DNA damage response, also upregulated BKPyV infection. networks can combined find intersections differences. can see addition Reactome pathway names, plenty information obtained summarized querying databases, aid interpreting clusters genes hypothesis generation.network, DNA damage repair pathway, especially nucleotide excision repair related DDB2, METTL14,RAD17 might related BKPyV infection, prioritize based log2FoldChange enrichment analysis.network can obtained returnNet=TRUE, can used downstream analysis like assessment degrees community detection.Dynamic layout can also used compare networks, graphlayouts, comparing multiple graphs, especially useful time-series analysis. See documentation layout_as_dynamic specifying alpha, default 0.5.","code":"\ncompareWordNet(list(abstnet, titlenet, netreac, net1),\n               titles=c(\"Abstract\",\"Title\",\"Reactome\",\"RefSeq\"))\n#> Warning in RColorBrewer::brewer.pal(catNum, colPal): n too large, allowed maximum for palette Pastel1 is 9\n#> Returning the palette you asked for with that many colors\n#> Scale for colour is already present.\n#> Adding another scale for colour, which will replace the\n#> existing scale.\n#> Warning in grid.Call(C_stringMetric,\n#> as.graphicsAnnot(x$label)): font family not found in Windows\n#> font database\n#> Warning in grid.Call(C_stringMetric,\n#> as.graphicsAnnot(x$label)): font family not found in Windows\n#> font database\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\nconet <- compareWordNet(list(netreac,\n                    net1,\n                    titlenet,\n                    abstnet),\n               returnNet = TRUE)\n\nddrNms <- NULL\nfor (nm in names(V(conet))) {\n    if (tolower(nm) %in% c(\"dna\",\"damage\",\"repair\")) {\n        ddrNms <- c(ddrNms, names(neighbors(conet, nm)))\n    }\n}\nddrNms\n#>  [1] \"checkpoint\"      \"cycle\"           \"DNA\"            \n#>  [4] \"phosphorylation\" \"required\"        \"response\"       \n#>  [7] \"SESN1\"           \"DDB2\"            \"RAD17\"          \n#> [10] \"promotes\"        \"cellular\"        \"checkpoint\"     \n#> [13] \"cycle\"           \"damage\"          \"phosphorylation\"\n#> [16] \"required\"        \"response\"        \"SESN1\"          \n#> [19] \"DDB2\"            \"RAD17\"           \"Cancer\"         \n#> [22] \"degradation\"     \"promotes\"        \"protein\"        \n#> [25] \"regulates\"       \"Repair\"          \"CDT2\"           \n#> [28] \"chromatin\"       \"complex\"         \"Damage\"         \n#> [31] \"function\"        \"induced\"         \"NER\"            \n#> [34] \"DNA\"             \"DDB2\"            \"Excision\"       \n#> [37] \"Global\"          \"mice\"            \"Nucleotide\"     \n#> [40] \"protein\"         \"Proteins\"        \"level\"          \n#> [43] \"METTL14\"         \"NER\"             \"cellular\"       \n#> [46] \"DNA\"             \"response\"        \"RAD17\"          \n#> [49] \"Cancer\"          \"chromatin\"       \"function\"       \n#> [52] \"NER\"\n\nddrRelated <- induced.subgraph(conet,\n                 names(V(conet)) %in% unique(ddrNms))\nV(ddrRelated)$SYMBOL <- names(V(ddrRelated)) %in% keys(org.Hs.eg.db,\"SYMBOL\")\nggraph(ddrRelated)+\n    geom_edge_diagonal2(color=\"grey80\")+\n    geom_node_point(aes(color=SYMBOL))+\n    geom_node_text(aes(label=name, color=SYMBOL),check_overlap=TRUE, repel=TRUE,\n                   bg.color = \"white\", segment.color=\"black\",\n                   bg.r = .15)+\n    scale_color_manual(values=c(\"steelblue\",\"tomato\"))+\n    theme_graph()\n#> Using `stress` as default layout\n#> Warning: Using the `size` aesthetic in this geom was deprecated in\n#> ggplot2 3.4.0.\n#> ℹ Please use `linewidth` in the `default_aes` field and\n#>   elsewhere instead.\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\nconetDeg <- igraph::degree(conet)\nconetDeg[order(conetDeg, decreasing=TRUE)] |> head(15)\n#>       SESN1         DNA       RAD17        DDB2      Cancer \n#>          25          23          18          16          15 \n#>       Human     protein        TP53 degradation  activation \n#>          13          13          12          12          11 \n#>    response      Repair    cellular      damage   Carcinoma \n#>          11          11          10          10          10\n\nconet <- induced_subgraph(conet, conetDeg>1)\n\nwt <- igraph::walktrap.community(conet)\nigraph::V(conet)$walktrap <- wt$membership\npal <- RColorBrewer::brewer.pal(length(unique(wt$membership)),\n                                \"Dark2\") \n#> Warning in RColorBrewer::brewer.pal(length(unique(wt$membership)), \"Dark2\"): n too large, allowed maximum for palette Dark2 is 8\n#> Returning the palette you asked for with that many colors\npal <- colorRampPalette(pal)(20)\n\nggraph(conet)+\n    geom_edge_link(color=\"grey80\")+\n    geom_node_point(aes(color=factor(walktrap)), size=3)+\n    geom_node_text(aes(label=name, color=factor(walktrap)),\n                   check_overlap=TRUE, repel=TRUE,\n                   bg.color = \"white\", segment.color=\"black\",\n                   bg.r = .15)+\n    scale_color_manual(values=pal,\n                         name=\"Walktrap\")+\n    theme_graph()\n#> Using `stress` as default layout\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\n\n#> Warning in grid.Call(C_textBounds,\n#> as.graphicsAnnot(x$label), x$x, x$y, : font family not found\n#> in Windows font database\nlibrary(igraph)\ndyn <- plotDynamic(list(abstnet, titlenet), concat=\"intersection\",\n                   titles=c(\"Abstract\",\"Title\"), alpha=0.8)\ndyn\nsessionInfo()\n#> R version 4.2.2 (2022-10-31 ucrt)\n#> Platform: x86_64-w64-mingw32/x64 (64-bit)\n#> Running under: Windows 10 x64 (build 19044)\n#> \n#> Matrix products: default\n#> \n#> locale:\n#> [1] LC_COLLATE=Japanese_Japan.utf8 \n#> [2] LC_CTYPE=Japanese_Japan.utf8   \n#> [3] LC_MONETARY=Japanese_Japan.utf8\n#> [4] LC_NUMERIC=C                   \n#> [5] LC_TIME=Japanese_Japan.utf8    \n#> \n#> attached base packages:\n#> [1] stats4    stats     graphics  grDevices utils    \n#> [6] datasets  methods   base     \n#> \n#> other attached packages:\n#>  [1] ggforce_0.4.1         igraph_1.3.5         \n#>  [3] ggraph_2.1.0          clusterProfiler_4.6.0\n#>  [5] ReactomePA_1.42.0     ggplot2_3.4.0        \n#>  [7] org.Hs.eg.db_3.16.0   AnnotationDbi_1.60.0 \n#>  [9] IRanges_2.32.0        S4Vectors_0.36.1     \n#> [11] Biobase_2.58.0        BiocGenerics_0.44.0  \n#> [13] wcGeneSummary_0.99.0 \n#> \n#> loaded via a namespace (and not attached):\n#>   [1] shadowtext_0.1.2       fastmatch_1.1-3       \n#>   [3] plyr_1.8.8             lazyeval_0.2.2        \n#>   [5] splines_4.2.2          BiocParallel_1.32.5   \n#>   [7] GenomeInfoDb_1.34.6    digest_0.6.31         \n#>   [9] yulab.utils_0.0.6      htmltools_0.5.4       \n#>  [11] bugsigdbr_1.4.1        GOSemSim_2.24.0       \n#>  [13] viridis_0.6.2          GO.db_3.16.0          \n#>  [15] fansi_1.0.3            GeneSummary_0.99.4    \n#>  [17] magrittr_2.0.3         memoise_2.0.1         \n#>  [19] tm_0.7-10              Biostrings_2.66.0     \n#>  [21] graphlayouts_0.8.4     pvclust_2.2-0         \n#>  [23] wordcloud_2.6          enrichplot_1.18.3     \n#>  [25] colorspace_2.0-3       rappdirs_0.3.3        \n#>  [27] blob_1.2.3             ggrepel_0.9.2         \n#>  [29] xfun_0.36              dplyr_1.0.99.9000     \n#>  [31] crayon_1.5.2           RCurl_1.98-1.9        \n#>  [33] jsonlite_1.8.4         scatterpie_0.1.8      \n#>  [35] graph_1.76.0           ape_5.6-2             \n#>  [37] glue_1.6.2             polyclip_1.10-4       \n#>  [39] gtable_0.3.1           zlibbioc_1.44.0       \n#>  [41] XVector_0.38.0         GetoptLong_1.0.5      \n#>  [43] graphite_1.44.0        rentrez_1.2.3         \n#>  [45] scales_1.2.1           DOSE_3.24.2           \n#>  [47] DBI_1.1.3              Rcpp_1.0.9            \n#>  [49] viridisLite_0.4.1      xtable_1.8-4          \n#>  [51] tidytree_0.4.2         gridGraphics_0.5-1    \n#>  [53] reactome.db_1.82.0     bit_4.0.5             \n#>  [55] htmlwidgets_1.6.1      httr_1.4.4            \n#>  [57] fgsea_1.24.0           RColorBrewer_1.1-3    \n#>  [59] ellipsis_0.3.2         pkgconfig_2.0.3       \n#>  [61] XML_3.99-0.13          farver_2.1.1          \n#>  [63] sass_0.4.4             utf8_1.2.2            \n#>  [65] ggplotify_0.1.0        tidyselect_1.2.0      \n#>  [67] rlang_1.0.6            reshape2_1.4.4        \n#>  [69] later_1.3.0            munsell_0.5.0         \n#>  [71] tools_4.2.2            cachem_1.0.6          \n#>  [73] downloader_0.4         cli_3.6.0             \n#>  [75] generics_0.1.3         RSQLite_2.2.20        \n#>  [77] gson_0.0.9             evaluate_0.19         \n#>  [79] stringr_1.5.0          fastmap_1.1.0         \n#>  [81] ggdendro_0.1.23        yaml_2.3.6            \n#>  [83] ggtree_3.6.2           knitr_1.41            \n#>  [85] bit64_4.0.5            fs_1.5.2              \n#>  [87] tidygraph_1.2.2        purrr_1.0.1           \n#>  [89] KEGGREST_1.38.0        dendextend_1.16.0     \n#>  [91] nlme_3.1-161           mime_0.12             \n#>  [93] slam_0.1-50            aplot_0.1.9           \n#>  [95] xml2_1.3.3             compiler_4.2.2        \n#>  [97] rstudioapi_0.14        png_0.1-8             \n#>  [99] treeio_1.22.0          tibble_3.1.8          \n#> [101] tweenr_2.0.2           bslib_0.4.2           \n#> [103] stringi_1.7.12         cyjShiny_1.0.34       \n#> [105] lattice_0.20-45        Matrix_1.5-3          \n#> [107] vctrs_0.5.1            pillar_1.8.1          \n#> [109] lifecycle_1.0.3        jquerylib_0.1.4       \n#> [111] GlobalOptions_0.1.2    data.table_1.14.6     \n#> [113] cowplot_1.1.1          bitops_1.0-7          \n#> [115] httpuv_1.6.8           patchwork_1.1.2       \n#> [117] qvalue_2.30.0          R6_2.5.1              \n#> [119] bookdown_0.31          promises_1.2.0.1      \n#> [121] gridExtra_2.3          codetools_0.2-18      \n#> [123] MASS_7.3-58.1          rjson_0.2.21          \n#> [125] withr_2.5.0            GenomeInfoDbData_1.2.9\n#> [127] parallel_4.2.2         grid_4.2.2            \n#> [129] ggfun_0.0.9            tidyr_1.2.1           \n#> [131] HDO.db_0.99.1          rmarkdown_2.19        \n#> [133] downlit_0.4.2          NLP_0.2-1             \n#> [135] shiny_1.7.4            base64enc_0.1-3"},{"path":"parsing.html","id":"parsing","chapter":"11 Parsing","heading":"11 Parsing","text":"functions can used parsing purpose.","code":""},{"path":"parsing.html","id":"parsing-enzyme-comission-numbers-its-description-and-comment.","chapter":"11 Parsing","heading":"11.1 Parsing Enzyme Comission numbers, its description and comment.","text":"","code":"\nlibrary(wcGeneSummary)\n#> \n#> Registered S3 method overwritten by 'pvclust':\n#>   method       from      \n#>   text.pvclust dendextend\nlibrary(data.table)\necdf <- wcEC(\"../enzyme.dat\",ecnum=\"all\", onlyDf=TRUE)\n#> Processing EC file\ndata.table(ecdf) |> head()\n#>     number                                 desc\n#> 1: 1.1.1.1                alcohol dehydrogenase\n#> 2: 1.1.1.2      alcohol dehydrogenase (NADP(+))\n#> 3: 1.1.1.3             homoserine dehydrogenase\n#> 4: 1.1.1.4       (R,R)-butanediol dehydrogenase\n#> 5: 1.1.1.5 Transferred entry: 111303 and 111304\n#> 6: 1.1.1.6               glycerol dehydrogenase\n#>                                                                                                                                                                                                                                           comment\n#> 1: Acts on primary or secondary alcohols or hemi-acetals with very broad     specificity; however the enzyme oxidizes methanol much more poorly     than ethanol The animal, but not the yeast, enzyme acts also on cyclic secondary     alcohols\n#> 2:                                                    Some members of this group oxidize only primary alcohols; others act     also on secondary alcohols May be identical with EC 11119, EC 11133 and EC 11155 Re-specific with respect to NADPH\n#> 3:                 The enzyme from Saccharomyces cerevisiae acts most rapidly with     NAD(+); the Neurospora enzyme with NADP(+) The enzyme from Escherichia coli is a multifunctional protein, which     also catalyzes the reaction of EC 2724\n#> 4:                                                                                                                                                                                     Also converts diacetyl into acetoin with NADH as reductant\n#> 5:                                                                                                                                                                                                                                               \n#> 6:                                                                                                                                                                                                                   Also acts on 1,2-propanediol\ns\n#> 1: P07327,ADH1A_HUMAN;P28469,ADH1A_MACMU;Q5RBP7,ADH1A_PONAB;P25405,ADH1A_SAAHA;P25406,ADH1B_SAAHA;P00327,ADH1E_HORSE;P00326,ADH1G_HUMAN;O97959,ADH1G_PAPHA;P00328,ADH1S_HORSE;P80222,ADH1_ALLMI;P30350,ADH1_ANAPL;P49645,ADH1_APTAU;P06525,ADH1_ARATH;P41747,ADH1_ASPFN;Q17334,ADH1_CAEEL;P43067,ADH1_CANAX;P85440,ADH1_CATRO;P14219,ADH1_CENAM;P48814,ADH1_CERCA;Q70UN9,ADH1_CERCO;P23991,ADH1_CHICK;P86883,ADH1_COLLI;P19631,ADH1_COTJA;P23236,ADH1_OHY;P48586,ADH1_OMN;P09370,ADH1_OMO;P22246,ADH1_OMT;P07161,ADH1_OMU;P12854,ADH1_ONA;P08843,ADH1_EMENI;A0A165U5V5,ADH1_EUPLT;P26325,ADH1_GADMC;Q9Z2M2,ADH1_GEOAT;Q64413,ADH1_GEOBU;Q64415,ADH1_GEOKN;P12311,ADH1_GEOSE;P05336,ADH1_HORVU;P20369,ADH1_KLULA;Q07288,ADH1_KLUMA;P00333,ADH1_MAIZE;P86885,ADH1_MESAU;P00329,ADH1_MOUSE;P80512,ADH1_NAJNA;Q9P6C8,ADH1_NEUCR;Q75ZX4,ADH1_ORYSI;Q2R8Z5,ADH1_ORYSJ;P12886,ADH1_PEA;P22797,ADH1_PELPE;P41680,ADH1_PERMA;P25141,ADH1_PETHY;O00097,ADH1_PICST;Q03505,ADH1_RABIT;P06757,ADH1_RAT;P14673,ADH1_SOLTU;P80338,ADH1_STRCA;P13603,ADH1_TRIRP;P00330,ADH1_YEAST;Q07264,ADH1_ZEALU;P20368,ADH1_ZYMMO;O45687,ADH2_CAEEL;O94038,ADH2_CANAL;P48815,ADH2_CERCA;Q70UP5,ADH2_CERCO;Q70UP6,ADH2_CERRO;P27581,ADH2_OAR;P25720,ADH2_OBU;P23237,ADH2_OHY;P48587,ADH2_OMN;P09369,ADH2_OMO;P07160,ADH2_OMU;P24267,ADH2_OWH;P37686,ADH2_ECOLI;P54202,ADH2_EMENI;Q24803,ADH2_ENTHI;P42327,ADH2_GEOSE;P10847,ADH2_HORVU;P49383,ADH2_KLULA;Q9P4C2,ADH2_KLUMA;P04707,ADH2_MAIZE;Q4R1E8,ADH2_ORYSI;Q0ITW7,ADH2_ORYSJ;O13309,ADH2_PICST;P28032,ADH2_SOLLC;P14674,ADH2_SOLTU;F2Z678,ADH2_YARLI;P00331,ADH2_YEAST;F8DVL8,ADH2_ZYMMA;P0DJA2,ADH2_ZYMMO;P07754,ADH3_EMENI;P42328,ADH3_GEOSE;P10848,ADH3_HORVU;P49384,ADH3_KLULA;P14675,ADH3_SOLTU;P07246,ADH3_YEAST;P49385,ADH4_KLULA;Q09669,ADH4_SCHPO;A6ZTT5,ADH4_YEAS7;P10127,ADH4_YEAST;Q6XQ67,ADH5_SACPS;P38113,ADH5_YEAST;P28332,ADH6_HUMAN;P41681,ADH6_PERMA;Q5R7Z8,ADH6_PONAB;Q5XI95,ADH6_RAT;P40394,ADH7_HUMAN;Q64437,ADH7_MOUSE;P41682,ADH7_RAT;P9WQC0,ADHA_MYCTO;P9WQC1,ADHA_MYCTU;O31186,ADHA_RHIME;Q7U1B9,ADHB_MYCBO;P9WQC6,ADHB_MYCTO;P9WQC7,ADHB_MYCTU;P9WQB8,ADHD_MYCTO;P9WQB9,ADHD_MYCTU;P33744,ADHE_CLOAB;P0A9Q8,ADHE_ECO57;P0A9Q7,ADHE_ECOLI;P81600,ADHH_GADMO;P72324,ADHI_CERS4;Q9SK86,ADHL1_ARATH;Q9SK87,ADHL2_ARATH;A1L4Y2,ADHL3_ARATH;Q8VZ49,ADHL4_ARATH;Q0V7W6,ADHL5_ARATH;Q8LEB2,ADHL6_ARATH;Q9FH04,ADHL7_ARATH;P81601,ADHL_GADMO;P39451,ADHP_ECOLI;O46649,ADHP_RABIT;O46650,ADHQ_RABIT;Q96533,ADHX_ARATH;Q3ZC42,ADHX_BOVIN;Q17335,ADHX_CAEEL;Q54TC2,ADHX_DICDI;P46415,ADHX_OME;P19854,ADHX_HORSE;P11766,ADHX_HUMAN;P93629,ADHX_MAIZE;P28474,ADHX_MOUSE;P80360,ADHX_MYXGL;P81431,ADHX_OCTVU;A2XAZ3,ADHX_ORYSI;Q0DWH1,ADHX_ORYSJ;P80572,ADHX_PEA;O19053,ADHX_RABIT;P12711,ADHX_RAT;P80467,ADHX_SAAHA;P86884,ADHX_SCYCA;P79896,ADHX_SPAAU;Q9NAR7,ADH_BACOL;P14940,ADH_CUPNE;Q0KDL6,ADH_CUPNH;Q00669,ADH_OAD;P21518,ADH_OAF;P25139,ADH_OAM;Q50L96,ADH_OAN;P48584,ADH_OBO;P22245,ADH_ODI;Q9NG42,ADH_OEQ;P28483,ADH_OER;P48585,ADH_OFL;P51551,ADH_OGR;Q09009,ADH_OGU;P51549,ADH_OHA;P21898,ADH_OHE;Q07588,ADH_OIM;Q9NG40,ADH_OIN;Q27404,ADH_OLA;P10807,ADH_OLE;P07162,ADH_OMA;Q09010,ADH_OMD;P00334,ADH_OME;Q00671,ADH_OMM;P25721,ADH_OMY;Q00672,ADH_ONI;P07159,ADH_OOR;P84328,ADH_OPB;P37473,ADH_OPE;P23361,ADH_OPI;P23277,ADH_OPL;Q6LCE4,ADH_OPS;Q9U8S9,ADH_OPU;Q9GN94,ADH_OSE;Q24641,ADH_OSI;P23278,ADH_OSL;Q03384,ADH_OSU;P28484,ADH_OTE;P51550,ADH_OTS;B4M8Y0,ADH_OVI;Q05114,ADH_OWI;P26719,ADH_OYA;P17648,ADH_FRAAN;P48977,ADH_MALDO;Q8GIX7,ADH_MORSE;P9WQC2,ADH_MYCTO;P9WQC3,ADH_MYCTU;P39462,ADH_SACS2;P25988,ADH_SCAAL;Q00670,ADH_SCACA;P00332,ADH_SCHPO;Q2FJ31,ADH_STAA3;Q2G0G1,ADH_STAA8;Q2YSX0,ADH_STAAB;Q5HI63,ADH_STAAC;Q99W07,ADH_STAAM;Q7A742,ADH_STAAN;Q6GJ63,ADH_STAAR;Q6GBM4,ADH_STAAS;Q8NXU1,ADH_STAAW;Q5HRD6,ADH_STAEQ;Q8CQ56,ADH_STAES;Q4J781,ADH_SULAC;P50381,ADH_SULSR;Q96XE0,ADH_SULTO;A0A0S1X9S7,ADH_THEBA;P51552,ADH_ZAPTU;Q5AR48,ASQE_EMENI;A5JYX5,DHS3_CAEEL;P76553,EUTG_ECOLI;P41795,EUTG_SALTY;P32771,FADH_YEAST;A7ZIA4,FRMA_ECO24;Q8X5J4,FRMA_ECO57;A7ZX04,FRMA_ECOHS;A1A835,FRMA_ECOK1;Q0TKS7,FRMA_ECOL5;Q8FKG1,FRMA_ECOL6;B1J085,FRMA_ECOLC;P25437,FRMA_ECOLI;B1LIP1,FRMA_ECOSM;Q1RFI7,FRMA_ECOUT;P44557,FRMA_HAEIN;P39450,FRMA_PHODP;Q3Z550,FRMA_SHISS;P73138,FRMA_SYNY3;E1ACQ9,NOTN_ASPSM;N4WE73,OXI1_COCH4;N4WE43,RED2_COCH4;N4WW42,RED3_COCH4;P33010,TERPD_PSESP;O07737,Y1895_MYCTU\nnnn#> 5:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n},{"path":"parsing.html","id":"parsing-uniprot-organism-identifiers.","chapter":"11 Parsing","heading":"11.2 Parsing UniProt organism identifiers.","text":"","code":"\nupdf <- getUPtax(\"../speclist.txt\",candUP=\"all\")\ndata.table(updf) |> head()\n#>     UPID                                           Taxonomy\n#> 1: AADNV Aedes albopictus densovirus (isolate Boublik/1994)\n#> 2:  AAV2                           Adeno-associated virus 2\n#> 3: AAV2S Adeno-associated virus 2 (isolate Srivastava/1982)\n#> 4: ABAMA                                     Abacion magnum\n#> 5: ABANI                                     Abaeis nicippe\n#> 6: ABAPA                              Abax parallelepipedus"}]
