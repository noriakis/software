[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"documentation R package stana. stana developed analysis intra-species diversity R environment.","code":""},{"path":"index.html","id":"motivation","chapter":"1 About","heading":"1.1 Motivation","text":"Computational pipelines developed illuminate intra-species diversity, derived single nucleotide variants (SNVs) gene contents species. However, limited software performing integrated analyses, resulting unprepared environment. developed R package named stana, integrate analyse data generated metagenomic sequences. package allows necessary preprocessing, functional analysis, statistical analysis, visualization results.","code":""},{"path":"importing.html","id":"importing","chapter":"2 Importing","heading":"2 Importing","text":"stana aimed import metagenotyping results various pipelines.\npackage designed primarily MIDAS MIDAS2, outputs \ngene abundances default.","code":"\nlibrary(stana)"},{"path":"importing.html","id":"midas","chapter":"2 Importing","heading":"2.1 MIDAS","text":"MIDAS, loadMIDAS function can used import output merge command.","code":""},{"path":"importing.html","id":"midas2","chapter":"2 Importing","heading":"2.2 MIDAS2","text":"MIDAS2, loadMIDAS2 function can used import output merge command.","code":""},{"path":"importing.html","id":"instrain","chapter":"2 Importing","heading":"2.3 inStrain","text":"inStrain, need compare command output, profile command. First like know species profiled. just_species option list species table. , load example dataset profiled inStrain, using default database described original tutorial. inStrain, loading SNV tables often impossible, must specify candidate_species investigation.recalculates minor allele frequency based pooled SNV information (individual SNV information), thus takes long time case number profiled positions large. can set cl argument needed.","code":"\nsp <- loadInStrain(\"../inStrain_out\", just_species=TRUE)\nsp\n#>  [1] \"GUT_GENOME000022\" \"GUT_GENOME000024\"\n#>  [3] \"GUT_GENOME000147\" \"GUT_GENOME000220\"\n#>  [5] \"GUT_GENOME000221\" \"GUT_GENOME000224\"\n#>  [7] \"GUT_GENOME000225\" \"GUT_GENOME000231\"\n#>  [9] \"GUT_GENOME000509\" \"GUT_GENOME007566\"\n#> [11] \"GUT_GENOME009103\" \"GUT_GENOME031782\"\n#> [13] \"GUT_GENOME034989\" \"GUT_GENOME044231\"\n#> [15] \"GUT_GENOME067546\" \"GUT_GENOME068725\"\n#> [17] \"GUT_GENOME080972\" \"GUT_GENOME090701\"\n#> [19] \"GUT_GENOME094995\" \"GUT_GENOME096045\"\n#> [21] \"GUT_GENOME096080\" \"GUT_GENOME096083\"\n#> [23] \"GUT_GENOME096473\" \"GUT_GENOME096573\"\n#> [25] \"GUT_GENOME102034\" \"GUT_GENOME103721\"\n#> [27] \"GUT_GENOME104570\" \"GUT_GENOME109880\"\n#> [29] \"GUT_GENOME112794\" \"GUT_GENOME113322\"\n#> [31] \"GUT_GENOME114679\" \"GUT_GENOME115272\"\n#> [33] \"GUT_GENOME115357\" \"GUT_GENOME116258\"\n#> [35] \"GUT_GENOME116897\" \"GUT_GENOME117271\"\n#> [37] \"GUT_GENOME132077\" \"GUT_GENOME135463\"\n#> [39] \"GUT_GENOME140076\" \"GUT_GENOME142015\"\n#> [41] \"GUT_GENOME142390\" \"GUT_GENOME143131\"\n#> [43] \"GUT_GENOME143211\" \"GUT_GENOME143348\"\n#> [45] \"GUT_GENOME143497\" \"GUT_GENOME143505\"\n#> [47] \"GUT_GENOME149497\" \"GUT_GENOME156849\"\n#> [49] \"GUT_GENOME174809\" \"GUT_GENOME175554\"\n#> [51] \"GUT_GENOME189814\" \"GUT_GENOME195293\"\n#> [53] \"GUT_GENOME208589\" \"GUT_GENOME210309\"\n#> [55] \"GUT_GENOME210710\" \"GUT_GENOME217823\"\n#> [57] \"GUT_GENOME217842\" \"GUT_GENOME217850\"\n#> [59] \"GUT_GENOME234840\" \"GUT_GENOME252930\"\n#> [61] \"GUT_GENOME258721\" \"GUT_GENOME261411\"\n#> [63] \"GUT_GENOME272874\" \"GUT_GENOME274362\"\n#> [65] \"GUT_GENOME275708\" \"GUT_GENOME277090\"\n#> [67] \"GUT_GENOME284693\" \"GUT_GENOME286118\"\ninstr_chk <- \"GUT_GENOME142015\"\ninstr <- loadInStrain(\"../inStrain_out\", instr_chk, skip_pool=FALSE) ## Load MAF table\n#> Loading allele count table\n#> Loading key table\n#> Loading info table\n#> Candidate species: GUT_GENOME142015\n#>   Candidate key numbers: 1\n#>   Dimension of pooled SNV table for species: 2359827\n#> Calculating MAF\ninstr\n#> Type: InStrain\n#> Directory: ../inStrain_out\n#> Species number: 68\n#> Loaded SNV table: 1\n#> Loaded gene table (): 0\n#> 70.4 Mb"},{"path":"importing.html","id":"metasnv","chapter":"2 Importing","heading":"2.4 metaSNV","text":"","code":""},{"path":"importing.html","id":"gt-pro","chapter":"2 Importing","heading":"2.5 GT-Pro","text":"","code":""},{"path":"visualization.html","id":"visualization","chapter":"3 Visualization","heading":"3 Visualization","text":"stana offers visualization functions can interpret profiled data.","code":"\nlibrary(stana)\nlibrary(ComplexHeatmap)\n#> Loading required package: grid\n#> ========================================\n#> ComplexHeatmap version 2.14.0\n#> Bioconductor page: http://bioconductor.org/packages/ComplexHeatmap/\n#> Github page: https://github.com/jokergoo/ComplexHeatmap\n#> Documentation: http://jokergoo.github.io/ComplexHeatmap-reference\n#> \n#> If you use it in published research, please cite either one:\n#> - Gu, Z. Complex Heatmap Visualization. iMeta 2022.\n#> - Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional \n#>     genomic data. Bioinformatics 2016.\n#> \n#> \n#> The new InteractiveComplexHeatmap package can directly export static \n#> complex heatmaps into an interactive Shiny app with zero effort. Have a try!\n#> \n#> This message can be suppressed by:\n#>   suppressPackageStartupMessages(library(ComplexHeatmap))\n#> ========================================"},{"path":"visualization.html","id":"visualization-of-gene-abundances","chapter":"3 Visualization","heading":"3.1 Visualization of gene abundances","text":"","code":""},{"path":"visualization.html","id":"visualization-of-functional-analysis-results","chapter":"3 Visualization","heading":"3.2 Visualization of functional analysis results","text":"","code":""},{"path":"visualization.html","id":"visualization-of-instrain-results","chapter":"3 Visualization","heading":"3.3 Visualization of inStrain results","text":"imported inStrain compare profiles can visualized. loaded genome-wide comparison table strain cluster table can visualized using genomeHeatmap strainClusterHeatmap ComplexHeatmap. genomeHeatmap, typically population ANI consensus ANI plotted, columns listed genomeWide_compare.tsv can plotted. parameters passed Heatmap can specified heatmapArgs. cluster information (stana@cl) available cl specified, columns split present grouping.","code":"\ninstr_chk <- \"GUT_GENOME142015\"\ninstr <- loadInStrain(\"../inStrain_out\", instr_chk)\ngenomeHeatmap(instr, instr_chk, column = \"popANI\", heatmapArgs = list(show_column_name=FALSE))\nstrainClusterHeatmap(instr, instr_chk, heatmapArgs = list(show_column_name=FALSE))"}]
